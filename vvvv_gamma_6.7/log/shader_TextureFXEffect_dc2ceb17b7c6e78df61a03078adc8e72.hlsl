/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Tunnels_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {Distance = InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>}, {FogColor = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {FogDistance = InputFloat<ShaderFX.InputValueFloat.i4,PerUpdate>}, {Offset = InputFloat<ShaderFX.InputValueFloat.i3,PerUpdate>}, {Rotation = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {Time = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P Time: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Rotation: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P Distance: InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>
@P Offset: InputFloat<ShaderFX.InputValueFloat.i3,PerUpdate>
@P FogDistance: InputFloat<ShaderFX.InputValueFloat.i4,PerUpdate>
@P FogColor: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 64]
@C    InputValue_id95 => ShaderFX.InputValueFloat4
@C    InputValue_id96 => ShaderFX.InputValueFloat.i2
@C    InputValue_id97 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id98 => ShaderFX.InputValueFloat.i4
@C    InputValue_id99 => ShaderFX.InputValueFloat.i3
@C    InputValue_id100 => ShaderFX.InputValueFloat.i1
@C    InputValue_id101 => ShaderFX.InputValueFloat
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Type_id88 => Tunnels_Internal_TextureFX.Type
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Tunnels_Internal_TextureFX => 5f8007a151171cec689e13ffe255387a
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 253 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_dc2ceb17b7c6e78df61a03078adc8e72.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 257
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => f6c4a6b13c67e7161fdc7684fe497761
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id95;            // Offset:    0 Size:    16
//   float InputValue_id96;             // Offset:   16 Size:     4
//   float4 InputValue_id97;            // Offset:   32 Size:    16
//   float InputValue_id98;             // Offset:   48 Size:     4
//   float InputValue_id99;             // Offset:   52 Size:     4
//   float InputValue_id100;            // Offset:   56 Size:     4
//   float InputValue_id101;            // Offset:   60 Size:     4
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int Type_id88;                     // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler0_id52                     sampler      NA          NA             s0      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 232 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_dc2ceb17b7c6e78df61a03078adc8e72.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 211
mad r1.xy, v1.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r1.x <- p.y; r1.y <- p.x

#line 213
udiv null, r1.z, cb1[5].x, l(3)
switch r1.z

#line 216
  case l(0)

#line 201
  mul r2.y, cb0[3].z, l(6.283185)

#line 165
  sincos r3.x, r4.x, r2.y

#line 166
  mul r2.yz, r1.xxyx, r3.xxxx

#line 165
  mad r2.y, r4.x, r1.y, r2.y  // r2.y <- x

#line 166
  mad r2.z, r4.x, r1.x, -r2.z  // r2.z <- y

#line 200
  mul r2.w, r2.y, r2.y
  mul r3.xy, r2.wzww, r2.wzww
  mul r3.z, r3.y, r3.y
  mul r3.y, r3.z, r3.y
  mad r2.w, r2.w, r3.x, r3.y
  mul r3.x, cb0[1].x, l(8.000000)
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
  log r2.w, r2.w
  mul r2.w, r2.w, r3.x
  exp r2.x, r2.w  // r2.x <- r

#line 201
  div r2.w, l(0.500000), r2.x
  mad r1.z, cb0[3].w, l(0.500000), r2.w  // r1.z <- uv.x

#line 202
  min r2.w, |r2.y|, |r2.z|
  max r3.x, |r2.y|, |r2.z|
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
  mul r2.w, r2.w, r3.x
  mul r3.x, r2.w, r2.w
  mad r3.y, r3.x, l(0.020835), l(-0.085133)
  mad r3.y, r3.x, r3.y, l(0.180141)
  mad r3.y, r3.x, r3.y, l(-0.330299)
  mad r3.x, r3.x, r3.y, l(0.999866)
  mul r3.y, r2.w, r3.x
  lt r3.z, |r2.y|, |r2.z|
  mad r3.y, r3.y, l(-2.000000), l(1.570796)
  and r3.y, r3.z, r3.y
  mad r2.w, r2.w, r3.x, r3.y
  lt r3.x, r2.y, -r2.y
  and r3.x, r3.x, l(0xc0490fdb)
  add r2.w, r2.w, r3.x
  min r3.x, r2.y, r2.z
  max r2.y, r2.y, r2.z
  lt r2.z, r3.x, -r3.x
  ge r2.y, r2.y, -r2.y
  and r2.y, r2.y, r2.z
  movc r2.y, r2.y, -r2.w, r2.w
  mad r1.w, r2.y, l(0.318309), cb0[3].y  // r1.w <- uv.y

#line 218
  break 

#line 219
  case l(1)

#line 190
  min r2.y, |r1.y|, |r1.x|
  max r2.z, |r1.y|, |r1.x|
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
  mul r2.y, r2.z, r2.y
  mul r2.z, r2.y, r2.y
  mad r2.w, r2.z, l(0.020835), l(-0.085133)
  mad r2.w, r2.z, r2.w, l(0.180141)
  mad r2.w, r2.z, r2.w, l(-0.330299)
  mad r2.z, r2.z, r2.w, l(0.999866)
  mul r2.w, r2.z, r2.y
  lt r3.x, |r1.y|, |r1.x|
  mad r2.w, r2.w, l(-2.000000), l(1.570796)
  and r2.w, r3.x, r2.w
  mad r2.y, r2.y, r2.z, r2.w
  lt r2.z, r1.y, -r1.y
  and r2.z, r2.z, l(0xc0490fdb)
  add r2.y, r2.z, r2.y
  min r2.z, r1.y, r1.x
  max r2.w, r1.y, r1.x
  lt r2.z, r2.z, -r2.z
  ge r2.w, r2.w, -r2.w
  and r2.z, r2.w, r2.z
  movc r2.y, r2.z, -r2.y, r2.y  // r2.y <- a

#line 191
  dp2 r2.z, r1.xyxx, r1.xyxx
  sqrt r2.z, r2.z
  add r2.w, -cb0[1].x, l(1.000000)
  mul r2.x, r2.w, r2.z  // r2.x <- r

#line 192
  div r2.z, l(0.500000), r2.x
  mad r1.z, cb0[3].w, l(0.500000), r2.z  // r1.z <- uv.x

#line 193
  mad r1.w, r2.y, l(0.318309), cb0[3].z  // r1.w <- uv.y

#line 221
  break 

#line 222
  case l(2)

#line 181
  sincos r3.x, r4.x, cb0[3].z

#line 182
  mul r2.yz, r1.xxyx, r3.xxxx

#line 181
  mad r1.y, r1.y, r4.x, -r2.y  // r1.y <- x

#line 182
  mad r2.x, r1.x, r4.x, r2.z  // r2.x <- y

#line 183
  mul r1.x, r1.y, l(0.250000)
  div r1.x, r1.x, |r2.x|
  mad r1.x, r1.x, cb0[1].x, cb0[3].y
  add r1.z, r1.x, l(0.500000)  // r1.z <- uv.x

#line 184
  div r1.x, l(0.250000), |r2.x|
  mul r1.x, r1.x, cb0[1].x
  mad r1.w, cb0[3].w, l(0.250000), r1.x  // r1.w <- uv.y

#line 224
  break   // r1.x <- p.y; r1.y <- p.x

#line 225
endswitch   // r1.z <- tunnel.x; r1.w <- tunnel.y; r2.x <- tunnel.z

#line 226
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)  // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z; r1.w <- col.w

#line 227
mul r2.y, cb0[3].x, l(10.000000)
div r2.x, r2.x, cb0[1].x
mul r2.x, r2.x, r2.x
mad r2.x, r2.y, r2.x, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x  // r2.x <- fog

#line 228
add r3.xyzw, -r1.xyzw, cb0[2].xyzw
mad r1.xyzw, r2.xxxx, r3.xyzw, r1.xyzw  // r1.x <- <Filter_id32 return value>.x; r1.y <- <Filter_id32 return value>.y; r1.z <- <Filter_id32 return value>.z; r1.w <- <Filter_id32 return value>.w

#line 237
add r1.xyzw, -r0.xyzw, r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 246
ret 
// Approximately 104 instruction slots used
***************************
*************************/
static const float TwoPi_id80 = 6.283185307179586476925286766559;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id95;
    float InputValue_id96;
    float4 InputValue_id97;
    float InputValue_id98;
    float InputValue_id99;
    float InputValue_id100;
    float InputValue_id101;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int Type_id88;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float Compute_id37()
{
    return InputValue_id101;
}
float Compute_id38()
{
    return InputValue_id99;
}
float Compute_id36()
{
    return InputValue_id96;
}
float Compute_id35()
{
    return InputValue_id100;
}
float2 r2dCyc_id25(float2 pt, float a)
{
    a *= TwoPi_id80;
    float x = cos(a) * pt.x + sin(a) * pt.y;
    float y = cos(a) * pt.y - sin(a) * pt.x;
    return float2(x, y);
}
float4 Compute_id34()
{
    return InputValue_id97;
}
float Compute_id39()
{
    return InputValue_id98;
}
float3 TunnelFly_id31(float2 p)
{
    float2 uv;
    float an = Compute_id35();
    float x = p.x * cos(an) - p.y * sin(an);
    float y = p.x * sin(an) + p.y * cos(an);
    uv.x = 0.25 * x / abs(y) * Compute_id36() + (Compute_id38() + 0.5);
    uv.y = 0.25 * Compute_id37() + .25 / abs(y) * Compute_id36();
    return float3(uv, y);
}
float3 TunnelCylinder_id30(float2 p)
{
    float2 uv;
    float a = atan2(p.y, p.x);
    float r = sqrt(dot(p, p)) * (1 - Compute_id36());
    uv.x = .5 * Compute_id37() + .5 / r;
    uv.y = (a / (3.1416)) + Compute_id35();
    return float3(uv, r);
}
float3 TunnelSquare_id29(float2 p)
{
    float2 pRot = r2dCyc_id25(p, Compute_id35());
    float2 uv;
    float r = pow(pow(pRot.x * pRot.x, 3) + pow(pRot.y * pRot.y, 3), 1.0 / (Compute_id36() * 8));
    uv.x = .5 * Compute_id37() + 0.5 / r;
    uv.y = (atan2(pRot.y, pRot.x) / 3.1416 + Compute_id38());
    return float3(uv, r);
}
float4 Compute_id33()
{
    return InputValue_id95;
}
float4 Filter_id32(inout PS_STREAMS streams, float4 tex0col)
{
    float2 p = -1.0 + 2.0 * streams.TexCoord_id62;
    float3 tunnel;
    switch ((uint)Type_id88 % 3)

    {
        case 0:
            tunnel = TunnelSquare_id29(p);
            break;
        case 1:
            tunnel = TunnelCylinder_id30(p);
            break;
        case 2:
            tunnel = TunnelFly_id31(p);
            break;
    }
    float4 col = Texture0_id14.SampleLevel(Sampler0_id52, tunnel.xy, 0);
    float fog = 1 / (1 + (Compute_id39() * 10.0) * pow(tunnel.z / Compute_id36(), 2));
    return lerp(col, Compute_id34(), fog);
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id32(streams, col), Compute_id33());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
