/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Noise_Internal_TextureFX [{ColorA = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {ColorB = InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>}, {Offset = InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>}, {Scale = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {Z = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P ColorA: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
@P ColorB: InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>
@P Scale: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P Offset: InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>
@P Z: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 64]
@C    InputValue_id93 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id94 => ShaderFX.InputValueFloat4_Color.i1
@C    InputValue_id95 => ShaderFX.InputValueFloat2.i1
@C    InputValue_id96 => ShaderFX.InputValueFloat2
@C    InputValue_id97 => ShaderFX.InputValueFloat
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Type_id92 => Noise_Internal_TextureFX.Type
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Noise_Internal_TextureFX => e39b9a599a2ec6dc51519ad6dff1c181
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    HappyNoise => d86fc81a4658d834c4469475a2fd4a22
@S    HappyCalc => be0c19fec328227d547efda089b00cc5
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 508 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_9f69d06d5767ab10db609eb5053b0cb3.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 512
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 0c7d5b003e9c55afaa943d8b0c7b6599
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id93;            // Offset:    0 Size:    16
//   float4 InputValue_id94;            // Offset:   16 Size:    16
//   float2 InputValue_id95;            // Offset:   32 Size:     8
//   float2 InputValue_id96;            // Offset:   40 Size:     8
//   float InputValue_id97;             // Offset:   48 Size:     4
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int Type_id92;                     // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 17
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 464 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_9f69d06d5767ab10db609eb5053b0cb3.hlsl"
switch cb1[5].x

#line 467
  case l(0)

#line 468
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 415
  round_ni r2.xy, r1.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y
  round_ni r2.z, cb0[3].x  // r2.z <- Pi.z

#line 416
  mov r1.z, cb0[3].x
  add r1.xyz, r1.xyzx, -r2.xyzx  // r1.x <- Pf.x; r1.y <- Pf.y; r1.z <- Pf.z

#line 417
  add r2.w, r1.z, l(-1.000000)  // r2.w <- Pf_min1.z

#line 418
  mul r3.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r3.xyz, r3.xyzx
  mad r2.xyz, -r3.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 419
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 420
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 421
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 422
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 423
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mod.x; r2.y <- lowz_mod.y; r2.z <- lowz_mod.z

#line 424
  mad r3.xyz, r3.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx  // r3.x <- highz_mod.x; r3.y <- highz_mod.y; r3.z <- highz_mod.z

#line 425
  mul r5.xyzw, r2.xxxx, r4.xyzw
  frc r5.xyzw, r5.xyzw  // r5.x <- hashx0.x; r5.y <- hashx0.y; r5.z <- hashx0.z; r5.w <- hashx0.w

#line 426
  mul r6.xyzw, r3.xxxx, r4.xyzw
  frc r6.xyzw, r6.xyzw  // r6.x <- hashx1.x; r6.y <- hashx1.y; r6.z <- hashx1.z; r6.w <- hashx1.w

#line 427
  mul r7.xyzw, r2.yyyy, r4.xyzw
  frc r7.xyzw, r7.xyzw  // r7.x <- hashy0.x; r7.y <- hashy0.y; r7.z <- hashy0.z; r7.w <- hashy0.w

#line 428
  mul r8.xyzw, r3.yyyy, r4.xyzw
  frc r8.xyzw, r8.xyzw  // r8.x <- hashy1.x; r8.y <- hashy1.y; r8.z <- hashy1.z; r8.w <- hashy1.w

#line 429
  mul r9.xyzw, r2.zzzz, r4.xyzw
  frc r9.xyzw, r9.xyzw  // r9.x <- hashz0.x; r9.y <- hashz0.y; r9.z <- hashz0.z; r9.w <- hashz0.w

#line 430
  mul r3.xyzw, r3.zzzz, r4.xyzw
  frc r3.xyzw, r3.xyzw  // r3.x <- hashz1.x; r3.y <- hashz1.y; r3.z <- hashz1.z; r3.w <- hashz1.w

#line 431
  add r4.xyzw, r5.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r4.x <- grad_x0.x; r4.y <- grad_x0.y; r4.z <- grad_x0.z; r4.w <- grad_x0.w

#line 432
  add r5.xyzw, r7.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r5.x <- grad_y0.x; r5.y <- grad_y0.y; r5.z <- grad_y0.z; r5.w <- grad_y0.w

#line 433
  add r7.xyzw, r9.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r7.x <- grad_z0.x; r7.y <- grad_z0.y; r7.z <- grad_z0.z; r7.w <- grad_z0.w

#line 434
  add r6.xyzw, r6.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r6.x <- grad_x1.x; r6.y <- grad_x1.y; r6.z <- grad_x1.z; r6.w <- grad_x1.w

#line 435
  add r8.xyzw, r8.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r8.x <- grad_y1.x; r8.y <- grad_y1.y; r8.z <- grad_y1.z; r8.w <- grad_y1.w

#line 436
  add r3.xyzw, r3.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r3.x <- grad_z1.x; r3.y <- grad_z1.y; r3.z <- grad_z1.z; r3.w <- grad_z1.w

#line 437
  mul r9.xyzw, r5.xyzw, r5.xyzw
  mad r9.xyzw, r4.xyzw, r4.xyzw, r9.xyzw
  mad r9.xyzw, r7.xyzw, r7.xyzw, r9.xyzw
  rsq r9.xyzw, r9.xyzw
  add r1.w, r1.x, l(-1.000000)
  add r10.xyzw, r1.yyyy, l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r5.xyzw, r5.xyzw, r10.yyww
  mad r4.xyzw, r1.xwxw, r4.xyzw, r5.xyzw
  mad r4.xyzw, r1.zzzz, r7.xyzw, r4.xyzw
  mul r4.xyzw, r4.xyzw, r9.xyzw  // r4.x <- grad_results_0.x; r4.y <- grad_results_0.y; r4.z <- grad_results_0.z; r4.w <- grad_results_0.w

#line 438
  mul r5.xyzw, r8.xyzw, r8.xyzw
  mad r5.xyzw, r6.xyzw, r6.xyzw, r5.xyzw
  mad r5.xyzw, r3.xyzw, r3.xyzw, r5.xyzw
  rsq r5.xyzw, r5.xyzw
  mul r7.xyzw, r8.xyzw, r10.xyzw
  mad r6.xyzw, r1.xwxw, r6.xyzw, r7.xyzw
  mad r2.xyzw, r2.wwww, r3.xyzw, r6.xyzw

#line 439
  mul r3.xyz, r1.xyzx, r1.xyzx
  mul r3.xyz, r1.xyzx, r3.xyzx
  mad r6.xyz, r1.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
  mad r1.xyz, r1.xyzx, r6.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mul r6.xyz, r1.xyzx, r3.xyzx  // r6.x <- blend.x; r6.y <- blend.y; r6.z <- blend.z

#line 440
  mad r2.xyzw, r5.xyzw, r2.xyzw, -r4.xyzw
  mad r2.xyzw, r6.zzzz, r2.xyzw, r4.xyzw  // r2.x <- res0.x; r2.y <- res0.y; r2.z <- res0.z; r2.w <- res0.w

#line 442
  mad r6.w, -r3.x, r1.x, l(1.000000)
  mad r1.xyzw, r6.yyyy, l(-1.000000, -1.000000, 1.000000, 1.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r1.xyzw, r1.xyzw, r6.wxwx
  dp4 r1.x, r2.xyzw, r1.xyzw  // r1.x <- final

#line 443
  mul r0.xyzw, r1.xxxx, l(1.154701, 1.154701, 1.154701, 1.154701)  // r0.w <- <perlin_id65 return value>

#line 469
  break 

#line 470
  case l(1)

#line 471
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 355
  round_ni r2.xy, r1.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y
  round_ni r2.z, cb0[3].x  // r2.z <- Pi.z

#line 356
  mov r1.z, cb0[3].x
  add r1.xyz, r1.xyzx, -r2.xyzx  // r1.x <- Pf.x; r1.y <- Pf.y; r1.z <- Pf.z

#line 357
  add r2.w, r1.z, l(-1.000000)  // r2.w <- Pf_min1.z

#line 358
  mul r3.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r3.xyz, r3.xyzx
  mad r2.xyz, -r3.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 359
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 360
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 361
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 362
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 363
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mod.x; r2.y <- lowz_mod.y; r2.z <- lowz_mod.z

#line 364
  mad r3.xyz, r3.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx  // r3.x <- highz_mod.x; r3.y <- highz_mod.y; r3.z <- highz_mod.z

#line 365
  mul r5.xyzw, r2.xxxx, r4.xyzw
  frc r5.xyzw, r5.xyzw  // r5.x <- hashx0.x; r5.y <- hashx0.y; r5.z <- hashx0.z; r5.w <- hashx0.w

#line 366
  mul r6.xyzw, r3.xxxx, r4.xyzw
  frc r6.xyzw, r6.xyzw  // r6.x <- hashx1.x; r6.y <- hashx1.y; r6.z <- hashx1.z; r6.w <- hashx1.w

#line 367
  mul r7.xyzw, r2.yyyy, r4.xyzw
  frc r7.xyzw, r7.xyzw  // r7.x <- hashy0.x; r7.y <- hashy0.y; r7.z <- hashy0.z; r7.w <- hashy0.w

#line 368
  mul r8.xyzw, r3.yyyy, r4.xyzw
  frc r8.xyzw, r8.xyzw  // r8.x <- hashy1.x; r8.y <- hashy1.y; r8.z <- hashy1.z; r8.w <- hashy1.w

#line 369
  mul r9.xyzw, r2.zzzz, r4.xyzw
  frc r9.xyzw, r9.xyzw  // r9.x <- hashz0.x; r9.y <- hashz0.y; r9.z <- hashz0.z; r9.w <- hashz0.w

#line 370
  mul r3.xyzw, r3.zzzz, r4.xyzw
  frc r3.xyzw, r3.xyzw  // r3.x <- hashz1.x; r3.y <- hashz1.y; r3.z <- hashz1.z; r3.w <- hashz1.w

#line 371
  add r4.xyzw, r5.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r4.x <- grad_x0.x; r4.y <- grad_x0.y; r4.z <- grad_x0.z; r4.w <- grad_x0.w

#line 372
  add r5.xyzw, r7.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r5.x <- grad_y0.x; r5.y <- grad_y0.y; r5.z <- grad_y0.z; r5.w <- grad_y0.w

#line 373
  add r7.xyzw, r9.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r7.x <- grad_z0.x; r7.y <- grad_z0.y; r7.z <- grad_z0.z; r7.w <- grad_z0.w

#line 374
  add r6.xyzw, r6.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r6.x <- grad_x1.x; r6.y <- grad_x1.y; r6.z <- grad_x1.z; r6.w <- grad_x1.w

#line 375
  add r8.xyzw, r8.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r8.x <- grad_y1.x; r8.y <- grad_y1.y; r8.z <- grad_y1.z; r8.w <- grad_y1.w

#line 376
  add r3.xyzw, r3.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r3.x <- grad_z1.x; r3.y <- grad_z1.y; r3.z <- grad_z1.z; r3.w <- grad_z1.w

#line 377
  mul r9.xyzw, r5.xyzw, r5.xyzw
  mad r9.xyzw, r4.xyzw, r4.xyzw, r9.xyzw
  mad r9.xyzw, r7.xyzw, r7.xyzw, r9.xyzw
  rsq r9.xyzw, r9.xyzw  // r9.x <- norm_0.x; r9.y <- norm_0.y; r9.z <- norm_0.z; r9.w <- norm_0.w

#line 378
  mul r10.xyzw, r8.xyzw, r8.xyzw
  mad r10.xyzw, r6.xyzw, r6.xyzw, r10.xyzw
  mad r10.xyzw, r3.xyzw, r3.xyzw, r10.xyzw
  rsq r10.xyzw, r10.xyzw  // r10.x <- norm_1.x; r10.y <- norm_1.y; r10.z <- norm_1.z; r10.w <- norm_1.w

#line 379
  mul r4.xyzw, r4.xyzw, r9.xyzw

#line 380
  mul r5.xyzw, r5.xyzw, r9.xyzw

#line 381
  mul r7.xyzw, r7.xywz, r9.xywz  // r7.z <- grad_z0.w; r7.w <- grad_z0.z

#line 382
  mul r6.xyzw, r6.xyzw, r10.xyzw

#line 383
  mul r8.xyzw, r8.xyzw, r10.xyzw

#line 384
  mul r3.xyzw, r3.xywz, r10.xywz  // r3.z <- grad_z1.w; r3.w <- grad_z1.z

#line 385
  add r1.w, r1.x, l(-1.000000)
  add r9.xyzw, r1.yyyy, l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r10.xyzw, r5.xyzw, r9.yyww
  mad r10.xyzw, r1.xwxw, r4.xyzw, r10.xyzw
  mad r10.xyzw, r1.zzzz, r7.xywz, r10.xyzw  // r10.x <- dotval_0.x; r10.y <- dotval_0.y; r10.z <- dotval_0.z; r10.w <- dotval_0.w

#line 386
  mul r9.xyzw, r8.xyzw, r9.xyzw
  mad r9.xyzw, r1.xwxw, r6.xyzw, r9.xyzw
  mad r2.xyzw, r2.wwww, r3.xywz, r9.xyzw  // r2.x <- dotval_1.x; r2.y <- dotval_1.y; r2.z <- dotval_1.z; r2.w <- dotval_1.w

#line 387
  mul r9.xyz, r1.xyzx, r1.xyzx
  mul r11.xyz, r1.xyzx, r9.xyzx
  mad r12.xyz, r1.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
  mad r12.xyz, r1.xyzx, r12.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mul r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- blend.x; r11.y <- blend.y; r11.z <- blend.z

#line 388
  mad r12.xyz, r1.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000), l(-60.000000, -60.000000, -60.000000, 0.000000)
  mad r1.xyz, r1.xyzx, r12.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r9.xyzx  // r1.x <- blendDeriv.x; r1.y <- blendDeriv.y; r1.z <- blendDeriv.z

#line 397
  mov r9.x, r10.x
  mov r9.y, r4.x
  mov r9.z, r5.x
  mov r9.w, r7.x
  mov r12.x, r10.y
  mov r12.y, r4.y
  mov r12.z, r5.y
  mov r12.w, r7.y
  add r12.xyzw, -r9.xyzw, r12.xyzw  // r12.x <- k0_gk0.x; r12.y <- k0_gk0.y; r12.z <- k0_gk0.z; r12.w <- k0_gk0.w

#line 398
  mov r13.w, r10.z
  mov r13.x, r4.z
  mov r13.y, r5.z
  mov r13.z, r7.w
  add r14.xyzw, -r9.xyzw, r13.wxyz  // r14.x <- k1_gk1.x; r14.y <- k1_gk1.y; r14.z <- k1_gk1.z; r14.w <- k1_gk1.w

#line 399
  mov r15.x, r2.x
  mov r15.y, r6.x
  mov r15.z, r8.x
  mov r15.w, r3.x
  add r16.xyzw, -r9.xyzw, r15.xyzw  // r16.x <- k2_gk2.x; r16.y <- k2_gk2.y; r16.z <- k2_gk2.z; r16.w <- k2_gk2.w

#line 400
  mov r7.w, r10.w
  mov r7.x, r4.w
  mov r7.y, r5.w
  add r4.xyzw, -r13.xyzw, r7.xyzw
  add r4.xyzw, -r12.yzwx, r4.xyzw  // r4.x <- k3_gk3.y; r4.y <- k3_gk3.z; r4.z <- k3_gk3.w; r4.w <- k3_gk3.x

#line 401
  mov r5.w, r2.y
  mov r5.x, r6.y
  mov r5.y, r8.y
  mov r5.z, r3.y
  add r5.xyzw, -r15.yzwx, r5.xyzw
  add r7.xyzw, -r12.xyzw, r5.wxyz  // r7.x <- k4_gk4.x; r7.y <- k4_gk4.y; r7.z <- k4_gk4.z; r7.w <- k4_gk4.w

#line 402
  mov r10.w, r2.z
  mov r10.x, r6.z
  mov r10.y, r8.z
  mov r10.z, r3.w
  add r13.xyzw, -r15.xyzw, r10.wxyz
  add r13.xyzw, -r14.yzxw, r13.yzxw  // r13.x <- k5_gk5.y; r13.y <- k5_gk5.z; r13.z <- k5_gk5.x; r13.w <- k5_gk5.w

#line 403
  mov r3.w, r2.w
  mov r3.x, r6.w
  mov r3.y, r8.w
  add r2.xyzw, -r10.xyzw, r3.xyzw
  add r2.xyzw, -r5.xyzw, r2.xyzw
  add r2.xyzw, -r4.xyzw, r2.xyzw  // r2.x <- k6_gk6.y; r2.y <- k6_gk6.z; r2.z <- k6_gk6.w; r2.w <- k6_gk6.x

#line 408
  mul r3.y, r4.w, r11.y

#line 407
  mad r4.xyz, r11.yyyy, r4.xyzx, r12.yzwy
  mad r4.xyz, r11.xxxx, r4.xyzx, r9.yzwy
  mad r5.xyz, r11.zzzz, r13.xywx, r14.yzwy
  mad r4.xyz, r11.yyyy, r5.xyzx, r4.xyzx

#line 408
  mul r5.w, r2.w, r11.y

#line 407
  mad r2.xyz, r11.yyyy, r2.xyzx, r7.yzwy
  mad r2.xyz, r11.xxxx, r2.xyzx, r16.yzwy
  mad r2.xyz, r11.zzzz, r2.xyzx, r4.xyzx  // r2.x <- result.y; r2.y <- result.z; r2.z <- result.w

#line 408
  mov r5.z, r7.x
  mul r3.zw, r11.zzzz, r5.zzzw
  mov r3.x, r12.x
  dp4 r1.x, r3.xyzw, r1.xxxx
  add r3.x, r1.x, r2.x  // r3.x <- result.y

#line 409
  mul r14.y, r11.x, r4.w
  mul r13.w, r11.x, r2.w
  mul r14.zw, r11.zzzz, r13.zzzw
  dp4 r1.x, r14.xyzw, r1.yyyy
  add r3.y, r1.x, r2.y  // r3.y <- result.z

#line 410
  mul r16.y, r11.x, r7.x
  mul r16.zw, r11.yyyy, r13.zzzw
  dp4 r1.x, r16.xyzw, r1.zzzz
  add r3.z, r1.x, r2.z  // r3.z <- result.w

#line 411
  mul r0.xyz, r3.xyzx, l(1.154701, 1.154701, 1.154701, 0.000000)  // r0.x <- <perlinGrad_id66 return value>.y; r0.y <- <perlinGrad_id66 return value>.z; r0.z <- <perlinGrad_id66 return value>.w

#line 472
  mov r0.w, l(1.000000)
  break 

#line 473
  case l(2)

#line 474
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 337
  round_ni r2.xy, r1.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y
  round_ni r2.z, cb0[3].x  // r2.z <- Pi.z

#line 338
  mov r1.z, cb0[3].x
  add r1.xyz, r1.xyzx, -r2.xyzx  // r1.x <- Pf.x; r1.y <- Pf.y; r1.z <- Pf.z

#line 340
  mul r3.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r3.xyz, r3.xyzx
  mad r2.xyz, -r3.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 341
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 342
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 343
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 344
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 345
  mov r2.w, r3.z
  mad r2.xy, r2.zwzz, l(48.500389, 48.500389, 0.000000, 0.000000), l(635.298706, 635.298706, 0.000000, 0.000000)
  div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyxx  // r2.x <- hash_mod.x; r2.y <- hash_mod.y

#line 346
  mul r3.xyzw, r2.xxxx, r4.xyzw
  frc r3.xyzw, r3.xyzw  // r3.x <- hash_lowz.x; r3.y <- hash_lowz.y; r3.z <- hash_lowz.z; r3.w <- hash_lowz.w

#line 347
  mul r2.xyzw, r2.yyyy, r4.xyzw
  frc r2.xyzw, r2.xyzw  // r2.x <- hash_highz.x; r2.y <- hash_highz.y; r2.z <- hash_highz.z; r2.w <- hash_highz.w

#line 348
  mul r4.xyz, r1.xyzx, r1.xyzx
  mul r4.xyz, r1.xyzx, r4.xyzx
  mad r5.xyz, r1.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
  mad r1.xyz, r1.xyzx, r5.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mul r5.xyz, r1.xyzx, r4.xyzx  // r5.x <- blend.x; r5.y <- blend.y; r5.z <- blend.z

#line 349
  add r2.xyzw, -r3.xyzw, r2.xyzw
  mad r2.xyzw, r5.zzzz, r2.xyzw, r3.xyzw  // r2.x <- res0.x; r2.y <- res0.y; r2.z <- res0.z; r2.w <- res0.w

#line 351
  mad r5.w, -r4.x, r1.x, l(1.000000)
  mad r1.xyzw, r5.yyyy, l(-1.000000, -1.000000, 1.000000, 1.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r1.xyzw, r1.xyzw, r5.wxwx
  dp4 r0.xyzw, r2.xyzw, r1.xyzw  // r0.x <- c.x; r0.y <- c.y; r0.z <- c.z; r0.w <- c.w

#line 475
  break 

#line 476
  case l(3)

#line 477
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 316
  round_ni r2.xy, r1.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y
  round_ni r2.z, cb0[3].x  // r2.z <- Pi.z

#line 317
  mov r1.z, cb0[3].x
  add r1.xyz, r1.xyzx, -r2.xyzx  // r1.x <- Pf.x; r1.y <- Pf.y; r1.z <- Pf.z

#line 319
  mul r3.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r3.xyz, r3.xyzx
  mad r2.xyz, -r3.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 320
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 321
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 322
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 323
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 324
  mov r2.w, r3.z
  mad r2.xy, r2.zwzz, l(48.500389, 48.500389, 0.000000, 0.000000), l(635.298706, 635.298706, 0.000000, 0.000000)
  div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyxx  // r2.x <- hash_mod.x; r2.y <- hash_mod.y

#line 325
  mul r3.xyzw, r2.xxxx, r4.xyzw
  frc r3.xyzw, r3.xyzw  // r3.x <- hash_lowz.x; r3.y <- hash_lowz.y; r3.z <- hash_lowz.z; r3.w <- hash_lowz.w

#line 326
  mul r2.xyzw, r2.yyyy, r4.xyzw
  frc r2.xyzw, r2.xyzw  // r2.x <- hash_highz.x; r2.y <- hash_highz.y; r2.z <- hash_highz.z; r2.w <- hash_highz.w

#line 327
  mul r4.xyz, r1.xyzx, r1.xyzx
  mul r5.xyz, r1.xyzx, r4.xyzx
  mad r6.xyz, r1.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
  mad r6.xyz, r1.xyzx, r6.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mul r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- blend.x; r5.y <- blend.y; r5.z <- blend.z

#line 328
  mad r6.xyz, r1.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000), l(-60.000000, -60.000000, -60.000000, 0.000000)
  mad r1.xyz, r1.xyzx, r6.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r4.xyzx  // r1.x <- blendDeriv.x; r1.y <- blendDeriv.y; r1.z <- blendDeriv.z

#line 329
  add r4.xyzw, -r3.xyzw, r2.xyzw
  mad r4.xyzw, r5.zzzz, r4.xyzw, r3.xyzw  // r4.x <- res0.x; r4.y <- res0.y; r4.z <- res0.z; r4.w <- res0.w

#line 330
  add r6.xyzw, -r4.xyxz, r4.zwyw
  mad r4.xyzw, r5.yxyx, r6.ywxz, r4.yzxx  // r4.z <- res1.x; r4.x <- res1.y; r4.w <- res1.z; r4.y <- res1.w

#line 331
  mov r6.xy, r3.xyxx
  mov r6.zw, r2.xxxy
  mov r2.xy, r3.zwzz
  add r2.xyzw, -r6.xyzw, r2.xyzw
  mad r2.xyzw, r5.yyyy, r2.xyzw, r6.xyzw  // r2.x <- res3.x; r2.y <- res3.y; r2.z <- res3.z; r2.w <- res3.w

#line 332
  add r2.yw, -r2.xxxz, r2.yyyw
  mad r2.xy, r5.xxxx, r2.ywyy, r2.xzxx  // r2.x <- res4.x; r2.y <- res4.y

#line 333
  mov r2.zw, r4.zzzw
  mov r4.z, r2.y
  add r2.xyz, -r2.zwxz, r4.xyzx
  mul r0.xyz, r1.xyzx, r2.xyzx  // r0.x <- <valueNoiseGrad_id57 return value>.y; r0.y <- <valueNoiseGrad_id57 return value>.z; r0.z <- <valueNoiseGrad_id57 return value>.w

#line 478
  mov r0.w, l(1.000000)
  break 

#line 479
  case l(4)

#line 480
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 281
  mov r1.z, cb0[3].x
  mul r2.xyz, r1.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000)  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 282
  dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
  mad r2.xyz, r1.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000), r1.wwww
  round_ni r2.xyz, r2.xyzx  // r2.x <- Pi.x; r2.y <- Pi.y; r2.z <- Pi.z

#line 283
  mad r1.xyz, r1.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000), -r2.xyzx
  dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
  add r1.xyz, r1.wwww, r1.xyzx  // r1.x <- x0.x; r1.y <- x0.y; r1.z <- x0.z

#line 284
  ge r3.xyz, r1.zxyz, r1.xyzx
  and r4.xyz, r3.yzxy, l(0x3f800000, 0x3f800000, 0x3f800000, 0)  // r4.x <- g.x; r4.y <- g.y; r4.z <- g.z

#line 285
  movc r3.xyz, r3.xyzx, l(0,0,0,0), l(1.000000,1.000000,1.000000,0)  // r3.x <- l.z; r3.y <- l.x; r3.z <- l.y

#line 286
  min r5.xyz, r3.xyzx, r4.xyzx  // r5.x <- Pi_1.x; r5.y <- Pi_1.y; r5.z <- Pi_1.z

#line 287
  max r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_2.x; r3.y <- Pi_2.y; r3.z <- Pi_2.z

#line 288
  add r4.xyz, r1.xyzx, -r5.xyzx
  add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)  // r4.x <- x1.x; r4.y <- x1.y; r4.z <- x1.z

#line 289
  add r6.xyz, r1.xyzx, -r3.xyzx
  add r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)  // r6.x <- x2.x; r6.y <- x2.y; r6.z <- x2.z

#line 294
  mul r7.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r7.xyz, r7.xyzx
  mad r2.xyz, -r7.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 295
  ge r7.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r8.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- Pi_inc1.x; r7.y <- Pi_inc1.y; r7.z <- Pi_inc1.z

#line 296
  mov r8.xy, r2.xyxx
  mov r8.zw, r7.xxxy
  add r8.xyzw, r8.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r8.x <- Pt.x; r8.y <- Pt.y; r8.z <- Pt.z; r8.w <- Pt.w

#line 297
  mul r9.xyzw, r8.xyzw, r8.xyzw  // r9.x <- Pt.x; r9.y <- Pt.y; r9.z <- Pt.z; r9.w <- Pt.w

#line 298
  mad r8.xyzw, r8.zwzw, r8.zwzw, -r9.xyxy
  mov r10.xy, r5.xyxx
  mov r10.zw, r3.xxxy
  mad r8.xyzw, r10.xywz, r8.xywz, r9.xyyx  // r8.x <- V1xy_V2xy.x; r8.y <- V1xy_V2xy.y; r8.w <- V1xy_V2xy.z; r8.z <- V1xy_V2xy.w

#line 299
  mov r10.xw, r9.xxxz
  mov r10.yz, r8.xxwx
  mov r8.xw, r9.yyyw
  mul r8.xyzw, r8.xyzw, r10.xyzw  // r8.x <- Pt.x; r8.y <- Pt.y; r8.z <- Pt.z; r8.w <- Pt.w

#line 300
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mods.x; r2.y <- lowz_mods.y; r2.z <- lowz_mods.z

#line 301
  mad r3.xyw, r7.zzzz, l(48.500389, 65.294121, 0.000000, 63.934601), l(635.298706, 682.357483, 0.000000, 668.926514)
  div r7.xyw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyxw  // r7.x <- highz_mods.x; r7.y <- highz_mods.y; r7.w <- highz_mods.z

#line 302
  lt r1.w, r5.z, l(0.500000)
  movc r3.xyw, r1.wwww, r2.xyxz, r7.xyxw  // r3.x <- Pi_1.x; r3.y <- Pi_1.y; r3.w <- Pi_1.z

#line 303
  lt r1.w, r3.z, l(0.500000)
  movc r5.xyz, r1.wwww, r2.xyzx, r7.xywx  // r5.x <- Pi_2.x; r5.y <- Pi_2.y; r5.z <- Pi_2.z

#line 304
  mov r9.x, r2.x
  mov r9.y, r3.x
  mov r9.z, r5.x
  mov r9.w, r7.x
  mul r9.xyzw, r8.xyzw, r9.xyzw
  frc r9.xyzw, r9.xyzw
  add r9.xyzw, r9.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r9.x <- hash_0.x; r9.y <- hash_0.y; r9.z <- hash_0.z; r9.w <- hash_0.w

#line 305
  mov r10.x, r2.y
  mov r10.y, r3.y
  mov r10.z, r5.y
  mov r10.w, r7.y
  mul r10.xyzw, r8.xyzw, r10.xyzw
  frc r10.xyzw, r10.xyzw
  add r10.xyzw, r10.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r10.x <- hash_1.x; r10.y <- hash_1.y; r10.z <- hash_1.z; r10.w <- hash_1.w

#line 306
  mov r7.x, r2.z
  mov r7.y, r3.w
  mov r7.z, r5.z
  mul r2.xyzw, r7.xyzw, r8.xyzw
  frc r2.xyzw, r2.xyzw
  add r2.xyzw, r2.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r2.x <- hash_2.x; r2.y <- hash_2.y; r2.z <- hash_2.z; r2.w <- hash_2.w

#line 307
  mul r3.xyzw, r10.xyzw, r10.xyzw
  mad r3.xyzw, r9.xyzw, r9.xyzw, r3.xyzw
  mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  rsq r3.xyzw, r3.xyzw
  add r5.xw, r1.xxxx, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r5.y, r4.x
  mov r5.z, r6.x
  add r7.xw, r1.yyyy, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r7.y, r4.y
  mov r7.z, r6.y
  mul r8.xyzw, r7.xyzw, r10.xyzw
  mad r8.xyzw, r9.xyzw, r5.xyzw, r8.xyzw
  add r6.xw, r1.zzzz, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r6.y, r4.z
  mad r1.xyzw, r2.xyzw, r6.xyzw, r8.xyzw
  mul r1.xyzw, r1.xyzw, r3.xyzw  // r1.x <- grad_results.x; r1.y <- grad_results.y; r1.z <- grad_results.z; r1.w <- grad_results.w

#line 309
  mul r2.xyzw, r7.xyzw, r7.xyzw
  mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
  mad r2.xyzw, r6.xyzw, r6.xyzw, r2.xyzw  // r2.x <- kernel_weights.x; r2.y <- kernel_weights.y; r2.z <- kernel_weights.z; r2.w <- kernel_weights.w

#line 310
  add r2.xyzw, -r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r2.x <- kernel_weights.x; r2.y <- kernel_weights.y; r2.z <- kernel_weights.z; r2.w <- kernel_weights.w

#line 311
  mul r3.xyzw, r2.xyzw, r2.xyzw
  mul r2.xyzw, r2.xyzw, r3.xyzw

#line 312
  dp4 r1.x, r2.xyzw, r1.xyzw
  mul r0.xyzw, r1.xxxx, l(37.837227, 37.837227, 37.837227, 37.837227)  // r0.w <- <simplex_id73 return value>

#line 481
  break 

#line 482
  case l(5)

#line 483
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 233
  mov r1.z, cb0[3].x
  mul r2.xyz, r1.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000)  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 234
  dp3 r1.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
  mad r2.xyz, r1.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000), r1.wwww
  round_ni r2.xyz, r2.xyzx  // r2.x <- Pi.x; r2.y <- Pi.y; r2.z <- Pi.z

#line 235
  mad r1.xyz, r1.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000), -r2.xyzx
  dp3 r1.w, r2.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
  add r1.xyz, r1.wwww, r1.xyzx  // r1.x <- x0.x; r1.y <- x0.y; r1.z <- x0.z

#line 236
  ge r3.xyz, r1.zxyz, r1.xyzx
  and r4.xyz, r3.yzxy, l(0x3f800000, 0x3f800000, 0x3f800000, 0)  // r4.x <- g.x; r4.y <- g.y; r4.z <- g.z

#line 237
  movc r3.xyz, r3.xyzx, l(0,0,0,0), l(1.000000,1.000000,1.000000,0)  // r3.x <- l.z; r3.y <- l.x; r3.z <- l.y

#line 238
  min r5.xyz, r3.xyzx, r4.xyzx  // r5.x <- Pi_1.x; r5.y <- Pi_1.y; r5.z <- Pi_1.z

#line 239
  max r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_2.x; r3.y <- Pi_2.y; r3.z <- Pi_2.z

#line 240
  add r4.xyz, r1.xyzx, -r5.xyzx
  add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)  // r4.x <- x1.x; r4.y <- x1.y; r4.z <- x1.z

#line 241
  add r6.xyz, r1.xyzx, -r3.xyzx
  add r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)  // r6.x <- x2.x; r6.y <- x2.y; r6.z <- x2.z

#line 246
  mul r7.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r7.xyz, r7.xyzx
  mad r2.xyz, -r7.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 247
  ge r7.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r8.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- Pi_inc1.x; r7.y <- Pi_inc1.y; r7.z <- Pi_inc1.z

#line 248
  mov r8.xy, r2.xyxx
  mov r8.zw, r7.xxxy
  add r8.xyzw, r8.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r8.x <- Pt.x; r8.y <- Pt.y; r8.z <- Pt.z; r8.w <- Pt.w

#line 249
  mul r9.xyzw, r8.xyzw, r8.xyzw  // r9.x <- Pt.x; r9.y <- Pt.y; r9.z <- Pt.z; r9.w <- Pt.w

#line 250
  mad r8.xyzw, r8.zwzw, r8.zwzw, -r9.xyxy
  mov r10.xy, r5.xyxx
  mov r10.zw, r3.xxxy
  mad r8.xyzw, r10.xywz, r8.xywz, r9.xyyx  // r8.x <- V1xy_V2xy.x; r8.y <- V1xy_V2xy.y; r8.w <- V1xy_V2xy.z; r8.z <- V1xy_V2xy.w

#line 251
  mov r10.xw, r9.xxxz
  mov r10.yz, r8.xxwx
  mov r8.xw, r9.yyyw
  mul r8.xyzw, r8.xyzw, r10.xyzw  // r8.x <- Pt.x; r8.y <- Pt.y; r8.z <- Pt.z; r8.w <- Pt.w

#line 252
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mods.x; r2.y <- lowz_mods.y; r2.z <- lowz_mods.z

#line 253
  mad r3.xyw, r7.zzzz, l(48.500389, 65.294121, 0.000000, 63.934601), l(635.298706, 682.357483, 0.000000, 668.926514)
  div r7.xyw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyxw  // r7.x <- highz_mods.x; r7.y <- highz_mods.y; r7.w <- highz_mods.z

#line 254
  lt r1.w, r5.z, l(0.500000)
  movc r3.xyw, r1.wwww, r2.xyxz, r7.xyxw  // r3.x <- Pi_1.x; r3.y <- Pi_1.y; r3.w <- Pi_1.z

#line 255
  lt r1.w, r3.z, l(0.500000)
  movc r5.xyz, r1.wwww, r2.xyzx, r7.xywx  // r5.x <- Pi_2.x; r5.y <- Pi_2.y; r5.z <- Pi_2.z

#line 256
  mov r9.x, r2.x
  mov r9.y, r3.x
  mov r9.z, r5.x
  mov r9.w, r7.x
  mul r9.xyzw, r8.xyzw, r9.xyzw
  frc r9.xyzw, r9.xyzw
  add r9.xyzw, r9.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r9.x <- hash_0.x; r9.y <- hash_0.y; r9.z <- hash_0.z; r9.w <- hash_0.w

#line 257
  mov r10.x, r2.y
  mov r10.y, r3.y
  mov r10.z, r5.y
  mov r10.w, r7.y
  mul r10.xyzw, r8.xyzw, r10.xyzw
  frc r10.xyzw, r10.xyzw
  add r10.xyzw, r10.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r10.x <- hash_1.x; r10.y <- hash_1.y; r10.z <- hash_1.z; r10.w <- hash_1.w

#line 258
  mov r7.x, r2.z
  mov r7.y, r3.w
  mov r7.z, r5.z
  mul r2.xyzw, r7.xyzw, r8.xyzw
  frc r2.xyzw, r2.xyzw
  add r2.xyzw, r2.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r2.x <- hash_2.x; r2.y <- hash_2.y; r2.z <- hash_2.z; r2.w <- hash_2.w

#line 259
  mul r3.xyzw, r10.xyzw, r10.xyzw
  mad r3.xyzw, r9.xyzw, r9.xyzw, r3.xyzw
  mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  rsq r3.xyzw, r3.xyzw  // r3.x <- norm.x; r3.y <- norm.y; r3.z <- norm.z; r3.w <- norm.w

#line 260
  mul r5.xyzw, r3.xyzw, r9.xyzw  // r5.x <- hash_0.x; r5.y <- hash_0.y; r5.z <- hash_0.z; r5.w <- hash_0.w

#line 261
  mul r7.xyzw, r3.xyzw, r10.xyzw  // r7.x <- hash_1.x; r7.y <- hash_1.y; r7.z <- hash_1.z; r7.w <- hash_1.w

#line 262
  mul r2.xyzw, r2.xyzw, r3.xyzw

#line 263
  add r3.xw, r1.xxxx, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r3.y, r4.x
  mov r3.z, r6.x
  add r8.xw, r1.yyyy, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r8.y, r4.y
  mov r8.z, r6.y
  mul r9.xyzw, r7.xyzw, r8.xyzw
  mad r9.xyzw, r5.xyzw, r3.xyzw, r9.xyzw
  add r6.xw, r1.zzzz, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r6.y, r4.z
  mad r1.xyzw, r2.xyzw, r6.xyzw, r9.xyzw  // r1.x <- grad_results.x; r1.y <- grad_results.y; r1.z <- grad_results.z; r1.w <- grad_results.w

#line 264
  mul r4.xyzw, r8.xyzw, r8.xyzw
  mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw  // r4.x <- m.x; r4.y <- m.y; r4.z <- m.z; r4.w <- m.w

#line 265
  add r4.xyzw, -r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r4.x <- m.x; r4.y <- m.y; r4.z <- m.z; r4.w <- m.w

#line 266
  mul r9.xyzw, r4.xyzw, r4.xyzw  // r9.x <- m2.x; r9.y <- m2.y; r9.z <- m2.z; r9.w <- m2.w

#line 267
  mul r4.xyzw, r4.xyzw, r9.xyzw  // r4.x <- m3.x; r4.y <- m3.y; r4.z <- m3.z; r4.w <- m3.w

#line 268
  mul r1.xyzw, r1.xyzw, r9.xyzw
  mul r1.xyzw, r1.xyzw, l(-6.000000, -6.000000, -6.000000, -6.000000)  // r1.x <- temp.x; r1.y <- temp.y; r1.z <- temp.z; r1.w <- temp.w

#line 269
  dp4 r3.x, r1.xyzw, r3.xyzw
  dp4 r3.y, r4.xyzw, r5.xyzw
  add r3.x, r3.y, r3.x  // r3.x <- xderiv

#line 270
  dp4 r3.w, r1.xyzw, r8.xyzw
  dp4 r5.x, r4.xyzw, r7.xyzw
  add r3.y, r3.w, r5.x  // r3.y <- yderiv

#line 271
  dp4 r1.x, r1.xyzw, r6.xyzw
  dp4 r1.y, r4.xyzw, r2.xyzw
  add r3.z, r1.y, r1.x  // r3.z <- zderiv

#line 273
  mul r0.xyz, r3.xyzx, l(37.837227, 37.837227, 37.837227, 0.000000)  // r0.x <- <simplexGrad_id75 return value>.y; r0.y <- <simplexGrad_id75 return value>.z; r0.z <- <simplexGrad_id75 return value>.w

#line 484
  mov r0.w, l(1.000000)
  break 

#line 485
  case l(6)

#line 486
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 193
  round_ni r2.xy, r1.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y
  round_ni r2.z, cb0[3].x  // r2.z <- Pi.z

#line 194
  mov r1.z, cb0[3].x
  add r1.xyz, r1.xyzx, -r2.xyzx  // r1.x <- Pf.x; r1.y <- Pf.y; r1.z <- Pf.z

#line 195
  mul r3.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r3.xyz, r3.xyzx
  mad r2.xyz, -r3.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 196
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 197
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 198
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 199
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 200
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mod.x; r2.y <- lowz_mod.y; r2.z <- lowz_mod.z

#line 201
  mad r3.xyz, r3.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx  // r3.x <- highz_mod.x; r3.y <- highz_mod.y; r3.z <- highz_mod.z

#line 202
  mul r5.xyzw, r2.xxxx, r4.xyzw
  frc r5.xyzw, r5.xyzw
  mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r5.x <- hash_x0.x; r5.y <- hash_x0.y; r5.z <- hash_x0.z; r5.w <- hash_x0.w

#line 203
  mul r6.xyzw, r3.xxxx, r4.xyzw
  frc r6.xyzw, r6.xyzw
  mad r6.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r6.x <- hash_x1.x; r6.y <- hash_x1.y; r6.z <- hash_x1.z; r6.w <- hash_x1.w

#line 204
  mul r7.xyzw, r2.yyyy, r4.xyzw
  frc r7.xyzw, r7.xyzw
  mad r7.xyzw, r7.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r7.x <- hash_y0.x; r7.y <- hash_y0.y; r7.z <- hash_y0.z; r7.w <- hash_y0.w

#line 205
  mul r8.xyzw, r3.yyyy, r4.xyzw
  frc r8.xyzw, r8.xyzw
  mad r8.xyzw, r8.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r8.x <- hash_y1.x; r8.y <- hash_y1.y; r8.z <- hash_y1.z; r8.w <- hash_y1.w

#line 206
  mul r2.xyzw, r2.zzzz, r4.xyzw
  frc r2.xyzw, r2.xyzw
  mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r2.x <- hash_z0.x; r2.y <- hash_z0.y; r2.z <- hash_z0.z; r2.w <- hash_z0.w

#line 207
  mul r3.xyzw, r3.zzzz, r4.xyzw
  frc r3.xyzw, r3.xyzw
  mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r3.x <- hash_z1.x; r3.y <- hash_z1.y; r3.z <- hash_z1.z; r3.w <- hash_z1.w

#line 209
  mul r4.xyzw, r5.xyzw, r5.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzw
  lt r10.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r4.xyzw, r4.xyzw, r5.xyzw, -r9.xyzw
  mad r4.xyzw, r4.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 1.000000, 0.000000, 1.000000)  // r4.x <- hash_x0.x; r4.y <- hash_x0.y; r4.z <- hash_x0.z; r4.w <- hash_x0.w

#line 210
  mul r5.xyzw, r7.xyzw, r7.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzw
  lt r10.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r5.xyzw, r5.xyzw, r7.xyzw, -r9.xyzw
  mad r5.xyzw, r5.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 0.000000, 1.000000, 1.000000)  // r5.x <- hash_y0.x; r5.y <- hash_y0.y; r5.z <- hash_y0.z; r5.w <- hash_y0.w

#line 211
  mul r7.xyzw, r6.xyzw, r6.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzw
  lt r10.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r6.xyzw, r7.xyzw, r6.xyzw, -r9.xyzw
  mad r6.xyzw, r6.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 1.000000, 0.000000, 1.000000)  // r6.x <- hash_x1.x; r6.y <- hash_x1.y; r6.z <- hash_x1.z; r6.w <- hash_x1.w

#line 212
  mul r7.xyzw, r8.xyzw, r8.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzw
  lt r10.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r7.xyzw, r7.xyzw, r8.xyzw, -r9.xyzw
  mad r7.xyzw, r7.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 0.000000, 1.000000, 1.000000)  // r7.x <- hash_y1.x; r7.y <- hash_y1.y; r7.z <- hash_y1.z; r7.w <- hash_y1.w

#line 213
  mul r8.xyzw, r2.xyzw, r2.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzw
  lt r10.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r2.xyzw, r8.xyzw, r2.xyzw, -r9.xyzw

#line 214
  mul r8.xyzw, r3.xyzw, r3.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzw
  lt r10.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r3.xyzw, r8.xyzw, r3.xyzw, -r9.xyzw
  mad r3.xyzw, r3.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(1.000000, 1.000000, 1.000000, 1.000000)  // r3.x <- hash_z1.x; r3.y <- hash_z1.y; r3.z <- hash_z1.z; r3.w <- hash_z1.w

#line 215
  add r4.xyzw, r1.xxxx, -r4.xyzw  // r4.x <- dx1.x; r4.y <- dx1.y; r4.z <- dx1.z; r4.w <- dx1.w

#line 216
  add r5.xyzw, r1.yyyy, -r5.xyzw  // r5.x <- dy1.x; r5.y <- dy1.y; r5.z <- dy1.z; r5.w <- dy1.w

#line 217
  mad r2.xyzw, -r2.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), r1.zzzz  // r2.x <- dz1.x; r2.y <- dz1.y; r2.z <- dz1.z; r2.w <- dz1.w

#line 218
  add r6.xyzw, r1.xxxx, -r6.xyzw  // r6.x <- dx2.x; r6.y <- dx2.y; r6.z <- dx2.z; r6.w <- dx2.w

#line 219
  add r7.xyzw, r1.yyyy, -r7.xyzw  // r7.x <- dy2.x; r7.y <- dy2.y; r7.z <- dy2.z; r7.w <- dy2.w

#line 220
  add r1.xyzw, r1.zzzz, -r3.xyzw  // r1.x <- dz2.x; r1.y <- dz2.y; r1.z <- dz2.z; r1.w <- dz2.w

#line 221
  mul r3.xyzw, r5.xyzw, r5.xyzw
  mad r3.xyzw, r4.xyzw, r4.xyzw, r3.xyzw
  mad r2.xyzw, r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- d1.x; r2.y <- d1.y; r2.z <- d1.z; r2.w <- d1.w

#line 222
  mul r3.xyzw, r7.xyzw, r7.xyzw
  mad r3.xyzw, r6.xyzw, r6.xyzw, r3.xyzw
  mad r1.xyzw, r1.xyzw, r1.xyzw, r3.xyzw  // r1.x <- d2.x; r1.y <- d2.y; r1.z <- d2.z; r1.w <- d2.w

#line 223
  min r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- d1.x; r1.y <- d1.y; r1.z <- d1.z; r1.w <- d1.w

#line 224
  min r1.xy, r1.wzww, r1.xyxx

#line 225
  min r1.x, r1.y, r1.x
  mul r0.xyzw, r1.xxxx, l(0.750000, 0.750000, 0.750000, 0.750000)  // r0.w <- <worleyFast_id82 return value>

#line 487
  break 

#line 488
  case l(7)

#line 489
  add r1.xy, v1.xyxx, cb0[2].xyxx
  mul r1.xy, r1.xyxx, cb0[2].zwzz

#line 153
  round_ni r2.xy, r1.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y
  round_ni r2.z, cb0[3].x  // r2.z <- Pi.z

#line 154
  mov r1.z, cb0[3].x
  add r1.xyz, r1.xyzx, -r2.xyzx  // r1.x <- Pf.x; r1.y <- Pf.y; r1.z <- Pf.z

#line 155
  mul r3.xyz, r2.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r3.xyz, r3.xyzx
  mad r2.xyz, -r3.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r2.xyzx

#line 156
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 157
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 158
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 159
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 160
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mod.x; r2.y <- lowz_mod.y; r2.z <- lowz_mod.z

#line 161
  mad r3.xyz, r3.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx  // r3.x <- highz_mod.x; r3.y <- highz_mod.y; r3.z <- highz_mod.z

#line 162
  mul r5.xyzw, r2.xxxx, r4.xyzw
  frc r5.xyzw, r5.xyzw
  mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r5.x <- hash_x0.x; r5.y <- hash_x0.y; r5.z <- hash_x0.z; r5.w <- hash_x0.w

#line 163
  mul r6.xyzw, r3.xxxx, r4.xyzw
  frc r6.xyzw, r6.xyzw
  mad r6.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r6.x <- hash_x1.x; r6.y <- hash_x1.y; r6.z <- hash_x1.z; r6.w <- hash_x1.w

#line 164
  mul r7.xyzw, r2.yyyy, r4.xyzw
  frc r7.xyzw, r7.xyzw
  mad r7.xyzw, r7.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r7.x <- hash_y0.x; r7.y <- hash_y0.y; r7.z <- hash_y0.z; r7.w <- hash_y0.w

#line 165
  mul r8.xyzw, r3.yyyy, r4.xyzw
  frc r8.xyzw, r8.xyzw
  mad r8.xyzw, r8.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r8.x <- hash_y1.x; r8.y <- hash_y1.y; r8.z <- hash_y1.z; r8.w <- hash_y1.w

#line 166
  mul r2.xyzw, r2.zzzz, r4.xyzw
  frc r2.xyzw, r2.xyzw
  mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r2.x <- hash_z0.x; r2.y <- hash_z0.y; r2.z <- hash_z0.z; r2.w <- hash_z0.w

#line 167
  mul r3.xyzw, r3.zzzz, r4.xyzw
  frc r3.xyzw, r3.xyzw
  mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r3.x <- hash_z1.x; r3.y <- hash_z1.y; r3.z <- hash_z1.z; r3.w <- hash_z1.w

#line 169
  mul r4.xyzw, r5.xyzw, r5.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzw
  lt r10.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r4.xyzw, r4.xyzw, r5.xyzw, -r9.xyzw
  mad r4.xyzw, r4.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 1.000000, 0.000000, 1.000000)  // r4.x <- hash_x0.x; r4.y <- hash_x0.y; r4.z <- hash_x0.z; r4.w <- hash_x0.w

#line 170
  mul r5.xyzw, r7.xyzw, r7.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzw
  lt r10.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r5.xyzw, r5.xyzw, r7.xyzw, -r9.xyzw
  mad r5.xyzw, r5.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 0.000000, 1.000000, 1.000000)  // r5.x <- hash_y0.x; r5.y <- hash_y0.y; r5.z <- hash_y0.z; r5.w <- hash_y0.w

#line 171
  mul r7.xyzw, r6.xyzw, r6.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzw
  lt r10.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r6.xyzw, r7.xyzw, r6.xyzw, -r9.xyzw
  mad r6.xyzw, r6.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 1.000000, 0.000000, 1.000000)  // r6.x <- hash_x1.x; r6.y <- hash_x1.y; r6.z <- hash_x1.z; r6.w <- hash_x1.w

#line 172
  mul r7.xyzw, r8.xyzw, r8.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzw
  lt r10.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r7.xyzw, r7.xyzw, r8.xyzw, -r9.xyzw
  mad r7.xyzw, r7.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 0.000000, 1.000000, 1.000000)  // r7.x <- hash_y1.x; r7.y <- hash_y1.y; r7.z <- hash_y1.z; r7.w <- hash_y1.w

#line 173
  mul r8.xyzw, r2.xyzw, r2.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzw
  lt r10.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r2.xyzw, r8.xyzw, r2.xyzw, -r9.xyzw

#line 174
  mul r8.xyzw, r3.xyzw, r3.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzw
  lt r10.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r3.xyzw, r8.xyzw, r3.xyzw, -r9.xyzw
  mad r3.xyzw, r3.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(1.000000, 1.000000, 1.000000, 1.000000)  // r3.x <- hash_z1.x; r3.y <- hash_z1.y; r3.z <- hash_z1.z; r3.w <- hash_z1.w

#line 175
  add r4.xyzw, r1.xxxx, -r4.xyzw  // r4.x <- dx1.x; r4.y <- dx1.y; r4.z <- dx1.z; r4.w <- dx1.w

#line 176
  add r5.xyzw, r1.yyyy, -r5.xyzw  // r5.x <- dy1.x; r5.y <- dy1.y; r5.z <- dy1.z; r5.w <- dy1.w

#line 177
  mad r2.xyzw, -r2.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), r1.zzzz  // r2.x <- dz1.x; r2.y <- dz1.y; r2.z <- dz1.z; r2.w <- dz1.w

#line 178
  add r6.xyzw, r1.xxxx, -r6.xyzw  // r6.x <- dx2.x; r6.y <- dx2.y; r6.z <- dx2.z; r6.w <- dx2.w

#line 179
  add r7.xyzw, r1.yyyy, -r7.xyzw  // r7.x <- dy2.x; r7.y <- dy2.y; r7.z <- dy2.z; r7.w <- dy2.w

#line 180
  add r1.xyzw, r1.zzzz, -r3.xyzw  // r1.x <- dz2.x; r1.y <- dz2.y; r1.z <- dz2.z; r1.w <- dz2.w

#line 181
  mul r3.xyzw, r5.xyzw, r5.xyzw
  mad r3.xyzw, r4.xyzw, r4.xyzw, r3.xyzw
  mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw  // r3.x <- d1.x; r3.y <- d1.y; r3.z <- d1.z; r3.w <- d1.w

#line 182
  mul r8.xyzw, r7.xyzw, r7.xyzw
  mad r8.xyzw, r6.xyzw, r6.xyzw, r8.xyzw
  mad r8.xyzw, r1.xyzw, r1.xyzw, r8.xyzw  // r8.x <- d2.x; r8.y <- d2.y; r8.z <- d2.z; r8.w <- d2.w

#line 184
  lt r9.xy, r3.xzxx, r3.ywyy

#line 183
  mov r10.x, r3.x
  mov r10.y, r4.x
  mov r10.z, r5.x
  mov r10.w, r2.x
  mov r11.x, r3.y
  mov r11.y, r4.y
  mov r11.z, r5.y
  mov r11.w, r2.y
  movc r10.xyzw, r9.xxxx, r10.xyzw, r11.xyzw  // r10.x <- r1.x; r10.y <- r1.y; r10.z <- r1.z; r10.w <- r1.w

#line 184
  mov r11.x, r3.z
  mov r11.y, r4.z
  mov r11.z, r5.z
  mov r11.w, r2.z
  mov r2.x, r3.w
  mov r2.y, r4.w
  mov r2.z, r5.w
  movc r2.xyzw, r9.yyyy, r11.xyzw, r2.xyzw  // r2.x <- r2.x; r2.y <- r2.y; r2.z <- r2.z; r2.w <- r2.w

#line 186
  lt r3.xy, r8.xzxx, r8.ywyy

#line 185
  mov r4.x, r8.x
  mov r4.y, r6.x
  mov r4.z, r7.x
  mov r4.w, r1.x
  mov r5.x, r8.y
  mov r5.y, r6.y
  mov r5.z, r7.y
  mov r5.w, r1.y
  movc r4.xyzw, r3.xxxx, r4.xyzw, r5.xyzw  // r4.x <- r3.x; r4.y <- r3.y; r4.z <- r3.z; r4.w <- r3.w

#line 186
  mov r5.x, r8.z
  mov r5.y, r6.z
  mov r5.z, r7.z
  mov r5.w, r1.z
  mov r1.x, r8.w
  mov r1.y, r6.w
  mov r1.z, r7.w
  movc r1.xyzw, r3.yyyy, r5.xyzw, r1.xyzw  // r1.x <- r4.x; r1.y <- r4.y; r1.z <- r4.z; r1.w <- r4.w

#line 187
  lt r3.x, r10.x, r2.x
  movc r2.xyzw, r3.xxxx, r10.xyzw, r2.xyzw  // r2.x <- t1.x; r2.y <- t1.y; r2.z <- t1.z; r2.w <- t1.w

#line 188
  lt r3.x, r4.x, r1.x
  movc r1.xyzw, r3.xxxx, r4.xyzw, r1.xyzw  // r1.x <- t2.x; r1.y <- t2.y; r1.z <- t2.z; r1.w <- t2.w

#line 189
  lt r1.x, r2.x, r1.x
  movc r1.xyz, r1.xxxx, r2.yzwy, r1.yzwy
  mul r0.xyz, r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)  // r0.x <- <worleyFastGrad_id84 return value>.y; r0.y <- <worleyFastGrad_id84 return value>.z; r0.z <- <worleyFastGrad_id84 return value>.w

#line 490
  mov r0.w, l(1.000000)
  break 

#line 491
  default 
  mov r0.xyzw, l(0,0,0,0)  // r0.x <- c.x; r0.y <- c.y; r0.z <- c.z; r0.w <- c.w
  break 
endswitch   // r0.x <- c.x; r0.y <- c.y; r0.z <- c.z; r0.w <- c.w

#line 492
add r1.xyzw, -cb0[0].xyzw, cb0[1].xyzw
mad o0.xyzw, r0.xyzw, r1.xyzw, cb0[0].xyzw

#line 501
ret 
// Approximately 746 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id93;
    float4 InputValue_id94;
    float2 InputValue_id95;
    float2 InputValue_id96;
    float InputValue_id97;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int Type_id92;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 Compute_id104()
{
    return InputValue_id94;
}
float4 Compute_id103()
{
    return InputValue_id93;
}
float4 worleyFastGrad_id84(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float3 lowz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi.zzz * float3(48.500388, 65.294118, 63.934599)));
    float3 highz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599)));
    float4 hash_x0 = frac(Pt * lowz_mod.xxxx) * 2.0 - 1.0;
    float4 hash_x1 = frac(Pt * highz_mod.xxxx) * 2.0 - 1.0;
    float4 hash_y0 = frac(Pt * lowz_mod.yyyy) * 2.0 - 1.0;
    float4 hash_y1 = frac(Pt * highz_mod.yyyy) * 2.0 - 1.0;
    float4 hash_z0 = frac(Pt * lowz_mod.zzzz) * 2.0 - 1.0;
    float4 hash_z1 = frac(Pt * highz_mod.zzzz) * 2.0 - 1.0;
    const float JITTER_WINDOW = 0.166666666;
    hash_x0 = ((hash_x0 * hash_x0 * hash_x0) - sign(hash_x0)) * JITTER_WINDOW + float4(0.0, 1.0, 0.0, 1.0);
    hash_y0 = ((hash_y0 * hash_y0 * hash_y0) - sign(hash_y0)) * JITTER_WINDOW + float4(0.0, 0.0, 1.0, 1.0);
    hash_x1 = ((hash_x1 * hash_x1 * hash_x1) - sign(hash_x1)) * JITTER_WINDOW + float4(0.0, 1.0, 0.0, 1.0);
    hash_y1 = ((hash_y1 * hash_y1 * hash_y1) - sign(hash_y1)) * JITTER_WINDOW + float4(0.0, 0.0, 1.0, 1.0);
    hash_z0 = ((hash_z0 * hash_z0 * hash_z0) - sign(hash_z0)) * JITTER_WINDOW + float4(0.0, 0.0, 0.0, 0.0);
    hash_z1 = ((hash_z1 * hash_z1 * hash_z1) - sign(hash_z1)) * JITTER_WINDOW + float4(1.0, 1.0, 1.0, 1.0);
    float4 dx1 = Pf.xxxx - hash_x0;
    float4 dy1 = Pf.yyyy - hash_y0;
    float4 dz1 = Pf.zzzz - hash_z0;
    float4 dx2 = Pf.xxxx - hash_x1;
    float4 dy2 = Pf.yyyy - hash_y1;
    float4 dz2 = Pf.zzzz - hash_z1;
    float4 d1 = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;
    float4 d2 = dx2 * dx2 + dy2 * dy2 + dz2 * dz2;
    float4 r1 = d1.x < d1.y ? float4(d1.x, dx1.x, dy1.x, dz1.x) : float4(d1.y, dx1.y, dy1.y, dz1.y);
    float4 r2 = d1.z < d1.w ? float4(d1.z, dx1.z, dy1.z, dz1.z) : float4(d1.w, dx1.w, dy1.w, dz1.w);
    float4 r3 = d2.x < d2.y ? float4(d2.x, dx2.x, dy2.x, dz2.x) : float4(d2.y, dx2.y, dy2.y, dz2.y);
    float4 r4 = d2.z < d2.w ? float4(d2.z, dx2.z, dy2.z, dz2.z) : float4(d2.w, dx2.w, dy2.w, dz2.w);
    float4 t1 = r1.x < r2.x ? r1 : r2;
    float4 t2 = r3.x < r4.x ? r3 : r4;
    return (t1.x < t2.x ? t1 : t2) * float4(1.0, 2.0, 2.0, 2.0) * (9.0 / 12.0);
}
float worleyFast_id82(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float3 lowz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi.zzz * float3(48.500388, 65.294118, 63.934599)));
    float3 highz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599)));
    float4 hash_x0 = frac(Pt * lowz_mod.xxxx) * 2.0 - 1.0;
    float4 hash_x1 = frac(Pt * highz_mod.xxxx) * 2.0 - 1.0;
    float4 hash_y0 = frac(Pt * lowz_mod.yyyy) * 2.0 - 1.0;
    float4 hash_y1 = frac(Pt * highz_mod.yyyy) * 2.0 - 1.0;
    float4 hash_z0 = frac(Pt * lowz_mod.zzzz) * 2.0 - 1.0;
    float4 hash_z1 = frac(Pt * highz_mod.zzzz) * 2.0 - 1.0;
    const float JITTER_WINDOW3 = 0.166666666;
    hash_x0 = ((hash_x0 * hash_x0 * hash_x0) - sign(hash_x0)) * JITTER_WINDOW3 + float4(0.0, 1.0, 0.0, 1.0);
    hash_y0 = ((hash_y0 * hash_y0 * hash_y0) - sign(hash_y0)) * JITTER_WINDOW3 + float4(0.0, 0.0, 1.0, 1.0);
    hash_x1 = ((hash_x1 * hash_x1 * hash_x1) - sign(hash_x1)) * JITTER_WINDOW3 + float4(0.0, 1.0, 0.0, 1.0);
    hash_y1 = ((hash_y1 * hash_y1 * hash_y1) - sign(hash_y1)) * JITTER_WINDOW3 + float4(0.0, 0.0, 1.0, 1.0);
    hash_z0 = ((hash_z0 * hash_z0 * hash_z0) - sign(hash_z0)) * JITTER_WINDOW3 + float4(0.0, 0.0, 0.0, 0.0);
    hash_z1 = ((hash_z1 * hash_z1 * hash_z1) - sign(hash_z1)) * JITTER_WINDOW3 + float4(1.0, 1.0, 1.0, 1.0);
    float4 dx1 = Pf.xxxx - hash_x0;
    float4 dy1 = Pf.yyyy - hash_y0;
    float4 dz1 = Pf.zzzz - hash_z0;
    float4 dx2 = Pf.xxxx - hash_x1;
    float4 dy2 = Pf.yyyy - hash_y1;
    float4 dz2 = Pf.zzzz - hash_z1;
    float4 d1 = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;
    float4 d2 = dx2 * dx2 + dy2 * dy2 + dz2 * dz2;
    d1 = min(d1, d2);
    d1.xy = min(d1.xy, d1.wz);
    return min(d1.x, d1.y) * (9.0 / 12.0);
}
float4 simplexGrad_id75(float3 p)
{
    const float SKEWFACTOR = 1.0 / 3.0;
    const float UNSKEWFACTOR = 1.0 / 6.0;
    const float SIMPLEX_CORNER_POS = 0.5;
    const float SIMPLEX_TETRAHADRON_HEIGHT = 0.70710678118654752440084436210485;
    p *= SIMPLEX_TETRAHADRON_HEIGHT;
    float3 Pi = floor(p + dot(p, SKEWFACTOR));
    float3 x0 = p - Pi + dot(Pi, UNSKEWFACTOR);
    float3 g = step(x0.yzx, x0.xyz);
    float3 l = 1.0 - g;
    float3 Pi_1 = min(g.xyz, l.zxy);
    float3 Pi_2 = max(g.xyz, l.zxy);
    float3 x1 = x0 - Pi_1 + UNSKEWFACTOR;
    float3 x2 = x0 - Pi_2 + SKEWFACTOR;
    float3 x3 = x0 - SIMPLEX_CORNER_POS;
    float4 v1234_x = float4(x0.x, x1.x, x2.x, x3.x);
    float4 v1234_y = float4(x0.y, x1.y, x2.y, x3.y);
    float4 v1234_z = float4(x0.z, x1.z, x2.z, x3.z);
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    float4 V1xy_V2xy = lerp(Pt.xyxy, Pt.zwzw, float4(Pi_1.xy, Pi_2.xy));
    Pt = float4(Pt.x, V1xy_V2xy.xz, Pt.z) * float4(Pt.y, V1xy_V2xy.yw, Pt.w);
    float3 lowz_mods = float3(1.0 / (float3(635.298681, 682.357502, 668.926525).xyz + Pi.zzz * float3(48.500388, 65.294118, 63.934599).xyz));
    float3 highz_mods = float3(1.0 / (float3(635.298681, 682.357502, 668.926525).xyz + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599).xyz));
    Pi_1 = (Pi_1.z < 0.5) ? lowz_mods : highz_mods;
    Pi_2 = (Pi_2.z < 0.5) ? lowz_mods : highz_mods;
    float4 hash_0 = frac(Pt * float4(lowz_mods.x, Pi_1.x, Pi_2.x, highz_mods.x)) - 0.49999;
    float4 hash_1 = frac(Pt * float4(lowz_mods.y, Pi_1.y, Pi_2.y, highz_mods.y)) - 0.49999;
    float4 hash_2 = frac(Pt * float4(lowz_mods.z, Pi_1.z, Pi_2.z, highz_mods.z)) - 0.49999;
    float4 norm = rsqrt(hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2);
    hash_0 *= norm;
    hash_1 *= norm;
    hash_2 *= norm;
    float4 grad_results = hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z;
    float4 m = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;
    m = max(0.5 - m, 0.0);
    float4 m2 = m * m;
    float4 m3 = m * m2;
    float4 temp = -6.0 * m2 * grad_results;
    float xderiv = dot(temp, v1234_x) + dot(m3, hash_0);
    float yderiv = dot(temp, v1234_y) + dot(m3, hash_1);
    float zderiv = dot(temp, v1234_z) + dot(m3, hash_2);
    const float FINAL_NORMALIZATION = 37.837227241611314102871574478976;
    return float4(dot(m3, grad_results), xderiv, yderiv, zderiv) * FINAL_NORMALIZATION;
}
float simplex_id73(float3 p)
{
    const float SKEWFACTOR = 1.0 / 3.0;
    const float UNSKEWFACTOR = 1.0 / 6.0;
    const float SIMPLEX_CORNER_POS = 0.5;
    const float SIMPLEX_TETRAHADRON_HEIGHT = 0.70710678118654752440084436210485;
    p *= SIMPLEX_TETRAHADRON_HEIGHT;
    float3 Pi = floor(p + dot(p, SKEWFACTOR));
    float3 x0 = p - Pi + dot(Pi, UNSKEWFACTOR);
    float3 g = step(x0.yzx, x0.xyz);
    float3 l = 1.0 - g;
    float3 Pi_1 = min(g.xyz, l.zxy);
    float3 Pi_2 = max(g.xyz, l.zxy);
    float3 x1 = x0 - Pi_1 + UNSKEWFACTOR;
    float3 x2 = x0 - Pi_2 + SKEWFACTOR;
    float3 x3 = x0 - SIMPLEX_CORNER_POS;
    float4 v1234_x = float4(x0.x, x1.x, x2.x, x3.x);
    float4 v1234_y = float4(x0.y, x1.y, x2.y, x3.y);
    float4 v1234_z = float4(x0.z, x1.z, x2.z, x3.z);
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    float4 V1xy_V2xy = lerp(Pt.xyxy, Pt.zwzw, float4(Pi_1.xy, Pi_2.xy));
    Pt = float4(Pt.x, V1xy_V2xy.xz, Pt.z) * float4(Pt.y, V1xy_V2xy.yw, Pt.w);
    float3 lowz_mods = float3(1.0 / (float3(635.298681, 682.357502, 668.926525).xyz + Pi.zzz * float3(48.500388, 65.294118, 63.934599).xyz));
    float3 highz_mods = float3(1.0 / (float3(635.298681, 682.357502, 668.926525).xyz + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599).xyz));
    Pi_1 = (Pi_1.z < 0.5) ? lowz_mods : highz_mods;
    Pi_2 = (Pi_2.z < 0.5) ? lowz_mods : highz_mods;
    float4 hash_0 = frac(Pt * float4(lowz_mods.x, Pi_1.x, Pi_2.x, highz_mods.x)) - 0.49999;
    float4 hash_1 = frac(Pt * float4(lowz_mods.y, Pi_1.y, Pi_2.y, highz_mods.y)) - 0.49999;
    float4 hash_2 = frac(Pt * float4(lowz_mods.z, Pi_1.z, Pi_2.z, highz_mods.z)) - 0.49999;
    float4 grad_results = rsqrt(hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2) * (hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z);
    const float FINAL_NORMALIZATION = 37.837227241611314102871574478976;
    float4 kernel_weights = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;
    kernel_weights = max(0.5 - kernel_weights, 0.0);
    kernel_weights = kernel_weights * kernel_weights * kernel_weights;
    return dot(kernel_weights, grad_results) * FINAL_NORMALIZATION;
}
float4 valueNoiseGrad_id57(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    float3 Pf_min1 = Pf - 1.0;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, (69.0 - 1.5)) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float2 hash_mod = float2(1.0 / (635.298681 + float2(Pi.z, Pi_inc1.z) * 48.500388));
    float4 hash_lowz = frac(Pt * hash_mod.xxxx);
    float4 hash_highz = frac(Pt * hash_mod.yyyy);
    float3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float3 blendDeriv = Pf * Pf * (Pf * (Pf * 30.0 - 60.0) + 30.0);
    float4 res0 = lerp(hash_lowz, hash_highz, blend.z);
    float4 res1 = lerp(res0.xyxz, res0.zwyw, blend.yyxx);
    float4 res3 = lerp(float4(hash_lowz.xy, hash_highz.xy), float4(hash_lowz.zw, hash_highz.zw), blend.y);
    float2 res4 = lerp(res3.xz, res3.yw, blend.x);
    return float4(res1.x, 0.0, 0.0, 0.0) + (float4(res1.yyw, res4.y) - float4(res1.xxz, res4.x)) * float4(blend.x, blendDeriv);
}
float valueNoise_id56(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    float3 Pf_min1 = Pf - 1.0;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, (69.0 - 1.5)) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float2 hash_mod = float2(1.0 / (635.298681 + float2(Pi.z, Pi_inc1.z) * 48.500388));
    float4 hash_lowz = frac(Pt * hash_mod.xxxx);
    float4 hash_highz = frac(Pt * hash_mod.yyyy);
    float3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float4 res0 = lerp(hash_lowz, hash_highz, blend.z);
    float4 blend2 = float4(blend.xy, float2(1.0 - blend.xy));
    return dot(res0, blend2.zxzx * blend2.wwyy);
}
float4 perlinGrad_id66(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    float3 Pf_min1 = Pf - 1.0;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float3 lowz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi.zzz * float3(48.500388, 65.294118, 63.934599)));
    float3 highz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599)));
    float4 hashx0 = frac(Pt * lowz_mod.xxxx);
    float4 hashx1 = frac(Pt * highz_mod.xxxx);
    float4 hashy0 = frac(Pt * lowz_mod.yyyy);
    float4 hashy1 = frac(Pt * highz_mod.yyyy);
    float4 hashz0 = frac(Pt * lowz_mod.zzzz);
    float4 hashz1 = frac(Pt * highz_mod.zzzz);
    float4 grad_x0 = hashx0 - 0.49999;
    float4 grad_y0 = hashy0 - 0.49999;
    float4 grad_z0 = hashz0 - 0.49999;
    float4 grad_x1 = hashx1 - 0.49999;
    float4 grad_y1 = hashy1 - 0.49999;
    float4 grad_z1 = hashz1 - 0.49999;
    float4 norm_0 = rsqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0);
    float4 norm_1 = rsqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1);
    grad_x0 *= norm_0;
    grad_y0 *= norm_0;
    grad_z0 *= norm_0;
    grad_x1 *= norm_1;
    grad_y1 *= norm_1;
    grad_z1 *= norm_1;
    float4 dotval_0 = float2(Pf.x, Pf_min1.x).xyxy * grad_x0 + float2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0;
    float4 dotval_1 = float2(Pf.x, Pf_min1.x).xyxy * grad_x1 + float2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1;
    float3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float3 blendDeriv = Pf * Pf * (Pf * (Pf * 30.0 - 60.0) + 30.0);
    float4 dotval0_grad0 = float4(dotval_0.x, grad_x0.x, grad_y0.x, grad_z0.x);
    float4 dotval1_grad1 = float4(dotval_0.y, grad_x0.y, grad_y0.y, grad_z0.y);
    float4 dotval2_grad2 = float4(dotval_0.z, grad_x0.z, grad_y0.z, grad_z0.z);
    float4 dotval3_grad3 = float4(dotval_0.w, grad_x0.w, grad_y0.w, grad_z0.w);
    float4 dotval4_grad4 = float4(dotval_1.x, grad_x1.x, grad_y1.x, grad_z1.x);
    float4 dotval5_grad5 = float4(dotval_1.y, grad_x1.y, grad_y1.y, grad_z1.y);
    float4 dotval6_grad6 = float4(dotval_1.z, grad_x1.z, grad_y1.z, grad_z1.z);
    float4 dotval7_grad7 = float4(dotval_1.w, grad_x1.w, grad_y1.w, grad_z1.w);
    float4 k0_gk0 = dotval1_grad1 - dotval0_grad0;
    float4 k1_gk1 = dotval2_grad2 - dotval0_grad0;
    float4 k2_gk2 = dotval4_grad4 - dotval0_grad0;
    float4 k3_gk3 = dotval3_grad3 - dotval2_grad2 - k0_gk0;
    float4 k4_gk4 = dotval5_grad5 - dotval4_grad4 - k0_gk0;
    float4 k5_gk5 = dotval6_grad6 - dotval4_grad4 - k1_gk1;
    float4 k6_gk6 = (dotval7_grad7 - dotval6_grad6) - (dotval5_grad5 - dotval4_grad4) - k3_gk3;
    float u = blend.x;
    float v = blend.y;
    float w = blend.z;
    float4 result = dotval0_grad0 + u * (k0_gk0 + v * k3_gk3) + v * (k1_gk1 + w * k5_gk5) + w * (k2_gk2 + u * (k4_gk4 + v * k6_gk6));
    result.y += dot(float4(k0_gk0.x, k3_gk3.x * v, float2(k4_gk4.x, k6_gk6.x * v) * w), float4(blendDeriv.xxxx));
    result.z += dot(float4(k1_gk1.x, k3_gk3.x * u, float2(k5_gk5.x, k6_gk6.x * u) * w), float4(blendDeriv.yyyy));
    result.w += dot(float4(k2_gk2.x, k4_gk4.x * u, float2(k5_gk5.x, k6_gk6.x * u) * v), float4(blendDeriv.zzzz));
    return result * 1.1547005383792515290182975610039;
}
float perlin_id65(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    float3 Pf_min1 = Pf - 1.0;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float3 lowz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi.zzz * float3(48.500388, 65.294118, 63.934599)));
    float3 highz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599)));
    float4 hashx0 = frac(Pt * lowz_mod.xxxx);
    float4 hashx1 = frac(Pt * highz_mod.xxxx);
    float4 hashy0 = frac(Pt * lowz_mod.yyyy);
    float4 hashy1 = frac(Pt * highz_mod.yyyy);
    float4 hashz0 = frac(Pt * lowz_mod.zzzz);
    float4 hashz1 = frac(Pt * highz_mod.zzzz);
    float4 grad_x0 = hashx0 - 0.49999;
    float4 grad_y0 = hashy0 - 0.49999;
    float4 grad_z0 = hashz0 - 0.49999;
    float4 grad_x1 = hashx1 - 0.49999;
    float4 grad_y1 = hashy1 - 0.49999;
    float4 grad_z1 = hashz1 - 0.49999;
    float4 grad_results_0 = rsqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0) * (float2(Pf.x, Pf_min1.x).xyxy * grad_x0 + float2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0);
    float4 grad_results_1 = rsqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1) * (float2(Pf.x, Pf_min1.x).xyxy * grad_x1 + float2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1);
    float3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float4 res0 = lerp(grad_results_0, grad_results_1, blend.z);
    float4 blend2 = float4(blend.xy, float2(1.0 - blend.xy));
    float final = dot(res0, blend2.zxzx * blend2.wwyy);
    return (final * 1.1547005383792515290182975610039);
}
float Compute_id102()
{
    return InputValue_id97;
}
float2 Compute_id101()
{
    return InputValue_id95;
}
float2 Compute_id100()
{
    return InputValue_id96;
}
float4 Shading_id99(inout PS_STREAMS streams)
{
    float2 uv = streams.TexCoord_id62;
    float2 scale = Compute_id100();
    float2 offset = Compute_id101();
    float z = Compute_id102();
    float4 c = 0;
    switch (Type_id92)

    {
        case 0:
            c = perlin_id65(float3((uv + offset) * scale, z));
            break;
        case 1:
            c = float4(perlinGrad_id66(float3((uv + offset) * scale, z)).yzw, 1.0);
            break;
        case 2:
            c = valueNoise_id56(float3((uv + offset) * scale, z));
            break;
        case 3:
            c = float4(valueNoiseGrad_id57(float3((uv + offset) * scale, z)).yzw, 1.0);
            break;
        case 4:
            c = simplex_id73(float3((uv + offset) * scale, z));
            break;
        case 5:
            c = float4(simplexGrad_id75(float3((uv + offset) * scale, z)).yzw, 1.0);
            break;
        case 6:
            c = worleyFast_id82(float3((uv + offset) * scale, z));
            break;
        case 7:
            c = float4(worleyFastGrad_id84(float3((uv + offset) * scale, z)).yzw, 1.0);
            break;
    }
    return lerp(Compute_id103(), Compute_id104(), c);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id99(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
