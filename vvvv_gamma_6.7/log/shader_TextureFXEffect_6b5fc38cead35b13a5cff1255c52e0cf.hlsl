/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin CameraMotionBlur_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {Limit = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {Width = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P Width: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Limit: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 480]
@C    World_id29 => Transformation.World
@C    WorldInverse_id30 => Transformation.WorldInverse
@C    WorldInverseTranspose_id31 => Transformation.WorldInverseTranspose
@C    WorldView_id32 => Transformation.WorldView
@C    WorldViewInverse_id33 => Transformation.WorldViewInverse
@C    WorldViewProjection_id34 => Transformation.WorldViewProjection
@C    WorldScale_id35 => Transformation.WorldScale
@C    EyeMS_id36 => Transformation.EyeMS
@C    MatrixTransform_id96 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 32]
@C    InputValue_id117 => ShaderFX.InputValueFloat4
@C    InputValue_id118 => ShaderFX.InputValueFloat.i1
@C    InputValue_id119 => ShaderFX.InputValueFloat
cbuffer PerView [Size: 384]
@C    View_id22 => Transformation.View
@C    ViewInverse_id23 => Transformation.ViewInverse
@C    Projection_id24 => Transformation.Projection
@C    ProjectionInverse_id25 => Transformation.ProjectionInverse
@C    ViewProjection_id26 => Transformation.ViewProjection
@C    ProjScreenRay_id27 => Transformation.ProjScreenRay
@C    Eye_id28 => Transformation.Eye
@C    NearClipPlane_id97 => Camera.NearClipPlane
@C    FarClipPlane_id98 => Camera.FarClipPlane
@C    ZProjection_id99 => Camera.ZProjection
@C    ViewSize_id100 => Camera.ViewSize
@C    AspectRatio_id101 => Camera.AspectRatio
cbuffer Globals [Size: 336]
@C    Texture0TexelSize_id38 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id40 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id42 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id44 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id46 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id48 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id50 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id52 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id54 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id56 => Texturing.Texture9TexelSize
@C    tVI_p_id113 => CameraMotionBlur_Internal_TextureFX.tVI_p
@C    tPI_p_id114 => CameraMotionBlur_Internal_TextureFX.tPI_p
@C    tP_p_id115 => CameraMotionBlur_Internal_TextureFX.tP_p
@C    tV_p_id116 => CameraMotionBlur_Internal_TextureFX.tV_p
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id67 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id75 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id37 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id39 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (2-2)]
***************************
*****     Sources     *****
***************************
@S    CameraMotionBlur_Internal_TextureFX => 6f52bf9e9fb55cb6d818538aab5af113
@S    VS_PS_Base => f089dc4ce5d5868b962b08793ef74fd9
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 5ff4dc93053df4c5786d345c534f4c99
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id29;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id30;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id31;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id32;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id33;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id34; // Offset:  320 Size:    64 [unused]
//   float3 WorldScale_id35;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id36;                 // Offset:  400 Size:    16 [unused]
//   float4x4 MatrixTransform_id96;     // Offset:  416 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[30], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.TexCoord_id85.x; v1.y <- __input__.TexCoord_id85.y; 
//   o1.x <- <VSMain return value>.TexCoord_id85.x; o1.y <- <VSMain return value>.TexCoord_id85.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 230 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_6b5fc38cead35b13a5cff1255c52e0cf.hlsl"
dp4 o0.x, v0.xyzw, cb0[26].xyzw
dp4 o0.y, v0.xyzw, cb0[27].xyzw
dp4 o0.z, v0.xyzw, cb0[28].xyzw
dp4 o0.w, v0.xyzw, cb0[29].xyzw

#line 234
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => e454d5ae2832c1492a801f53066c5ada
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id117;           // Offset:    0 Size:    16
//   float InputValue_id118;            // Offset:   16 Size:     4
//   float InputValue_id119;            // Offset:   20 Size:     4
//
// }
//
// cbuffer PerView
// {
//
//   float4x4 View_id22;                // Offset:    0 Size:    64
//   float4x4 ViewInverse_id23;         // Offset:   64 Size:    64
//   float4x4 Projection_id24;          // Offset:  128 Size:    64
//   float4x4 ProjectionInverse_id25;   // Offset:  192 Size:    64
//   float4x4 ViewProjection_id26;      // Offset:  256 Size:    64 [unused]
//   float2 ProjScreenRay_id27;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id28;                   // Offset:  336 Size:    16 [unused]
//   float NearClipPlane_id97;          // Offset:  352 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id98;           // Offset:  356 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id99;           // Offset:  360 Size:     8 [unused]
//   float2 ViewSize_id100;             // Offset:  368 Size:     8
//   float AspectRatio_id101;           // Offset:  376 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id38;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id40;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id42;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id44;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id46;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id48;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id50;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id52;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id54;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id56;     // Offset:   72 Size:     8 [unused]
//   float4x4 tVI_p_id113;              // Offset:   80 Size:    64 [unused]
//   float4x4 tPI_p_id114;              // Offset:  144 Size:    64 [unused]
//   float4x4 tP_p_id115;               // Offset:  208 Size:    64
//   float4x4 tV_p_id116;               // Offset:  272 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id67                sampler      NA          NA             s0      1 
// Sampler0_id75                     sampler      NA          NA             s1      1 
// Texture0_id37                     texture  float4          2d             t0      1 
// Texture1_id39                     texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
// Globals                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_constantbuffer CB1[24], immediateIndexed
dcl_constantbuffer CB2[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 10
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id85.x; v1.y <- __input__.TexCoord_id85.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 209 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_6b5fc38cead35b13a5cff1255c52e0cf.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 183
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t1.xyzw, s0, l(0.000000)  // r1.x <- z

#line 169
mad r2.z, r1.x, l(2.000000), l(-1.000000)  // r2.z <- p.z

#line 171
mad r2.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb1[12].xyzw  // r3.x <- p.x
dp4 r3.y, r2.xyzw, cb1[13].xyzw  // r3.y <- p.y
dp4 r3.z, r2.xyzw, cb1[14].xyzw  // r3.z <- p.z
dp4 r1.y, r2.xyzw, cb1[15].xyzw  // r1.y <- p.w

#line 172
add r2.xyz, r3.xyzx, r3.xyzx
div r2.xyz, r2.xyzx, r1.yyyy  // r2.z <- p.z; r2.x <- p.x; r2.y <- p.y

#line 173
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb1[4].xyzw  // r3.x <- p.x
dp4 r3.y, r2.xyzw, cb1[5].xyzw  // r3.y <- p.y
dp4 r3.z, r2.xyzw, cb1[6].xyzw  // r3.z <- p.z

#line 185
mov r3.w, l(1.000000)
dp4 r2.x, r3.xyzw, cb2[17].xyzw
dp4 r2.y, r3.xyzw, cb2[18].xyzw
dp4 r2.z, r3.xyzw, cb2[19].xyzw
dp4 r2.w, r3.xyzw, cb2[20].xyzw
dp4 r4.x, r2.xyzw, cb2[13].xyzw  // r4.x <- pp.x
dp4 r4.y, r2.xyzw, cb2[14].xyzw  // r4.y <- pp.y
dp4 r1.y, r2.xyzw, cb2[16].xyzw  // r1.y <- pp.w

#line 186
div r1.yz, r4.xxyx, r1.yyyy  // r1.y <- pp.x; r1.z <- pp.y

#line 187
mad r1.yz, r1.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
div r2.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb1[23].xyxx
add r1.yz, r1.yyzy, -r2.xxyx  // r1.y <- dx.x; r1.z <- dx.y

#line 189
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r1.yzyy, t1.yzwx, s0, l(0.000000)

#line 169
mad r1.yz, r1.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)  // r1.y <- p.x; r1.z <- p.y
mad r2.z, r1.w, l(2.000000), l(-1.000000)  // r2.z <- p.z

#line 171
mul r2.xy, r1.yzyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r4.x, r2.xyzw, cb1[12].xyzw  // r4.x <- p.x
dp4 r4.y, r2.xyzw, cb1[13].xyzw  // r4.y <- p.y
dp4 r4.z, r2.xyzw, cb1[14].xyzw  // r4.z <- p.z
dp4 r1.y, r2.xyzw, cb1[15].xyzw  // r1.y <- p.w

#line 172
add r2.xyz, r4.xyzx, r4.xyzx
div r2.xyz, r2.xyzx, r1.yyyy  // r2.z <- p.z; r2.x <- p.x; r2.y <- p.y

#line 173
mov r2.w, l(1.000000)
dp4 r4.x, r2.xyzw, cb1[4].xyzw  // r4.x <- p.x
dp4 r4.y, r2.xyzw, cb1[5].xyzw  // r4.y <- p.y
dp4 r4.z, r2.xyzw, cb1[6].xyzw  // r4.z <- p.z

#line 190
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
mul r1.yzw, r2.xxyz, l(0.000000, 0.010000, 0.010000, 0.010000)  // r1.y <- c.x; r1.z <- c.y; r1.w <- c.z
mov r5.x, l(0.010000)  // r5.x <- c.w

#line 196
mov r4.w, l(1.000000)
add r4.xyzw, -r3.xyzw, r4.xyzw

#line 201
dp3 r5.y, r4.xyzx, r4.xyzx
sqrt r5.y, r5.y
div r1.x, r5.y, r1.x
add r1.x, r1.x, -cb0[1].x
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), -cb0[1].x
mul_sat r1.x, r1.x, r5.y
mad r5.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r5.y
mov r6.w, l(1.000000)

#line 194
mov r7.xyz, r1.yzwy  // r7.x <- c.x; r7.y <- c.y; r7.z <- c.z
mov r7.w, r5.x  // r7.w <- c.w
mov r5.y, l(0)  // r5.y <- i
loop 
  ge r5.z, r5.y, l(1.000000)
  breakc_nz r5.z

#line 196
  add r5.z, r5.y, l(-0.500000)
  mul r5.z, r5.z, cb0[1].y
  mad r8.xyzw, r5.zzzz, r4.xyzw, r3.xyzw  // r8.x <- p3.x; r8.y <- p3.y; r8.z <- p3.z; r8.w <- p3.w

#line 197
  dp4 r9.x, r8.xyzw, cb1[0].xyzw
  dp4 r9.y, r8.xyzw, cb1[1].xyzw
  dp4 r9.z, r8.xyzw, cb1[2].xyzw
  dp4 r9.w, r8.xyzw, cb1[3].xyzw
  dp4 r8.x, r9.xyzw, cb1[8].xyzw
  dp4 r8.y, r9.xyzw, cb1[9].xyzw
  dp4 r5.z, r9.xyzw, cb1[11].xyzw  // r5.z <- p3.w

#line 198
  div r5.zw, r8.xxxy, r5.zzzz
  mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)  // r5.z <- dx.x; r5.w <- dx.y

#line 199
  lt r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  lt r8.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r5.zzzw
  or r8.x, r8.z, r8.x
  or r8.x, r8.y, r8.x
  or r8.x, r8.w, r8.x
  if_nz r8.x

#line 200
    add r8.x, r5.y, l(0.038462)  // r8.x <- i
    mov r5.y, r8.x  // r5.y <- i
    continue 
  endif 

#line 201
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.zwzz, t0.xyzw, s0, l(0.000000)
  mad r7.xyzw, r6.xyzw, r1.xxxx, r7.xyzw

#line 194
  add r5.y, r5.y, l(0.038462)

#line 202
endloop 

#line 203
div r2.xyz, r7.xyzx, r7.wwww  // r2.x <- c.x; r2.y <- c.y; r2.z <- c.z

#line 214
add r1.xyzw, -r0.xyzw, r2.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 223
ret 
// Approximately 93 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id85;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id85 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float2 TexCoord_id85;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id85 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float2 TexCoord_id85 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 World_id29;
    float4x4 WorldInverse_id30;
    float4x4 WorldInverseTranspose_id31;
    float4x4 WorldView_id32;
    float4x4 WorldViewInverse_id33;
    float4x4 WorldViewProjection_id34;
    float3 WorldScale_id35;
    float4 EyeMS_id36;
    float4x4 MatrixTransform_id96;
};
cbuffer PerUpdate 
{
    float4 InputValue_id117;
    float InputValue_id118;
    float InputValue_id119;
};
cbuffer PerView 
{
    float4x4 View_id22;
    float4x4 ViewInverse_id23;
    float4x4 Projection_id24;
    float4x4 ProjectionInverse_id25;
    float4x4 ViewProjection_id26;
    float2 ProjScreenRay_id27;
    float4 Eye_id28;
    float NearClipPlane_id97 = 1.0f;
    float FarClipPlane_id98 = 100.0f;
    float2 ZProjection_id99;
    float2 ViewSize_id100;
    float AspectRatio_id101;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id38;
    float2 Texture1TexelSize_id40;
    float2 Texture2TexelSize_id42;
    float2 Texture3TexelSize_id44;
    float2 Texture4TexelSize_id46;
    float2 Texture5TexelSize_id48;
    float2 Texture6TexelSize_id50;
    float2 Texture7TexelSize_id52;
    float2 Texture8TexelSize_id54;
    float2 Texture9TexelSize_id56;
    float4x4 tVI_p_id113;
    float4x4 tPI_p_id114;
    float4x4 tP_p_id115;
    float4x4 tV_p_id116;
};
Texture2D Texture0_id37;
Texture2D Texture1_id39;
Texture2D Texture2_id41;
Texture2D Texture3_id43;
Texture2D Texture4_id45;
Texture2D Texture5_id47;
Texture2D Texture6_id49;
Texture2D Texture7_id51;
Texture2D Texture8_id53;
Texture2D Texture9_id55;
TextureCube TextureCube0_id57;
TextureCube TextureCube1_id58;
TextureCube TextureCube2_id59;
TextureCube TextureCube3_id60;
Texture3D Texture3D0_id61;
Texture3D Texture3D1_id62;
Texture3D Texture3D2_id63;
Texture3D Texture3D3_id64;
SamplerState Sampler_id65;
SamplerState PointSampler_id66 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id67 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id68 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id69 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id70 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id71 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id72 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id73 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id74 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id75;
SamplerState Sampler1_id76;
SamplerState Sampler2_id77;
SamplerState Sampler3_id78;
SamplerState Sampler4_id79;
SamplerState Sampler5_id80;
SamplerState Sampler6_id81;
SamplerState Sampler7_id82;
SamplerState Sampler8_id83;
SamplerState Sampler9_id84;
float Compute_id34()
{
    return InputValue_id118;
}
float Compute_id33()
{
    return InputValue_id119;
}
float4 UVDtoXYZ_id29(float3 x)
{
    float4 p = float4(-1.0 + 2.0 * x.x, -1.0 + 2.0 * x.y, -1.0 + 2.0 * x.z, 1.0);
    p.y *= -1.0;
    p = mul(p, ProjectionInverse_id25);
    p = float4(p.xyz * 2.0 / p.w, 1.0);
    p = mul(p, ViewInverse_id23);
    return p;
}
float4 Compute_id32()
{
    return InputValue_id117;
}
float4 Filter_id31(inout PS_STREAMS streams, float4 tex0col)
{
    float2 uv = streams.TexCoord_id85;
    float z = Texture1_id39.SampleLevel(LinearSampler_id67, uv, 0).x;
    float4 p = float4(UVDtoXYZ_id29(float3(uv, Texture1_id39.SampleLevel(LinearSampler_id67, uv, 0).x)).xyz, 1);
    float4 pp = mul(mul(p, tV_p_id116), tP_p_id115);
    pp = pp / pp.w;
    float2 dx = pp.xy / float2(1, -1) * 0.5 + 0.5 - 0.5 / ViewSize_id100;
    float4 c = 1;
    float4 p2 = float4(UVDtoXYZ_id29(float3(dx, Texture1_id39.SampleLevel(LinearSampler_id67, dx, 0).x)).xyz, 1);
    c = float4(Texture0_id37.SampleLevel(LinearSampler_id67, uv, 0).xyz, 1) * .01;
    float width = Compute_id33();
    float limit = Compute_id34();

    for (float i = 0; i < 1; i += 1. / 26.)
    {
        float4 p3 = lerp(p, p2, (i - .5) * width);
        p3 = mul(mul(p3, View_id22), Projection_id24);
        float2 dx = p3.xy / p3.w * float2(1, -1) * 0.5 + 0.5;
        if (dx.x < 0 || dx.x > 1 || dx.y < 0 || dx.y > 1)
            continue;
        c += float4(Texture0_id37.SampleLevel(LinearSampler_id67, dx, 0).xyz, 1) * smoothstep(limit, 0, length(p2.xyz - p.xyz) / z);
    }
    c.rgb /= c.a;
    c.a = Texture0_id37.SampleLevel(LinearSampler_id67, uv, 0).a;
    return c;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id37.SampleLevel(Sampler0_id75, streams.TexCoord_id85, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id31(streams, col), Compute_id32());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id85 = __input__.TexCoord_id85;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.TexCoord_id85 = __input__.TexCoord_id85;
    streams.ShadingPosition_id0 = mul(streams.Position_id14, MatrixTransform_id96);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id85 = streams.TexCoord_id85;
    return __output__;
}
