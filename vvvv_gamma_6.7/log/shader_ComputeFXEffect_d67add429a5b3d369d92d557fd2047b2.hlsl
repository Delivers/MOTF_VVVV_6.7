/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:64 Y:1 Z:1
@P EffectNodeBase.EffectNodeBaseShader: mixin ComputeFXGraph [{Root = mixin ComputeOrder [{Computes = [Shader_2070510842]}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDispatch [Size: 224]
@C    ThreadGroupCountGlobal_id10 => ComputeShaderBase.ThreadGroupCountGlobal
@C    input_4188686933_id13 => input_4188686933
@C    input_1675780435_id14 => input_1675780435
@C    input_3224333447_id15 => input_3224333447
@C    input_690026424_id16 => input_690026424
@C    input_667846844_id17 => input_667846844
@C    input_3782210842_id18 => input_3782210842
@C    input_3016277339_id19 => input_3016277339
@C    input_3002936162_id20 => input_3002936162
@C    input_3584695320_id21 => input_3584695320
@C    input_1350766564_id22 => input_1350766564
@C    input_1480872290_id23 => input_1480872290
@C    input_1068171476_id24 => input_1068171476
@C    input_507444731_id25 => input_507444731
@C    input_1794496102_id26 => input_1794496102
@C    input_2460586204_id27 => input_2460586204
@C    input_602038524_id28 => input_602038524
@C    input_3761647472_id29 => input_3761647472
@C    input_3415458996_id30 => input_3415458996
@C    input_3102826216_id31 => input_3102826216
***************************
******  Resources    ******
***************************
@R    DynamicBufferInput_1430151697_id12 => DynamicBufferInput_1430151697 [Stage: Compute, Slot: (0-0)]
@R    PerDispatch => PerDispatch [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    ComputeFXGraph => dca3deb94a1ea6d5babe444153dee98b
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    Shader_2070510842 => 826b898ec2a1492e2b720fa69dd1d751
@S    FuseCoreBaseCast => 1273a005630aadfff132dcc52db04833
@S    FuseCoreMathPCG => e529e3d6e7220073ba1b2dacab9e88b2
***************************
*****     Stages      *****
***************************
@G    Compute => 0ac68a899d422f3b9493f6f8aae332da
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDispatch
// {
//
//   int3 ThreadGroupCountGlobal_id10;  // Offset:    0 Size:    12 [unused]
//   int input_4188686933_id13;         // Offset:   12 Size:     4
//   float input_1675780435_id14;       // Offset:   16 Size:     4 [unused]
//   float3 input_3224333447_id15;      // Offset:   20 Size:    12 [unused]
//   int input_690026424_id16;          // Offset:   32 Size:     4
//   int input_667846844_id17;          // Offset:   36 Size:     4
//   float input_3782210842_id18;       // Offset:   40 Size:     4
//   float3 input_3016277339_id19;      // Offset:   48 Size:    12
//   float3 input_3002936162_id20;      // Offset:   64 Size:    12
//   int input_3584695320_id21;         // Offset:   76 Size:     4
//   int input_1350766564_id22;         // Offset:   80 Size:     4
//   float4x4 input_1480872290_id23;    // Offset:   96 Size:    64
//   float3 input_1068171476_id24;      // Offset:  160 Size:    12
//   float input_507444731_id25;        // Offset:  172 Size:     4
//   float4 input_1794496102_id26;      // Offset:  176 Size:    16
//   float input_2460586204_id27;       // Offset:  192 Size:     4
//   float input_602038524_id28;        // Offset:  196 Size:     4
//   int input_3761647472_id29;         // Offset:  200 Size:     4
//   int input_3415458996_id30;         // Offset:  204 Size:     4
//   float3 input_3102826216_id31;      // Offset:  208 Size:    12
//
// }
//
// Resource bind info for DynamicBufferInput_1430151697_id12
// {
//
//   struct Resource7083865
//   {
//       
//       float Age;                     // Offset:    0
//       float LifeTime;                // Offset:    4
//       int Id;                        // Offset:    8
//       float3 PPosition;              // Offset:   12
//       float3 Velocity;               // Offset:   24
//       float Size;                    // Offset:   36
//       float Mass;                    // Offset:   40
//       float4 PColor;                 // Offset:   44
//       int Cycle;                     // Offset:   60
//       float3 PLastPosition;          // Offset:   64
//       float3 AxisX;                  // Offset:   76
//       float3 AxisY;                  // Offset:   88
//       float3 AxisZ;                  // Offset:  100
//
//   } $Element;                        // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DynamicBufferInput_1430151697_id12        UAV  struct         r/w             u0      1 
// PerDispatch                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[14], immediateIndexed
dcl_uav_structured u0, 112
dcl_input vThreadID.x
dcl_temps 4
dcl_thread_group 64, 1, 1
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 84 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_d67add429a5b3d369d92d557fd2047b2.hlsl"
ult r0.x, vThreadID.x, cb0[0].w
if_nz r0.x

#line 85
  ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r0.xy, vThreadID.x, l(0), u0.xyxx  // r0.x <- getBuffer_608833529.Age; r0.y <- getBuffer_608833529.LifeTime
  ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(60), u0.xxxx  // r0.z <- getBuffer_608833529.Cycle

#line 67
  imul null, r1.x, vThreadID.x, l(0x0019660d)
  imul null, r1.yz, cb0[2].xxyx, l(0, 0x0019660d, 0x0019660d, 0)
  iadd r1.xyz, r1.xyzx, l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0)  // r1.x <- v.x; r1.y <- v.y; r1.z <- v.z

#line 68
  imad r2.x, r1.y, r1.z, r1.x  // r2.x <- v.x

#line 69
  imad r2.y, r1.z, r2.x, r1.y  // r2.y <- v.y

#line 70
  imad r2.z, r2.x, r2.y, r1.z  // r2.z <- v.z

#line 71
  ushr r1.xyz, r2.xyzx, l(16, 16, 16, 0)
  xor r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- v.x; r1.y <- v.y; r1.z <- v.z

#line 72
  imad r0.w, r1.y, r1.z, r1.x  // r0.w <- v.x

#line 75
  utof r0.w, r0.w
  mul r0.w, r0.w, l(0.000000)  // r0.w <- <pcg3d_id5 return value>.x

#line 105
  lt r0.w, r0.w, cb0[2].z  // r0.w <- Assign_3475263676

#line 106
  lt r1.x, l(0.000000), r0.x  // r1.x <- Assign_3368646694

#line 107
  ge r0.x, r0.y, r0.x  // r0.x <- Assign_2512927406

#line 108
  and r0.x, r0.x, r1.x  // r0.x <- result_6462808

#line 109
  not r0.x, r0.x  // r0.x <- not_512138156

#line 110
  and r0.x, r0.x, r0.w  // r0.x <- result_2573829339

#line 116
  if_nz r0.x

#line 67
    imul null, r1.x, vThreadID.x, l(0x0019660d)
    imul null, r1.y, cb0[4].w, l(0x0019660d)
    imul null, r1.z, cb0[5].x, l(0x0019660d)
    iadd r0.xyw, r1.xyxz, l(0x3c6ef35f, 0x3c6ef35f, 0, 0x3c6ef35f)  // r0.x <- v.x; r0.y <- v.y; r0.w <- v.z

#line 68
    imad r1.x, r0.y, r0.w, r0.x  // r1.x <- v.x

#line 69
    imad r1.y, r0.w, r1.x, r0.y  // r1.y <- v.y

#line 70
    imad r1.z, r1.x, r1.y, r0.w  // r1.z <- v.z

#line 71
    ushr r0.xyw, r1.xyxz, l(16, 16, 0, 16)
    xor r0.xyw, r0.xyxw, r1.xyxz  // r0.x <- v.x; r0.y <- v.y; r0.w <- v.z

#line 72
    imad r0.x, r0.y, r0.w, r0.x

#line 73
    imad r0.y, r0.w, r0.x, r0.y

#line 74
    imad r0.w, r0.x, r0.y, r0.w

#line 75
    utof r1.xyz, r0.xywx
    mul r0.xyw, r1.xyxz, l(0.000000, 0.000000, 0.000000, 0.000000)  // r0.x <- <pcg3d_id5 return value>.x; r0.y <- <pcg3d_id5 return value>.y; r0.w <- <pcg3d_id5 return value>.z

#line 121
    add r1.xyz, -cb0[3].xyzx, cb0[4].xyzx
    mad r1.xyz, r0.xywx, r1.xyzx, cb0[3].xyzx  // r1.x <- lerp_2578570058.x; r1.y <- lerp_2578570058.y; r1.z <- lerp_2578570058.z

#line 123
    mov r1.w, l(1.000000)
    dp4 r2.w, r1.xyzw, cb0[6].xyzw  // r2.w <- mul_2573312996.x
    dp4 r3.x, r1.xyzw, cb0[7].xyzw  // r3.x <- mul_2573312996.y
    dp4 r3.y, r1.xyzw, cb0[8].xyzw  // r3.y <- mul_2573312996.z

#line 67
    imul null, r1.x, vThreadID.x, l(0x0019660d)
    imul null, r1.yz, cb0[12].zzwz, l(0, 0x0019660d, 0x0019660d, 0)
    iadd r0.xyw, r1.xyxz, l(0x3c6ef35f, 0x3c6ef35f, 0, 0x3c6ef35f)  // r0.x <- v.x; r0.y <- v.y; r0.w <- v.z

#line 68
    imad r1.x, r0.y, r0.w, r0.x  // r1.x <- v.x

#line 69
    imad r1.y, r0.w, r1.x, r0.y  // r1.y <- v.y

#line 70
    imad r1.z, r1.x, r1.y, r0.w  // r1.z <- v.z

#line 71
    ushr r0.xyw, r1.xyxz, l(16, 16, 0, 16)
    xor r0.xyw, r0.xyxw, r1.xyxz  // r0.x <- v.x; r0.y <- v.y; r0.w <- v.z

#line 72
    imad r0.x, r0.y, r0.w, r0.x

#line 75
    utof r0.x, r0.x
    mul r0.x, r0.x, l(0.000000)  // r0.x <- <pcg3d_id5 return value>.x

#line 133
    add r0.y, -cb0[12].x, cb0[12].y
    mad r2.y, r0.x, r0.y, cb0[12].x  // r2.y <- lerp_455325134

#line 136
    iadd r0.w, r0.z, l(1)  // r0.w <- result_2299769928

#line 149
    mov r2.x, l(0.000010)
    mov r2.z, vThreadID.x
    store_structured u0.xyzw, vThreadID.x, l(0), r2.xyzw
    mov r3.zw, cb0[10].xxxy
    store_structured u0.xyzw, vThreadID.x, l(16), r3.xyzw
    mov r1.xy, cb0[10].zwzz
    mov r1.z, l(1.000000)
    mov r1.w, cb0[11].x
    store_structured u0.xyzw, vThreadID.x, l(32), r1.xyzw
    mov r0.xyz, cb0[11].yzwy
    store_structured u0.xyzw, vThreadID.x, l(48), r0.xyzw
    store_structured u0.xyz, vThreadID.x, l(64), cb0[13].xyzx
  endif 
endif 

#line 175
ret 
// Approximately 71 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
struct Resource7083865 
{
    float Age;
    float LifeTime;
    int Id;
    float3 PPosition;
    float3 Velocity;
    float Size;
    float Mass;
    float4 PColor;
    int Cycle;
    float3 PLastPosition;
    float3 AxisX;
    float3 AxisY;
    float3 AxisZ;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
    int input_4188686933_id13;
    float input_1675780435_id14;
    float3 input_3224333447_id15;
    int input_690026424_id16;
    int input_667846844_id17;
    float input_3782210842_id18;
    float3 input_3016277339_id19;
    float3 input_3002936162_id20;
    int input_3584695320_id21;
    int input_1350766564_id22;
    float4x4 input_1480872290_id23;
    float3 input_1068171476_id24;
    float input_507444731_id25;
    float4 input_1794496102_id26;
    float input_2460586204_id27;
    float input_602038524_id28;
    int input_3761647472_id29;
    int input_3415458996_id30;
    float3 input_3102826216_id31;
};
RWStructuredBuffer<Resource7083865> DynamicBufferInput_1430151697_id12;
float3 cast33_id7(float3 p)
{
    return p;
}
float cast13_id6(float3 p)
{
    return p.x;
}
float3 pcg3d_id5(uint3 v)
{
    v = v * 1664525 + 1013904223;
    v.x += v.y * v.z;
    v.y += v.z * v.x;
    v.z += v.x * v.y;
    v = v ^ (v >> 16);
    v.x += v.y * v.z;
    v.y += v.z * v.x;
    v.z += v.x * v.y;
    return float3(v) * (1.0 / float(0xffffffff));
}
void Compute_id4(inout CS_STREAMS streams)
{
    bool Assign_175888817 = streams.DispatchThreadId_id1.x >= input_4188686933_id13;
    if (Assign_175888817)
    {
        return;
    }
    int IndexX_2325186706 = streams.DispatchThreadId_id1.x;
    Resource7083865 getBuffer_608833529 = DynamicBufferInput_1430151697_id12[IndexX_2325186706];
    float age_2977897027 = getBuffer_608833529.Age;
    float lifetime_3241756517 = getBuffer_608833529.LifeTime;
    int id_1315852719 = getBuffer_608833529.Id;
    float3 pposition_2482303265 = getBuffer_608833529.PPosition;
    float3 velocity_4225436868 = getBuffer_608833529.Velocity;
    float size_356383302 = getBuffer_608833529.Size;
    float mass_1317866440 = getBuffer_608833529.Mass;
    float4 pcolor_1743780170 = getBuffer_608833529.PColor;
    int cycle_85334732 = getBuffer_608833529.Cycle;
    float3 plastposition_2519541683 = getBuffer_608833529.PLastPosition;
    float deltatime_1330732818 = 0;
    deltatime_1330732818 = input_1675780435_id14;
    int3 index_454198957 = int3(0, 0, 0);
    index_454198957 = streams.DispatchThreadId_id1;
    float3 resourcescale_358620252 = float3(0, 0, 0);
    resourcescale_358620252 = input_3224333447_id15;
    int3 Int3Join_2312634435 = int3(streams.DispatchThreadId_id1.x, input_690026424_id16, input_667846844_id17);
    float3 pcg3d_3006823147 = pcg3d_id5(Int3Join_2312634435);
    float cast13_3689137829 = cast13_id6(pcg3d_3006823147);
    bool Assign_3475263676 = cast13_3689137829 < input_3782210842_id18;
    bool Assign_3368646694 = age_2977897027 > 0;
    bool Assign_2512927406 = age_2977897027 <= lifetime_3241756517;
    bool result_6462808 = (Assign_3368646694 && Assign_2512927406);
    bool not_512138156 = !result_6462808;
    bool result_2573829339 = (Assign_3475263676 && not_512138156);
    bool not_3820093819 = !result_2573829339;
    if (not_3820093819)
    {
        return;
    }
    age_2977897027 = 1E-05;
    id_1315852719 = streams.DispatchThreadId_id1.x;
    int3 Int3Join_163617579 = int3(streams.DispatchThreadId_id1.x, input_3584695320_id21, input_1350766564_id22);
    float3 pcg3d_3056675795 = pcg3d_id5(Int3Join_163617579);
    float3 cast33_3836609493 = cast33_id7(pcg3d_3056675795);
    float3 lerp_2578570058 = lerp(input_3016277339_id19, input_3002936162_id20, cast33_3836609493);
    float4 join_325586791 = float4(lerp_2578570058, 1);
    float4 mul_2573312996 = mul(join_325586791, input_1480872290_id23);
    float3 mulXyz_971515901 = mul_2573312996.xyz;
    pposition_2482303265 = mulXyz_971515901;
    velocity_4225436868 = input_1068171476_id24;
    size_356383302 = input_507444731_id25;
    mass_1317866440 = 1;
    pcolor_1743780170 = input_1794496102_id26;
    int3 Int3Join_694337921 = int3(streams.DispatchThreadId_id1.x, input_3761647472_id29, input_3415458996_id30);
    float3 pcg3d_395128581 = pcg3d_id5(Int3Join_694337921);
    float cast13_3691335043 = cast13_id6(pcg3d_395128581);
    float lerp_455325134 = lerp(input_2460586204_id27, input_602038524_id28, cast13_3691335043);
    lifetime_3241756517 = lerp_455325134;
    age_2977897027 = 1E-05;
    int result_2299769928 = (cycle_85334732 + 1);
    cycle_85334732 = result_2299769928;
    plastposition_2519541683 = input_3102826216_id31;
    getBuffer_608833529.Age = age_2977897027;
    getBuffer_608833529.LifeTime = lifetime_3241756517;
    getBuffer_608833529.Id = id_1315852719;
    getBuffer_608833529.PPosition = pposition_2482303265;
    getBuffer_608833529.Velocity = velocity_4225436868;
    getBuffer_608833529.Size = size_356383302;
    getBuffer_608833529.Mass = mass_1317866440;
    getBuffer_608833529.PColor = pcolor_1743780170;
    getBuffer_608833529.Cycle = cycle_85334732;
    getBuffer_608833529.PLastPosition = plastposition_2519541683;
    DynamicBufferInput_1430151697_id12[IndexX_2325186706] = getBuffer_608833529;
}
void Compute_id3(inout CS_STREAMS streams)
{

    {
        Compute_id4(streams);
    }
}
void Compute_id2(inout CS_STREAMS streams)
{
    Compute_id3(streams);
}
[numthreads(64, 1, 1)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 64;
    streams.ThreadCountY_id8 = 1;
    streams.ThreadCountZ_id9 = 1;
    streams.ThreadCountPerGroup_id5 = 64 * 1 * 1;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id2(streams);
}
