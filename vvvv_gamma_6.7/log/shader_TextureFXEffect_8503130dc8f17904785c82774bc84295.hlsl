/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin OpticalFlow_Derivatives_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 16]
@C    InputValue_id88 => ShaderFX.InputValueFloat4
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id16 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    OpticalFlow_Derivatives_Internal_TextureFX => 0135799c3bf17576535e826d42840976
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 208 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_8503130dc8f17904785c82774bc84295.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 212
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 739a0f907614bdee9e77a0fea3f48b82
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id88;            // Offset:    0 Size:    16
//
// }
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8 [unused]
//   float2 ViewSize_id77;              // Offset:   16 Size:     8
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// Texture1_id16                     texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 145 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_8503130dc8f17904785c82774bc84295.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- centerColorPrev

#line 148
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t1.yxzw, s0, l(0.000000)  // r0.y <- centerColor

#line 182
add r0.z, -r0.x, r0.y  // r0.z <- resultZ

#line 147
div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb1[1].xyxx  // r1.x <- texelWidth; r1.y <- texelHeight

#line 150
mad r2.xyzw, r1.xyxy, l(-2.000000, -2.000000, -1.000000, -2.000000), v1.xyxy

#line 149
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.yzxw, s0, l(0.000000)  // r1.z <- c00

#line 150
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.yzwx, s0, l(0.000000)  // r1.w <- c01

#line 173
mul r2.x, r1.z, l(-2.000000)
mad r1.z, r1.z, l(-2.000000), -r1.w

#line 178
mad r1.w, r1.w, l(-3.000000), r2.x

#line 152
mad r2.xyzw, r1.xyxy, l(0.000000, -2.000000, 1.000000, -2.000000), v1.xyxy

#line 151
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t1.xyzw, s0, l(0.000000)  // r2.x <- c02

#line 152
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r2.zwzz, t1.yxzw, s0, l(0.000000)  // r2.y <- c03

#line 178
mad r1.w, r2.x, l(-4.000000), r1.w
mad r1.w, r2.y, l(-3.000000), r1.w

#line 173
add r1.z, r1.z, r2.y

#line 154
mad r2.xyzw, r1.xyxy, l(2.000000, -2.000000, -2.000000, -1.000000), v1.xyxy

#line 153
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t1.xyzw, s0, l(0.000000)  // r2.x <- c04

#line 154
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r2.zwzz, t1.yxzw, s0, l(0.000000)  // r2.y <- c10

#line 178
mad r1.w, r2.x, l(-2.000000), r1.w  // r1.w <- resultY

#line 173
mad r1.z, r2.x, l(2.000000), r1.z  // r1.z <- resultX

#line 155
add r2.xz, -r1.xxyx, v1.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xzxx, t1.xyzw, s0, l(0.000000)  // r2.x <- c11

#line 179
mad r2.z, r2.x, l(-2.000000), -r2.y

#line 174
mul r2.x, r2.x, l(-2.000000)
mad r2.x, r2.y, l(-3.000000), r2.x

#line 157
mad r3.xyzw, r1.xyxy, l(0.000000, -1.000000, 1.000000, -1.000000), v1.xyxy

#line 156
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t1.yxzw, s0, l(0.000000)  // r2.y <- c12

#line 157
sample_l_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.yzwx, s0, l(0.000000)  // r2.w <- c13

#line 179
mad r2.y, r2.y, l(-3.000000), r2.z
mad r2.y, r2.w, l(-2.000000), r2.y

#line 174
mad r2.x, r2.w, l(2.000000), r2.x

#line 159
mad r3.xyzw, r1.xyxy, l(2.000000, -1.000000, -2.000000, 0.000000), v1.xyxy

#line 158
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r3.xyxx, t1.yzxw, s0, l(0.000000)  // r2.z <- c14

#line 159
sample_l_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.yzwx, s0, l(0.000000)  // r2.w <- c20

#line 179
add r2.y, -r2.z, r2.y

#line 174
mad r2.x, r2.z, l(3.000000), r2.x
add r1.zw, r1.zzzw, r2.xxxy

#line 163
mad r3.xyzw, r1.xyxy, l(2.000000, 0.000000, -2.000000, 1.000000), v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t1.xyzw, s0, l(0.000000)  // r2.x <- c30

#line 162
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t1.yxzw, s0, l(0.000000)  // r2.y <- c24

#line 165
mad r3.xyzw, r1.xyxy, l(-1.000000, 1.000000, 0.000000, 1.000000), v1.xyxy

#line 164
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r3.xyxx, t1.yzxw, s0, l(0.000000)  // r2.z <- c31

#line 165
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t1.xyzw, s0, l(0.000000)  // r3.x <- c32

#line 180
mad r3.y, r2.z, l(2.000000), r2.x

#line 176
mul r2.z, r2.z, l(-2.000000)
mad r2.x, r2.x, l(-3.000000), r2.z

#line 180
mad r2.z, r3.x, l(3.000000), r3.y

#line 166
add r3.xy, r1.xyxx, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xyzw, s0, l(0.000000)  // r3.x <- c33

#line 180
mad r2.z, r3.x, l(2.000000), r2.z

#line 176
mad r2.x, r3.x, l(2.000000), r2.x

#line 168
mad r3.xyzw, r1.xyxy, l(2.000000, 1.000000, -2.000000, 2.000000), v1.xyxy

#line 167
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xyzw, s0, l(0.000000)  // r3.x <- c34

#line 168
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r3.zwzz, t1.yxzw, s0, l(0.000000)  // r3.y <- c40

#line 180
add r2.z, r2.z, r3.x

#line 176
mad r2.x, r3.x, l(3.000000), r2.x

#line 180
add r1.w, r1.w, r2.z

#line 181
add r2.z, r3.y, r3.y

#line 170
mad r4.xyzw, r1.xyxy, l(-1.000000, 2.000000, 0.000000, 2.000000), v1.xyxy

#line 169
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t1.xyzw, s0, l(0.000000)  // r3.x <- c41

#line 170
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r4.zwzz, t1.yzxw, s0, l(0.000000)  // r3.z <- c42

#line 181
mad r2.z, r3.x, l(3.000000), r2.z

#line 177
mad r3.x, r3.y, l(-2.000000), -r3.x

#line 181
mad r2.z, r3.z, l(4.000000), r2.z

#line 171
mad r3.yz, r1.xxyx, l(0.000000, 1.000000, 2.000000, 0.000000), v1.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r3.yzyy, t1.yxzw, s0, l(0.000000)  // r3.y <- c43

#line 181
mad r2.z, r3.y, l(3.000000), r2.z

#line 177
add r3.x, r3.y, r3.x

#line 172
mad r3.yz, r1.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), v1.xxyx

#line 161
mad r4.xyzw, r1.xyxy, l(-1.000000, 0.000000, 1.000000, 0.000000), v1.xyxy

#line 172
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r3.yzyy, t1.xyzw, s0, l(0.000000)  // r1.x <- c44

#line 181
mad r1.y, r1.x, l(2.000000), r2.z

#line 177
mad r1.x, r1.x, l(2.000000), r3.x

#line 181
add r0.y, r1.y, r1.w  // r0.y <- resultY

#line 160
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r4.xyxx, t1.yxzw, s0, l(0.000000)  // r1.y <- c21

#line 161
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.zwzz, t1.yzwx, s0, l(0.000000)  // r1.w <- c23

#line 175
mul r1.y, r1.y, l(-3.000000)
mad r1.y, r2.w, l(-4.000000), r1.y
mad r1.y, r1.w, l(3.000000), r1.y
mad r1.y, r2.y, l(4.000000), r1.y
add r1.y, r1.y, r1.z  // r1.y <- resultX

#line 176
add r1.y, r2.x, r1.y

#line 177
add r0.x, r1.x, r1.y  // r0.x <- resultX

#line 192
mov r0.w, l(1.000000)

#line 187
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r1.x <- <InTex0_id26 return value>.x; r1.y <- <InTex0_id26 return value>.y; r1.z <- <InTex0_id26 return value>.z; r1.w <- <InTex0_id26 return value>.w

#line 192
add r0.xyzw, r0.xyzw, -r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r0.xyzw, r1.xyzw

#line 201
ret 
// Approximately 89 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id88;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 Compute_id30()
{
    return InputValue_id88;
}
float4 Filter_id29(inout PS_STREAMS streams, float4 tex0col)
{
    float2 uv = streams.TexCoord_id62;
    float centerColorPrev = Texture0_id14.SampleLevel(LinearSampler_id44, uv, 0).r;
    float texelWidth = 1 / ViewSize_id77.x;
    float texelHeight = 1 / ViewSize_id77.y;
    float centerColor = Texture1_id16.SampleLevel(LinearSampler_id44, uv, 0).r;
    float c00 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-2, -2) * float2(texelWidth, texelHeight), 0).r;
    float c01 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-1, -2) * float2(texelWidth, texelHeight), 0).r;
    float c02 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(0, -2) * float2(texelWidth, texelHeight), 0).r;
    float c03 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(1, -2) * float2(texelWidth, texelHeight), 0).r;
    float c04 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(2, -2) * float2(texelWidth, texelHeight), 0).r;
    float c10 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-2, -1) * float2(texelWidth, texelHeight), 0).r;
    float c11 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-1, -1) * float2(texelWidth, texelHeight), 0).r;
    float c12 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(0, -1) * float2(texelWidth, texelHeight), 0).r;
    float c13 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(1, -1) * float2(texelWidth, texelHeight), 0).r;
    float c14 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(2, -1) * float2(texelWidth, texelHeight), 0).r;
    float c20 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-2, 0) * float2(texelWidth, texelHeight), 0).r;
    float c21 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-1, 0) * float2(texelWidth, texelHeight), 0).r;
    float c23 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(1, 0) * float2(texelWidth, texelHeight), 0).r;
    float c24 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(2, 0) * float2(texelWidth, texelHeight), 0).r;
    float c30 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-2, 1) * float2(texelWidth, texelHeight), 0).r;
    float c31 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-1, 1) * float2(texelWidth, texelHeight), 0).r;
    float c32 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(0, 1) * float2(texelWidth, texelHeight), 0).r;
    float c33 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(1, 1) * float2(texelWidth, texelHeight), 0).r;
    float c34 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(2, 1) * float2(texelWidth, texelHeight), 0).r;
    float c40 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-2, 2) * float2(texelWidth, texelHeight), 0).r;
    float c41 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(-1, 2) * float2(texelWidth, texelHeight), 0).r;
    float c42 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(0, 2) * float2(texelWidth, texelHeight), 0).r;
    float c43 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(1, 2) * float2(texelWidth, texelHeight), 0).r;
    float c44 = Texture1_id16.SampleLevel(LinearSampler_id44, uv + float2(2, 2) * float2(texelWidth, texelHeight), 0).r;
    float resultX = c00 * -2 + c01 * -1 + c03 * 1 + c04 * 2;
    resultX += c10 * -3 + c11 * -2 + c12 * 0 + c13 * 2 + c14 * 3;
    resultX += c20 * -4 + c21 * -3 + c23 * 3 + c24 * 4;
    resultX += c30 * -3 + c31 * -2 + c33 * 2 + c34 * 3;
    resultX += c40 * -2 + c41 * -1 + c43 * 1 + c44 * 2;
    float resultY = c00 * -2 + c01 * -3 + c02 * -4 + c03 * -3 + c04 * -2;
    resultY += c10 * -1 + c11 * -2 + c12 * -3 + c13 * -2 + c14 * -1;
    resultY += c30 * 1 + c31 * 2 + c32 * 3 + c33 * 2 + c34 * 1;
    resultY += c40 * 2 + c41 * 3 + c42 * 4 + c43 * 3 + c44 * 2;
    float resultZ = (centerColor - centerColorPrev);
    return float4(resultX, resultY, resultZ, 1.);
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id29(streams, col), Compute_id30());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
