/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin AddonHalo_Gradient_Internal_TextureFX [{BackgroundColor = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {Gamma = InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>}, {GradientY = InputFloat<ShaderFX.InputValueFloat.i3,PerUpdate>}, {HaloColor = InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>}, {InnerRadius = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}, {OuterRadius = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}]
@P InnerRadius: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P OuterRadius: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P BackgroundColor: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
@P HaloColor: InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>
@P Gamma: InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>
@P GradientY: InputFloat<ShaderFX.InputValueFloat.i3,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 64]
@C    InputValue_id97 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id98 => ShaderFX.InputValueFloat.i2
@C    InputValue_id99 => ShaderFX.InputValueFloat.i3
@C    InputValue_id100 => ShaderFX.InputValueFloat4_Color.i1
@C    InputValue_id101 => ShaderFX.InputValueFloat
@C    InputValue_id102 => ShaderFX.InputValueFloat.i1
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    GradientType_id95 => AddonHalo_Gradient_Internal_TextureFX.GradientType
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    GradientTexture_id96 => AddonHalo_Gradient_Internal_TextureFX.GradientTexture [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (2-2)]
***************************
*****     Sources     *****
***************************
@S    AddonHalo_Gradient_Internal_TextureFX => 510328cd673aa2a2e75c2b41a88c0c0f
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    Spectral => bc9d7308725c257b654806f76db4ed93
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 352 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_1be5be8afe91572858e66dfbe1a99de5.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 356
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 0e18685b58e3fb907cf88d6a67049dd5
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id97;            // Offset:    0 Size:    16
//   float InputValue_id98;             // Offset:   16 Size:     4
//   float InputValue_id99;             // Offset:   20 Size:     4
//   float4 InputValue_id100;           // Offset:   32 Size:    16
//   float InputValue_id101;            // Offset:   48 Size:     4
//   float InputValue_id102;            // Offset:   52 Size:     4
//
// }
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8 [unused]
//   float2 ViewSize_id77;              // Offset:   16 Size:     8
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int GradientType_id95;             // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// GradientTexture_id96              texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
// Globals                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 23
dcl_indexableTemp x0[38], 4
dcl_indexableTemp x1[38], 4
dcl_indexableTemp x2[38], 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 327 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_1be5be8afe91572858e66dfbe1a99de5.hlsl"
div r0.x, cb1[1].x, cb1[1].y  // r0.x <- aspect

#line 328
add r0.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
mov r0.y, l(1.000000)
mul r0.xy, r0.xyxx, r0.zwzz

#line 332
add r0.z, -cb0[3].x, cb0[3].y  // r0.z <- thickness

#line 333
dp2 r0.x, -r0.xyxx, -r0.xyxx
sqrt r0.x, r0.x
add r0.x, r0.x, -cb0[3].x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.z, r0.x  // r0.x <- halo

#line 334
div r0.x, r0.x, r0.z  // r0.x <- f

#line 335
add r0.z, -cb0[1].x, l(1.000010)
div r0.z, cb0[1].x, r0.z  // r0.z <- g

#line 295
mov r0.y, cb0[1].y
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- f

#line 296
lt r0.y, l(0.000000), r0.x
lt r0.w, r0.x, l(0.000000)
iadd r0.y, -r0.y, r0.w
itof r0.y, r0.y
log r0.x, |r0.x|
mul r0.x, r0.x, r0.z
exp r0.x, r0.x
mul r0.z, r0.x, r0.y  // r0.z <- f

#line 298
switch cb2[5].x

#line 301
  case l(0)

#line 302
  add r2.xyzw, cb0[0].xyzw, -cb0[2].xyzw
  mad r1.xyzw, r0.zzzz, r2.xyzw, cb0[2].xyzw  // r1.x <- c.x; r1.y <- c.y; r1.z <- c.z; r1.w <- c.w

#line 303
  break 

#line 304
  case l(1)

#line 149
  min r0.w, cb0[2].z, cb0[2].y
  min r0.w, r0.w, cb0[2].x  // r0.w <- w

#line 150
  add r2.xyzw, -r0.wwww, cb0[2].zyzx  // r2.y <- lrgb.y; r2.z <- lrgb.z; r2.w <- lrgb.x

#line 153
  min r3.xyzw, r2.zzyz, r2.ywwy  // r3.w <- c; r3.y <- m; r3.z <- y

#line 155
  add r4.xyzw, -r2.xyzw, r2.wwyy
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r4.xyzw, r4.ywyw, r4.xzxz  // r4.z <- r; r4.w <- g

#line 156
  add r2.xy, -r2.ywyy, r2.zzzz
  max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r2.x, r2.y, r2.x  // r2.x <- b

#line 220
  mad r2.yz, r3.wwww, l(0.000000, 0.968536, 0.968551, 0.000000), r0.wwww

#line 219
  mad r2.y, r3.y, l(0.515671), r2.y
  mad r2.y, r3.z, l(0.020553), r2.y
  mad r2.y, r4.z, l(0.031476), r2.y
  mad r2.y, r4.w, l(0.491086), r2.y
  mad r2.y, r2.x, l(0.979018), r2.y

#line 220
  mad r2.z, r3.y, l(0.540155), r2.z
  mad r2.z, r3.z, l(0.020599), r2.z
  mad r2.z, r4.z, l(0.031466), r2.z
  mad r2.z, r4.w, l(0.469441), r2.z
  mad r2.z, r2.x, l(0.979016), r2.z

#line 221
  mad r2.w, r3.w, l(0.968593), r0.w
  mad r2.w, r3.y, l(0.626455), r2.w
  mad r2.w, r3.z, l(0.020627), r2.w
  mad r2.w, r4.z, l(0.031406), r2.w
  mad r2.w, r4.w, l(0.401658), r2.w
  mad r2.w, r2.x, l(0.979011), r2.w

#line 222
  mad r5.x, r3.w, l(0.968773), r0.w
  mad r5.x, r3.y, l(0.755950), r5.x
  mad r5.x, r3.z, l(0.020734), r5.x
  mad r5.x, r4.z, l(0.031196), r5.x
  mad r5.x, r4.w, l(0.244904), r5.x
  mad r5.x, r2.x, l(0.978921), r5.x

#line 224
  mad r5.yz, r3.wwww, l(0.000000, 0.969422, 0.971437, 0.000000), r0.wwww

#line 223
  mad r5.y, r3.y, l(0.928270), r5.y
  mad r5.y, r3.z, l(0.021142), r5.y
  mad r5.y, r4.z, l(0.030539), r5.y
  mad r5.y, r4.w, l(0.068269), r5.y
  mad r5.y, r2.x, l(0.978586), r5.y

#line 224
  mad r5.z, r3.y, l(0.972236), r5.z
  mad r5.z, r3.z, l(0.022332), r5.z
  mad r5.z, r4.z, l(0.028569), r5.z
  mad r5.z, r4.w, l(0.027329), r5.z
  mad r5.z, r2.x, l(0.977437), r5.z

#line 225
  mad r5.w, r3.w, l(0.975419), r0.w
  mad r5.w, r3.y, l(0.986162), r5.w
  mad r5.w, r3.z, l(0.025569), r5.w
  mad r5.w, r4.z, l(0.024595), r5.w
  mad r5.w, r4.w, l(0.013606), r5.w
  mad r5.w, r2.x, l(0.974281), r5.w

#line 222
  max r5.xyzw, r5.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 226
  mad r6.x, r3.w, l(0.980742), r0.w
  mad r6.x, r3.y, l(0.989553), r6.x
  mad r6.x, r3.z, l(0.033302), r6.x
  mad r6.x, r4.z, l(0.019295), r6.x
  mad r6.x, r4.w, l(0.010002), r6.x
  mad r6.x, r2.x, l(0.966632), r6.x

#line 228
  mad r6.yz, r3.wwww, l(0.000000, 0.985810, 0.989712, 0.000000), r0.wwww

#line 227
  mad r6.y, r3.y, l(0.986762), r6.y
  mad r6.y, r3.z, l(0.051853), r6.y
  mad r6.y, r4.z, l(0.014231), r6.y
  mad r6.y, r4.w, l(0.012841), r6.y
  mad r6.y, r2.x, l(0.948229), r6.y

#line 228
  mad r6.z, r3.y, l(0.973126), r6.z
  mad r6.z, r3.z, l(0.100876), r6.z
  mad r6.z, r4.z, l(0.010331), r6.z
  mad r6.z, r4.w, l(0.026366), r6.z
  mad r6.z, r2.x, l(0.899377), r6.z

#line 229
  mad r6.w, r3.w, l(0.992380), r0.w
  mad r6.w, r3.y, l(0.919443), r6.w
  mad r6.w, r3.z, l(0.240004), r6.w
  mad r6.w, r4.z, l(0.007659), r6.w
  mad r6.w, r4.w, l(0.070587), r6.w
  mad r6.w, r2.x, l(0.760702), r6.w

#line 226
  max r6.xyzw, r6.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 230
  mad r7.x, r3.w, l(0.994098), r0.w
  mad r7.x, r3.y, l(0.325649), r7.x
  mad r7.x, r3.z, l(0.535891), r7.x
  mad r7.x, r4.z, l(0.005937), r7.x
  mad r7.x, r4.w, l(0.704217), r7.x
  mad r7.x, r2.x, l(0.464204), r7.x

#line 232
  mad r7.yz, r3.wwww, l(0.000000, 0.995172, 0.995765, 0.000000), r0.wwww

#line 231
  mad r7.y, r3.y, l(0.138206), r7.y
  mad r7.y, r3.z, l(0.798747), r7.y
  mad r7.y, r4.z, l(0.004856), r7.y
  mad r7.y, r4.w, l(0.854740), r7.y
  mad r7.y, r2.x, l(0.201230), r7.y

#line 232
  mad r7.z, r3.y, l(0.050151), r7.z
  mad r7.z, r3.z, l(0.911865), r7.z
  mad r7.z, r4.z, l(0.004262), r7.z
  mad r7.z, r4.w, l(0.950816), r7.z
  mad r7.z, r2.x, l(0.088084), r7.z

#line 233
  mad r7.w, r3.w, l(0.995935), r0.w
  mad r7.w, r3.y, l(0.029123), r7.w
  mad r7.w, r3.z, l(0.953996), r7.w
  mad r7.w, r4.z, l(0.004090), r7.w
  mad r7.w, r4.w, l(0.971704), r7.w
  mad r7.w, r2.x, l(0.045929), r7.w

#line 230
  max r7.xyzw, r7.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 234
  mad r8.x, r3.w, l(0.995640), r0.w
  mad r8.x, r3.y, l(0.024217), r8.x
  mad r8.x, r3.z, l(0.971371), r8.x
  mad r8.x, r4.z, l(0.004384), r8.x
  mad r8.x, r4.w, l(0.976519), r8.x
  mad r8.x, r2.x, l(0.028604), r8.x

#line 236
  mad r8.yz, r3.wwww, l(0.000000, 0.994648, 0.992296, 0.000000), r0.wwww

#line 235
  mad r8.y, r3.y, l(0.026607), r8.y
  mad r8.y, r3.z, l(0.979395), r8.y
  mad r8.y, r4.z, l(0.005375), r8.y
  mad r8.y, r4.w, l(0.974292), r8.y
  mad r8.y, r2.x, l(0.020601), r8.y

#line 236
  mad r8.z, r3.y, l(0.034076), r8.z
  mad r8.z, r3.z, l(0.983452), r8.z
  mad r8.z, r4.z, l(0.007730), r8.z
  mad r8.z, r4.w, l(0.970129), r8.z
  mad r8.z, r2.x, l(0.016567), r8.z

#line 237
  mad r8.w, r3.w, l(0.986388), r0.w
  mad r8.w, r3.y, l(0.048359), r8.w
  mad r8.w, r3.z, l(0.985537), r8.w
  mad r8.w, r4.z, l(0.013661), r8.w
  mad r8.w, r4.w, l(0.942586), r8.w
  mad r8.w, r2.x, l(0.014515), r8.w

#line 234
  max r8.xyzw, r8.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 238
  mad r9.x, r3.w, l(0.968297), r0.w
  mad r9.x, r3.y, l(0.000117), r9.x
  mad r9.x, r3.z, l(0.986489), r9.x
  mad r9.x, r4.z, l(0.031814), r9.x
  mad r9.x, r4.w, l(0.999892), r9.x
  mad r9.x, r2.x, l(0.013580), r9.x

#line 240
  mad r9.yz, r3.wwww, l(0.000000, 0.892280, 0.537402, 0.000000), r0.wwww

#line 239
  mad r9.y, r3.y, l(0.000086), r9.y
  mad r9.y, r3.z, l(0.986745), r9.y
  mad r9.y, r4.z, l(0.107915), r9.y
  mad r9.y, r4.w, l(0.999899), r9.y
  mad r9.y, r2.x, l(0.013312), r9.y

#line 240
  mad r9.z, r3.y, l(0.852679), r9.z
  mad r9.z, r3.z, l(0.986576), r9.z
  mad r9.z, r4.z, l(0.462495), r9.z
  mad r9.z, r4.w, l(0.138231), r9.z
  mad r9.z, r2.x, l(0.013477), r9.z

#line 241
  mad r9.w, r3.w, l(0.153604), r0.w
  mad r9.w, r3.y, l(0.931888), r9.w
  mad r9.w, r3.z, l(0.986119), r9.w
  mad r9.w, r4.z, l(0.846043), r9.w
  mad r9.w, r4.w, l(0.069681), r9.w
  mad r9.w, r2.x, l(0.013872), r9.w

#line 238
  max r9.xyzw, r9.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 242
  mad r10.x, r3.w, l(0.057057), r0.w
  mad r10.x, r3.y, l(0.948103), r10.x
  mad r10.x, r3.z, l(0.985599), r10.x
  mad r10.x, r4.z, l(0.942756), r10.x
  mad r10.x, r4.w, l(0.056288), r10.x
  mad r10.x, r2.x, l(0.014355), r10.x

#line 244
  mad r10.yz, r3.wwww, l(0.000000, 0.031265, 0.022054, 0.000000), r0.wwww

#line 243
  mad r10.y, r3.y, l(0.942010), r10.y
  mad r10.y, r3.z, l(0.985071), r10.y
  mad r10.y, r4.z, l(0.968610), r10.y
  mad r10.y, r4.w, l(0.061116), r10.y
  mad r10.y, r2.x, l(0.014798), r10.y

#line 244
  mad r10.z, r3.y, l(0.914780), r10.z
  mad r10.z, r3.z, l(0.984600), r10.z
  mad r10.z, r4.z, l(0.977840), r10.z
  mad r10.z, r4.w, l(0.089877), r10.z
  mad r10.z, r2.x, l(0.015153), r10.z

#line 245
  mad r10.w, r3.w, l(0.018023), r0.w
  mad r10.w, r3.y, l(0.870654), r10.w
  mad r10.w, r3.z, l(0.984253), r10.w
  mad r10.w, r4.z, l(0.981878), r10.w
  mad r10.w, r4.w, l(0.136560), r10.w
  mad r10.w, r2.x, l(0.015405), r10.w

#line 242
  max r10.xyzw, r10.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 246
  mad r11.x, r3.w, l(0.016135), r0.w
  mad r11.x, r3.y, l(0.788275), r11.x
  mad r11.x, r3.z, l(0.984039), r11.x
  mad r11.x, r4.z, l(0.983773), r11.x
  mad r11.x, r4.w, l(0.221696), r11.x
  mad r11.x, r2.x, l(0.015572), r11.x

#line 248
  mad r11.yz, r3.wwww, l(0.000000, 0.015209, 0.014760, 0.000000), r0.wwww

#line 247
  mad r11.y, r3.y, l(0.657384), r11.y
  mad r11.y, r3.z, l(0.983885), r11.y
  mad r11.y, r4.z, l(0.984702), r11.y
  mad r11.y, r4.w, l(0.321770), r11.y
  mad r11.y, r2.x, l(0.015657), r11.y

#line 248
  mad r11.z, r3.y, l(0.599094), r11.z
  mad r11.z, r3.z, l(0.983761), r11.z
  mad r11.z, r4.z, l(0.985155), r11.z
  mad r11.z, r4.w, l(0.361573), r11.z
  mad r11.z, r2.x, l(0.015710), r11.z

#line 249
  mad r11.w, r3.w, l(0.014543), r0.w
  mad r11.w, r3.y, l(0.568173), r11.w
  mad r11.w, r3.z, l(0.983682), r11.w
  mad r11.w, r4.z, l(0.985371), r11.w
  mad r11.w, r4.w, l(0.483619), r11.w
  mad r11.w, r2.x, l(0.015719), r11.w

#line 246
  max r11.xyzw, r11.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 250
  mad r12.x, r3.w, l(0.014445), r0.w
  mad r12.x, r3.y, l(0.540320), r12.x
  mad r12.x, r3.z, l(0.983650), r12.x
  mad r12.x, r4.z, l(0.985467), r12.x
  mad r12.x, r4.w, l(0.464886), r12.x
  mad r12.x, r2.x, l(0.015721), r12.x

#line 252
  mad r12.yz, r3.wwww, l(0.000000, 0.014399, 0.014376, 0.000000), r0.wwww

#line 251
  mad r12.y, r3.y, l(0.521102), r12.y
  mad r12.y, r3.z, l(0.983613), r12.y
  mad r12.y, r4.z, l(0.985500), r12.y
  mad r12.y, r4.w, l(0.474403), r12.y
  mad r12.y, r2.x, l(0.015725), r12.y

#line 252
  mad r12.z, r3.y, l(0.510411), r12.z
  mad r12.z, r3.z, l(0.983573), r12.z
  mad r12.z, r4.z, l(0.985510), r12.z
  mad r12.z, r4.w, l(0.485770), r12.z
  mad r12.z, r2.x, l(0.015717), r12.z

#line 253
  mad r12.w, r3.w, l(0.014363), r0.w
  mad r12.w, r3.y, l(0.505266), r12.w
  mad r12.w, r3.z, l(0.983539), r12.w
  mad r12.w, r4.z, l(0.985507), r12.w
  mad r12.w, r4.w, l(0.492680), r12.w
  mad r12.w, r2.x, l(0.015719), r12.w

#line 250
  max r12.xyzw, r12.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 254
  mad r13.x, r3.w, l(0.014357), r0.w
  mad r13.x, r3.y, l(0.502551), r13.x
  mad r13.x, r3.z, l(0.983512), r13.x
  mad r13.x, r4.z, l(0.985513), r13.x
  mad r13.x, r4.w, l(0.496257), r13.x
  mad r13.x, r2.x, l(0.015711), r13.x
  max r13.x, r13.x, l(0.000100)

#line 256
  mad r3.xw, r3.xxxw, l(0.014354, 0.000000, 0.000000, 0.014354), r0.wwww

#line 255
  mad r0.w, r3.y, l(0.501265), r3.x
  mad r0.w, r3.z, l(0.983501), r0.w
  mad r0.w, r4.x, l(0.985516), r0.w
  mad r0.w, r4.y, l(0.498078), r0.w
  mad r0.w, r2.x, l(0.015697), r0.w
  max r0.w, r0.w, l(0.000100)

#line 256
  mad r3.x, r3.y, l(0.500830), r3.w
  mad r3.x, r3.z, l(0.983509), r3.x
  mad r3.x, r4.z, l(0.985515), r3.x
  mad r3.x, r4.w, l(0.498899), r3.x
  mad r2.x, r2.x, l(0.015700), r3.x

#line 219
  max r2.xyzw, r2.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 262
  mov x0[0].x, r2.y
  mov x0[1].x, r2.z
  mov x0[2].x, r2.w
  mov x0[3].x, r5.x
  mov x0[4].x, r5.y
  mov x0[5].x, r5.z
  mov x0[6].x, r5.w
  mov x0[7].x, r6.x
  mov x0[8].x, r6.y
  mov x0[9].x, r6.z
  mov x0[10].x, r6.w
  mov x0[11].x, r7.x
  mov x0[12].x, r7.y
  mov x0[13].x, r7.z
  mov x0[14].x, r7.w
  mov x0[15].x, r8.x
  mov x0[16].x, r8.y
  mov x0[17].x, r8.z
  mov x0[18].x, r8.w
  mov x0[19].x, r9.x
  mov x0[20].x, r9.y
  mov x0[21].x, r9.z
  mov x0[22].x, r9.w
  mov x0[23].x, r10.x
  mov x0[24].x, r10.y
  mov x0[25].x, r10.z
  mov x0[26].x, r10.w
  mov x0[27].x, r11.x
  mov x0[28].x, r11.y
  mov x0[29].x, r11.z
  mov x0[30].x, r11.w
  mov x0[31].x, r12.x
  mov x0[32].x, r12.y
  mov x0[33].x, r12.z
  mov x0[34].x, r12.w
  mov x0[35].x, r13.x
  mov x0[36].x, r0.w
  mov x0[37].x, r2.x

#line 149
  min r3.x, cb0[0].z, cb0[0].y
  min r3.x, r3.x, cb0[0].x  // r3.x <- w

#line 150
  add r4.xyzw, -r3.xxxx, cb0[0].zyzx  // r4.y <- lrgb.y; r4.z <- lrgb.z; r4.w <- lrgb.x

#line 153
  min r14.xyzw, r4.zzyz, r4.ywwy  // r14.w <- c; r14.y <- m; r14.z <- y

#line 155
  add r15.xyzw, -r4.xyzw, r4.wwyy
  max r15.xyzw, r15.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r15.xyzw, r15.ywyw, r15.xzxz  // r15.z <- r; r15.w <- g

#line 156
  add r3.yz, -r4.yywy, r4.zzzz
  max r3.yz, r3.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r3.y, r3.z, r3.y  // r3.y <- b

#line 220
  mad r3.zw, r14.wwww, l(0.000000, 0.000000, 0.968536, 0.968551), r3.xxxx

#line 219
  mad r3.z, r14.y, l(0.515671), r3.z
  mad r3.z, r14.z, l(0.020553), r3.z
  mad r3.z, r15.z, l(0.031476), r3.z
  mad r3.z, r15.w, l(0.491086), r3.z
  mad r3.z, r3.y, l(0.979018), r3.z

#line 220
  mad r3.w, r14.y, l(0.540155), r3.w
  mad r3.w, r14.z, l(0.020599), r3.w
  mad r3.w, r15.z, l(0.031466), r3.w
  mad r3.w, r15.w, l(0.469441), r3.w
  mad r3.w, r3.y, l(0.979016), r3.w

#line 221
  mad r4.x, r14.w, l(0.968593), r3.x
  mad r4.x, r14.y, l(0.626455), r4.x
  mad r4.x, r14.z, l(0.020627), r4.x
  mad r4.x, r15.z, l(0.031406), r4.x
  mad r4.x, r15.w, l(0.401658), r4.x
  mad r4.x, r3.y, l(0.979011), r4.x

#line 222
  mad r4.y, r14.w, l(0.968773), r3.x
  mad r4.y, r14.y, l(0.755950), r4.y
  mad r4.y, r14.z, l(0.020734), r4.y
  mad r4.y, r15.z, l(0.031196), r4.y
  mad r4.y, r15.w, l(0.244904), r4.y
  mad r4.y, r3.y, l(0.978921), r4.y

#line 224
  mad r4.zw, r14.wwww, l(0.000000, 0.000000, 0.969422, 0.971437), r3.xxxx

#line 223
  mad r4.z, r14.y, l(0.928270), r4.z
  mad r4.z, r14.z, l(0.021142), r4.z
  mad r4.z, r15.z, l(0.030539), r4.z
  mad r4.z, r15.w, l(0.068269), r4.z
  mad r4.z, r3.y, l(0.978586), r4.z

#line 224
  mad r4.w, r14.y, l(0.972236), r4.w
  mad r4.w, r14.z, l(0.022332), r4.w
  mad r4.w, r15.z, l(0.028569), r4.w
  mad r4.w, r15.w, l(0.027329), r4.w
  mad r4.w, r3.y, l(0.977437), r4.w

#line 221
  max r4.xyzw, r4.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 225
  mad r13.y, r14.w, l(0.975419), r3.x
  mad r13.y, r14.y, l(0.986162), r13.y
  mad r13.y, r14.z, l(0.025569), r13.y
  mad r13.y, r15.z, l(0.024595), r13.y
  mad r13.y, r15.w, l(0.013606), r13.y
  mad r13.y, r3.y, l(0.974281), r13.y

#line 226
  mad r13.z, r14.w, l(0.980742), r3.x
  mad r13.z, r14.y, l(0.989553), r13.z
  mad r13.z, r14.z, l(0.033302), r13.z
  mad r13.z, r15.z, l(0.019295), r13.z
  mad r13.z, r15.w, l(0.010002), r13.z
  mad r13.z, r3.y, l(0.966632), r13.z

#line 228
  mad r16.xy, r14.wwww, l(0.985810, 0.989712, 0.000000, 0.000000), r3.xxxx

#line 227
  mad r13.w, r14.y, l(0.986762), r16.x
  mad r13.w, r14.z, l(0.051853), r13.w
  mad r13.w, r15.z, l(0.014231), r13.w
  mad r13.w, r15.w, l(0.012841), r13.w
  mad r13.w, r3.y, l(0.948229), r13.w

#line 225
  max r13.yzw, r13.yyzw, l(0.000000, 0.000100, 0.000100, 0.000100)

#line 228
  mad r16.x, r14.y, l(0.973126), r16.y
  mad r16.x, r14.z, l(0.100876), r16.x
  mad r16.x, r15.z, l(0.010331), r16.x
  mad r16.x, r15.w, l(0.026366), r16.x
  mad r16.x, r3.y, l(0.899377), r16.x

#line 229
  mad r16.y, r14.w, l(0.992380), r3.x
  mad r16.y, r14.y, l(0.919443), r16.y
  mad r16.y, r14.z, l(0.240004), r16.y
  mad r16.y, r15.z, l(0.007659), r16.y
  mad r16.y, r15.w, l(0.070587), r16.y
  mad r16.y, r3.y, l(0.760702), r16.y

#line 230
  mad r16.z, r14.w, l(0.994098), r3.x
  mad r16.z, r14.y, l(0.325649), r16.z
  mad r16.z, r14.z, l(0.535891), r16.z
  mad r16.z, r15.z, l(0.005937), r16.z
  mad r16.z, r15.w, l(0.704217), r16.z
  mad r16.z, r3.y, l(0.464204), r16.z

#line 232
  mad r17.xy, r14.wwww, l(0.995172, 0.995765, 0.000000, 0.000000), r3.xxxx

#line 231
  mad r16.w, r14.y, l(0.138206), r17.x
  mad r16.w, r14.z, l(0.798747), r16.w
  mad r16.w, r15.z, l(0.004856), r16.w
  mad r16.w, r15.w, l(0.854740), r16.w
  mad r16.w, r3.y, l(0.201230), r16.w

#line 228
  max r16.xyzw, r16.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 232
  mad r17.x, r14.y, l(0.050151), r17.y
  mad r17.x, r14.z, l(0.911865), r17.x
  mad r17.x, r15.z, l(0.004262), r17.x
  mad r17.x, r15.w, l(0.950816), r17.x
  mad r17.x, r3.y, l(0.088084), r17.x

#line 233
  mad r17.y, r14.w, l(0.995935), r3.x
  mad r17.y, r14.y, l(0.029123), r17.y
  mad r17.y, r14.z, l(0.953996), r17.y
  mad r17.y, r15.z, l(0.004090), r17.y
  mad r17.y, r15.w, l(0.971704), r17.y
  mad r17.y, r3.y, l(0.045929), r17.y

#line 234
  mad r17.z, r14.w, l(0.995640), r3.x
  mad r17.z, r14.y, l(0.024217), r17.z
  mad r17.z, r14.z, l(0.971371), r17.z
  mad r17.z, r15.z, l(0.004384), r17.z
  mad r17.z, r15.w, l(0.976519), r17.z
  mad r17.z, r3.y, l(0.028604), r17.z

#line 236
  mad r18.xy, r14.wwww, l(0.994648, 0.992296, 0.000000, 0.000000), r3.xxxx

#line 235
  mad r17.w, r14.y, l(0.026607), r18.x
  mad r17.w, r14.z, l(0.979395), r17.w
  mad r17.w, r15.z, l(0.005375), r17.w
  mad r17.w, r15.w, l(0.974292), r17.w
  mad r17.w, r3.y, l(0.020601), r17.w

#line 232
  max r17.xyzw, r17.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 236
  mad r18.x, r14.y, l(0.034076), r18.y
  mad r18.x, r14.z, l(0.983452), r18.x
  mad r18.x, r15.z, l(0.007730), r18.x
  mad r18.x, r15.w, l(0.970129), r18.x
  mad r18.x, r3.y, l(0.016567), r18.x

#line 237
  mad r18.y, r14.w, l(0.986388), r3.x
  mad r18.y, r14.y, l(0.048359), r18.y
  mad r18.y, r14.z, l(0.985537), r18.y
  mad r18.y, r15.z, l(0.013661), r18.y
  mad r18.y, r15.w, l(0.942586), r18.y
  mad r18.y, r3.y, l(0.014515), r18.y

#line 238
  mad r18.z, r14.w, l(0.968297), r3.x
  mad r18.z, r14.y, l(0.000117), r18.z
  mad r18.z, r14.z, l(0.986489), r18.z
  mad r18.z, r15.z, l(0.031814), r18.z
  mad r18.z, r15.w, l(0.999892), r18.z
  mad r18.z, r3.y, l(0.013580), r18.z

#line 240
  mad r19.xy, r14.wwww, l(0.892280, 0.537402, 0.000000, 0.000000), r3.xxxx

#line 239
  mad r18.w, r14.y, l(0.000086), r19.x
  mad r18.w, r14.z, l(0.986745), r18.w
  mad r18.w, r15.z, l(0.107915), r18.w
  mad r18.w, r15.w, l(0.999899), r18.w
  mad r18.w, r3.y, l(0.013312), r18.w

#line 236
  max r18.xyzw, r18.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 240
  mad r19.x, r14.y, l(0.852679), r19.y
  mad r19.x, r14.z, l(0.986576), r19.x
  mad r19.x, r15.z, l(0.462495), r19.x
  mad r19.x, r15.w, l(0.138231), r19.x
  mad r19.x, r3.y, l(0.013477), r19.x

#line 241
  mad r19.y, r14.w, l(0.153604), r3.x
  mad r19.y, r14.y, l(0.931888), r19.y
  mad r19.y, r14.z, l(0.986119), r19.y
  mad r19.y, r15.z, l(0.846043), r19.y
  mad r19.y, r15.w, l(0.069681), r19.y
  mad r19.y, r3.y, l(0.013872), r19.y

#line 242
  mad r19.z, r14.w, l(0.057057), r3.x
  mad r19.z, r14.y, l(0.948103), r19.z
  mad r19.z, r14.z, l(0.985599), r19.z
  mad r19.z, r15.z, l(0.942756), r19.z
  mad r19.z, r15.w, l(0.056288), r19.z
  mad r19.z, r3.y, l(0.014355), r19.z

#line 244
  mad r20.xy, r14.wwww, l(0.031265, 0.022054, 0.000000, 0.000000), r3.xxxx

#line 243
  mad r19.w, r14.y, l(0.942010), r20.x
  mad r19.w, r14.z, l(0.985071), r19.w
  mad r19.w, r15.z, l(0.968610), r19.w
  mad r19.w, r15.w, l(0.061116), r19.w
  mad r19.w, r3.y, l(0.014798), r19.w

#line 240
  max r19.xyzw, r19.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 244
  mad r20.x, r14.y, l(0.914780), r20.y
  mad r20.x, r14.z, l(0.984600), r20.x
  mad r20.x, r15.z, l(0.977840), r20.x
  mad r20.x, r15.w, l(0.089877), r20.x
  mad r20.x, r3.y, l(0.015153), r20.x

#line 245
  mad r20.y, r14.w, l(0.018023), r3.x
  mad r20.y, r14.y, l(0.870654), r20.y
  mad r20.y, r14.z, l(0.984253), r20.y
  mad r20.y, r15.z, l(0.981878), r20.y
  mad r20.y, r15.w, l(0.136560), r20.y
  mad r20.y, r3.y, l(0.015405), r20.y

#line 246
  mad r20.z, r14.w, l(0.016135), r3.x
  mad r20.z, r14.y, l(0.788275), r20.z
  mad r20.z, r14.z, l(0.984039), r20.z
  mad r20.z, r15.z, l(0.983773), r20.z
  mad r20.z, r15.w, l(0.221696), r20.z
  mad r20.z, r3.y, l(0.015572), r20.z

#line 248
  mad r21.xy, r14.wwww, l(0.015209, 0.014760, 0.000000, 0.000000), r3.xxxx

#line 247
  mad r20.w, r14.y, l(0.657384), r21.x
  mad r20.w, r14.z, l(0.983885), r20.w
  mad r20.w, r15.z, l(0.984702), r20.w
  mad r20.w, r15.w, l(0.321770), r20.w
  mad r20.w, r3.y, l(0.015657), r20.w

#line 244
  max r20.xyzw, r20.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 248
  mad r21.x, r14.y, l(0.599094), r21.y
  mad r21.x, r14.z, l(0.983761), r21.x
  mad r21.x, r15.z, l(0.985155), r21.x
  mad r21.x, r15.w, l(0.361573), r21.x
  mad r21.x, r3.y, l(0.015710), r21.x

#line 249
  mad r21.y, r14.w, l(0.014543), r3.x
  mad r21.y, r14.y, l(0.568173), r21.y
  mad r21.y, r14.z, l(0.983682), r21.y
  mad r21.y, r15.z, l(0.985371), r21.y
  mad r21.y, r15.w, l(0.483619), r21.y
  mad r21.y, r3.y, l(0.015719), r21.y

#line 250
  mad r21.z, r14.w, l(0.014445), r3.x
  mad r21.z, r14.y, l(0.540320), r21.z
  mad r21.z, r14.z, l(0.983650), r21.z
  mad r21.z, r15.z, l(0.985467), r21.z
  mad r21.z, r15.w, l(0.464886), r21.z
  mad r21.z, r3.y, l(0.015721), r21.z

#line 252
  mad r22.xy, r14.wwww, l(0.014399, 0.014376, 0.000000, 0.000000), r3.xxxx

#line 251
  mad r21.w, r14.y, l(0.521102), r22.x
  mad r21.w, r14.z, l(0.983613), r21.w
  mad r21.w, r15.z, l(0.985500), r21.w
  mad r21.w, r15.w, l(0.474403), r21.w
  mad r21.w, r3.y, l(0.015725), r21.w

#line 248
  max r21.xyzw, r21.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 252
  mad r22.x, r14.y, l(0.510411), r22.y
  mad r22.x, r14.z, l(0.983573), r22.x
  mad r22.x, r15.z, l(0.985510), r22.x
  mad r22.x, r15.w, l(0.485770), r22.x
  mad r22.x, r3.y, l(0.015717), r22.x

#line 253
  mad r22.y, r14.w, l(0.014363), r3.x
  mad r22.y, r14.y, l(0.505266), r22.y
  mad r22.y, r14.z, l(0.983539), r22.y
  mad r22.y, r15.z, l(0.985507), r22.y
  mad r22.y, r15.w, l(0.492680), r22.y
  mad r22.y, r3.y, l(0.015719), r22.y

#line 254
  mad r22.z, r14.w, l(0.014357), r3.x
  mad r22.z, r14.y, l(0.502551), r22.z
  mad r22.z, r14.z, l(0.983512), r22.z
  mad r22.z, r15.z, l(0.985513), r22.z
  mad r22.z, r15.w, l(0.496257), r22.z
  mad r22.z, r3.y, l(0.015711), r22.z

#line 252
  max r22.xyz, r22.xyzx, l(0.000100, 0.000100, 0.000100, 0.000000)

#line 256
  mad r14.xw, r14.xxxw, l(0.014354, 0.000000, 0.000000, 0.014354), r3.xxxx

#line 255
  mad r3.x, r14.y, l(0.501265), r14.x
  mad r3.x, r14.z, l(0.983501), r3.x
  mad r3.x, r15.x, l(0.985516), r3.x
  mad r3.x, r15.y, l(0.498078), r3.x
  mad r3.x, r3.y, l(0.015697), r3.x

#line 256
  mad r14.x, r14.y, l(0.500830), r14.w
  mad r14.x, r14.z, l(0.983509), r14.x
  mad r14.x, r15.z, l(0.985515), r14.x
  mad r14.x, r15.w, l(0.498899), r14.x
  mad r3.y, r3.y, l(0.015700), r14.x

#line 219
  max r3.xyzw, r3.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)

#line 263
  mov x1[0].x, r3.z
  mov x1[1].x, r3.w
  mov x1[2].x, r4.x
  mov x1[3].x, r4.y
  mov x1[4].x, r4.z
  mov x1[5].x, r4.w
  mov x1[6].x, r13.y
  mov x1[7].x, r13.z
  mov x1[8].x, r13.w
  mov x1[9].x, r16.x
  mov x1[10].x, r16.y
  mov x1[11].x, r16.z
  mov x1[12].x, r16.w
  mov x1[13].x, r17.x
  mov x1[14].x, r17.y
  mov x1[15].x, r17.z
  mov x1[16].x, r17.w
  mov x1[17].x, r18.x
  mov x1[18].x, r18.y
  mov x1[19].x, r18.z
  mov x1[20].x, r18.w
  mov x1[21].x, r19.x
  mov x1[22].x, r19.y
  mov x1[23].x, r19.z
  mov x1[24].x, r19.w
  mov x1[25].x, r20.x
  mov x1[26].x, r20.y
  mov x1[27].x, r20.z
  mov x1[28].x, r20.w
  mov x1[29].x, r21.x
  mov x1[30].x, r21.y
  mov x1[31].x, r21.z
  mov x1[32].x, r21.w
  mov x1[33].x, r22.x
  mov x1[34].x, r22.y
  mov x1[35].x, r22.z
  mov x1[36].x, r3.x
  mov x1[37].x, r3.y

#line 176
  mul r2.z, r2.z, l(0.000006)
  mad r2.y, r2.y, l(0.000002), r2.z  // r2.y <- xyz.y

#line 177
  mad r2.y, r2.w, l(0.000031), r2.y

#line 178
  mad r2.y, r5.x, l(0.000105), r2.y

#line 179
  mad r2.y, r5.y, l(0.000354), r2.y

#line 180
  mad r2.y, r5.z, l(0.000951), r2.y

#line 181
  mad r2.y, r5.w, l(0.002282), r2.y

#line 182
  mad r2.y, r6.x, l(0.004207), r2.y

#line 183
  mad r2.y, r6.y, l(0.006689), r2.y

#line 184
  mad r2.y, r6.z, l(0.009888), r2.y

#line 185
  mad r2.y, r6.w, l(0.015249), r2.y

#line 186
  mad r2.y, r7.x, l(0.021418), r2.y

#line 187
  mad r2.y, r7.y, l(0.033423), r2.y

#line 188
  mad r2.y, r7.z, l(0.051310), r2.y

#line 189
  mad r2.y, r7.w, l(0.070402), r2.y

#line 190
  mad r2.y, r8.x, l(0.087839), r2.y

#line 191
  mad r2.y, r8.y, l(0.094249), r2.y

#line 192
  mad r2.y, r8.z, l(0.097957), r2.y

#line 193
  mad r2.y, r8.w, l(0.094152), r2.y

#line 194
  mad r2.y, r9.x, l(0.086781), r2.y

#line 195
  mad r2.y, r9.y, l(0.078857), r2.y

#line 196
  mad r2.y, r9.z, l(0.063527), r2.y

#line 197
  mad r2.y, r9.w, l(0.053741), r2.y

#line 198
  mad r2.y, r10.x, l(0.042646), r2.y

#line 199
  mad r2.y, r10.y, l(0.031617), r2.y

#line 200
  mad r2.y, r10.z, l(0.020885), r2.y

#line 201
  mad r2.y, r10.w, l(0.013860), r2.y

#line 202
  mad r2.y, r11.x, l(0.008103), r2.y

#line 203
  mad r2.y, r11.y, l(0.004630), r2.y

#line 204
  mad r2.y, r11.z, l(0.002491), r2.y

#line 205
  mad r2.y, r11.w, l(0.001259), r2.y

#line 206
  mad r2.y, r12.x, l(0.000542), r2.y

#line 207
  mad r2.y, r12.y, l(0.000278), r2.y

#line 208
  mad r2.y, r12.z, l(0.000147), r2.y

#line 209
  mad r2.y, r12.w, l(0.000061), r2.y

#line 210
  mad r2.y, r13.x, l(0.000034), r2.y

#line 211
  mad r0.w, r0.w, l(0.000018), r2.y  // r0.w <- xyz.y

#line 212
  mad r0.w, r2.x, l(0.000007), r0.w

#line 176
  mul r2.x, r3.w, l(0.000006)
  mad r2.x, r3.z, l(0.000002), r2.x  // r2.x <- xyz.y

#line 177
  mad r2.x, r4.x, l(0.000031), r2.x

#line 178
  mad r2.x, r4.y, l(0.000105), r2.x

#line 179
  mad r2.x, r4.z, l(0.000354), r2.x

#line 180
  mad r2.x, r4.w, l(0.000951), r2.x

#line 181
  mad r2.x, r13.y, l(0.002282), r2.x

#line 182
  mad r2.x, r13.z, l(0.004207), r2.x

#line 183
  mad r2.x, r13.w, l(0.006689), r2.x

#line 184
  mad r2.x, r16.x, l(0.009888), r2.x

#line 185
  mad r2.x, r16.y, l(0.015249), r2.x

#line 186
  mad r2.x, r16.z, l(0.021418), r2.x

#line 187
  mad r2.x, r16.w, l(0.033423), r2.x

#line 188
  mad r2.x, r17.x, l(0.051310), r2.x

#line 189
  mad r2.x, r17.y, l(0.070402), r2.x

#line 190
  mad r2.x, r17.z, l(0.087839), r2.x

#line 191
  mad r2.x, r17.w, l(0.094249), r2.x

#line 192
  mad r2.x, r18.x, l(0.097957), r2.x

#line 193
  mad r2.x, r18.y, l(0.094152), r2.x

#line 194
  mad r2.x, r18.z, l(0.086781), r2.x

#line 195
  mad r2.x, r18.w, l(0.078857), r2.x

#line 196
  mad r2.x, r19.x, l(0.063527), r2.x

#line 197
  mad r2.x, r19.y, l(0.053741), r2.x

#line 198
  mad r2.x, r19.z, l(0.042646), r2.x

#line 199
  mad r2.x, r19.w, l(0.031617), r2.x

#line 200
  mad r2.x, r20.x, l(0.020885), r2.x

#line 201
  mad r2.x, r20.y, l(0.013860), r2.x

#line 202
  mad r2.x, r20.z, l(0.008103), r2.x

#line 203
  mad r2.x, r20.w, l(0.004630), r2.x

#line 204
  mad r2.x, r21.x, l(0.002491), r2.x

#line 205
  mad r2.x, r21.y, l(0.001259), r2.x

#line 206
  mad r2.x, r21.z, l(0.000542), r2.x

#line 207
  mad r2.x, r21.w, l(0.000278), r2.x

#line 208
  mad r2.x, r22.x, l(0.000147), r2.x

#line 209
  mad r2.x, r22.y, l(0.000061), r2.x

#line 210
  mad r2.x, r22.z, l(0.000034), r2.x

#line 211
  mad r2.x, r3.x, l(0.000018), r2.x

#line 212
  mad r2.x, r3.y, l(0.000007), r2.x

#line 168
  mad r0.x, -r0.y, r0.x, l(1.000000)
  mul r0.x, r0.x, r0.x

#line 169
  mul r0.y, r0.z, r0.z
  mul r0.y, r0.y, r2.x  // r0.y <- t2

#line 170
  mad r0.x, r0.w, r0.x, r0.y
  div r0.x, r0.y, r0.x  // r0.x <- <spectral_linear_to_concentration_id32 return value>

#line 271
  add r0.y, -r0.x, l(1.000000)

#line 269
  mov r0.w, l(0)  // r0.w <- i
  loop 
    ige r2.x, r0.w, l(38)
    breakc_nz r2.x

#line 271
    mov r2.x, x0[r0.w + 0].x
    add r2.y, -r2.x, l(1.000000)
    mul r2.y, r2.y, r2.y
    add r2.x, r2.x, r2.x
    div r2.x, r2.y, r2.x
    mov r2.y, x1[r0.w + 0].x
    add r2.z, -r2.y, l(1.000000)
    mul r2.z, r2.z, r2.z
    add r2.y, r2.y, r2.y
    div r2.y, r2.z, r2.y
    mul r2.y, r0.x, r2.y
    mad r2.x, r0.y, r2.x, r2.y  // r2.x <- KS

#line 272
    add r2.y, r2.x, l(1.000000)
    add r2.z, r2.x, r2.x
    mad r2.x, r2.x, r2.x, r2.z
    sqrt r2.x, r2.x
    add r2.x, -r2.x, r2.y  // r2.x <- KM

#line 273
    mov x2[r0.w + 0].x, r2.x

#line 274
    iadd r0.w, r0.w, l(1)
  endloop 

#line 275
  mov r0.x, x2[0].x
  mov r0.y, x2[1].x
  mov r0.w, x2[2].x
  mov r2.x, x2[3].x
  mov r2.y, x2[4].x
  mov r2.z, x2[5].x
  mov r2.w, x2[6].x
  mov r3.x, x2[7].x
  mov r3.y, x2[8].x
  mov r3.z, x2[9].x
  mov r3.w, x2[10].x
  mov r4.x, x2[11].x
  mov r4.y, x2[12].x
  mov r4.z, x2[13].x
  mov r4.w, x2[14].x
  mov r5.x, x2[15].x
  mov r5.y, x2[16].x
  mov r5.z, x2[17].x
  mov r5.w, x2[18].x
  mov r6.x, x2[19].x
  mov r6.y, x2[20].x
  mov r6.z, x2[21].x
  mov r6.w, x2[22].x
  mov r7.x, x2[23].x
  mov r7.y, x2[24].x
  mov r7.z, x2[25].x
  mov r7.w, x2[26].x
  mov r8.x, x2[27].x
  mov r8.y, x2[28].x
  mov r8.z, x2[29].x
  mov r8.w, x2[30].x
  mov r9.x, x2[31].x
  mov r9.y, x2[32].x
  mov r9.z, x2[33].x
  mov r9.w, x2[34].x
  mov r10.x, x2[35].x
  mov r10.y, x2[36].x
  mov r10.z, x2[37].x

#line 176
  mul r11.xyz, r0.yyyy, l(0.000219, 0.000006, 0.001037, 0.000000)
  mad r11.xyz, r0.xxxx, l(0.000065, 0.000002, 0.000305, 0.000000), r11.xyzx  // r11.x <- xyz.x; r11.y <- xyz.y; r11.z <- xyz.z

#line 177
  mad r0.xyw, r0.wwww, l(0.001121, 0.000031, 0.000000, 0.005313), r11.xyxz  // r0.x <- xyz.x; r0.y <- xyz.y; r0.w <- xyz.z

#line 178
  mad r0.xyw, r2.xxxx, l(0.003767, 0.000105, 0.000000, 0.017954), r0.xyxw

#line 179
  mad r0.xyw, r2.yyyy, l(0.011881, 0.000354, 0.000000, 0.057078), r0.xyxw

#line 180
  mad r0.xyw, r2.zzzz, l(0.023286, 0.000951, 0.000000, 0.113652), r0.xyxw

#line 181
  mad r0.xyw, r2.wwww, l(0.034559, 0.002282, 0.000000, 0.173359), r0.xyxw

#line 182
  mad r0.xyw, r3.xxxx, l(0.037224, 0.004207, 0.000000, 0.196207), r0.xyxw

#line 183
  mad r0.xyw, r3.yyyy, l(0.032418, 0.006689, 0.000000, 0.186082), r0.xyxw

#line 184
  mad r0.xyw, r3.zzzz, l(0.021233, 0.009888, 0.000000, 0.139950), r0.xyxw

#line 185
  mad r0.xyw, r3.wwww, l(0.010491, 0.015249, 0.000000, 0.089175), r0.xyxw

#line 186
  mad r0.xyw, r4.xxxx, l(0.003296, 0.021418, 0.000000, 0.047896), r0.xyxw

#line 187
  mad r0.xyw, r4.yyyy, l(0.000507, 0.033423, 0.000000, 0.028146), r0.xyxw

#line 188
  mad r0.xyw, r4.zzzz, l(0.000949, 0.051310, 0.000000, 0.016138), r0.xyxw

#line 189
  mad r0.xyw, r4.wwww, l(0.006274, 0.070402, 0.000000, 0.007759), r0.xyxw

#line 190
  mad r0.xyw, r5.xxxx, l(0.016865, 0.087839, 0.000000, 0.004296), r0.xyxw

#line 191
  mad r0.xyw, r5.yyyy, l(0.028690, 0.094249, 0.000000, 0.002006), r0.xyxw

#line 192
  mad r0.xyw, r5.zzzz, l(0.042675, 0.097957, 0.000000, 0.000861), r0.xyxw

#line 193
  mad r0.xyw, r5.wwww, l(0.056255, 0.094152, 0.000000, 0.000369), r0.xyxw

#line 194
  mad r0.xyw, r6.xxxx, l(0.069470, 0.086781, 0.000000, 0.000191), r0.xyxw

#line 195
  mad r0.xyw, r6.yyyy, l(0.083053, 0.078857, 0.000000, 0.000150), r0.xyxw

#line 196
  mad r0.xyw, r6.zzzz, l(0.086126, 0.063527, 0.000000, 0.000092), r0.xyxw

#line 197
  mad r0.xyw, r6.wwww, l(0.090466, 0.053741, 0.000000, 0.000068), r0.xyxw

#line 198
  mad r0.xyw, r7.xxxx, l(0.085004, 0.042646, 0.000000, 0.000029), r0.xyxw

#line 199
  mad r0.xyw, r7.yyyy, l(0.070907, 0.031617, 0.000000, 0.000016), r0.xyxw

#line 200
  mad r0.xyw, r7.zzzz, l(0.050629, 0.020885, 0.000000, 0.000004), r0.xyxw

#line 201
  mad r0.xyw, r7.wwww, l(0.035474, 0.013860, 0.000000, 0.000002), r0.xyxw

#line 202
  mad r0.xyw, r8.xxxx, l(0.021468, 0.008103, 0.000000, 0.000000), r0.xyxw

#line 203
  mad r0.xyw, r8.yyyy, l(0.012516, 0.004630, 0.000000, 0.000000), r0.xyxw

#line 204
  mad r0.xyw, r8.zzzz, l(0.006805, 0.002491, 0.000000, 0.000000), r0.xyxw

#line 205
  mad r0.xyw, r8.wwww, l(0.003465, 0.001259, 0.000000, 0.000000), r0.xyxw

#line 206
  mad r0.xyw, r9.xxxx, l(0.001498, 0.000542, 0.000000, 0.000000), r0.xyxw

#line 207
  mad r0.xyw, r9.yyyy, l(0.000770, 0.000278, 0.000000, 0.000000), r0.xyxw

#line 208
  mad r0.xyw, r9.zzzz, l(0.000407, 0.000147, 0.000000, 0.000000), r0.xyxw

#line 209
  mad r0.xyw, r9.wwww, l(0.000169, 0.000061, 0.000000, 0.000000), r0.xyxw

#line 210
  mad r0.xyw, r10.xxxx, l(0.000095, 0.000034, 0.000000, 0.000000), r0.xyxw

#line 211
  mad r0.xyw, r10.yyyy, l(0.000049, 0.000018, 0.000000, 0.000000), r0.xyxw

#line 212
  mad r0.xyw, r10.zzzz, l(0.000020, 0.000007, 0.000000, 0.000000), r0.xyxw

#line 163
  dp3 r1.x, l(3.243063, -1.538376, -0.498933, 0.000000), r0.xywx  // r1.x <- RGB.x
  dp3 r1.y, l(-0.968963, 1.875425, 0.041543, 0.000000), r0.xywx  // r1.y <- RGB.y
  dp3 r1.z, l(0.055684, -0.204174, 1.057994, 0.000000), r0.xywx  // r1.z <- RGB.z

#line 279
  add r0.x, cb0[0].w, -cb0[2].w
  mad r1.w, r0.z, r0.x, cb0[2].w  // r1.w <- <spectral_lerp_id34 return value>.w

#line 306
  break 

#line 307
  default 
  break 
endswitch 
mov o0.xyzw, r1.xyzw

#line 345
ret 
// Approximately 776 instruction slots used
***************************
*************************/
static const int SPECTRAL_SIZE_id87 = 38;
static const float SPECTRAL_EPSILON_id88 = 0.0001;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id97;
    float InputValue_id98;
    float InputValue_id99;
    float4 InputValue_id100;
    float InputValue_id101;
    float InputValue_id102;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int GradientType_id95;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
Texture2D GradientTexture_id96;
void spectral_upsampling_id28(float3 lrgb, out float w, out float c, out float m, out float y, out float r, out float g, out float b)
{
    w = min(lrgb.r, min(lrgb.g, lrgb.b));
    lrgb -= w;
    c = min(lrgb.g, lrgb.b);
    m = min(lrgb.r, lrgb.b);
    y = min(lrgb.r, lrgb.g);
    r = min(max(0., lrgb.r - lrgb.b), max(0., lrgb.r - lrgb.g));
    g = min(max(0., lrgb.g - lrgb.b), max(0., lrgb.g - lrgb.r));
    b = min(max(0., lrgb.b - lrgb.g), max(0., lrgb.b - lrgb.r));
}
float3 spectral_xyz_to_rgb_id30(float3 xyz)
{
    float3 X = float3(3.24306333, -1.53837619, -0.49893282);
    float3 Y = float3(-0.96896309, 1.87542451, 0.04154303);
    float3 Z = float3(0.05568392, -0.20417438, 1.05799454);
    float3 RGB = float3(dot(X, xyz), dot(Y, xyz), dot(Z, xyz));
    return RGB;
}
float spectral_linear_to_concentration_id32(float l1, float l2, float t)
{
    float t1 = l1 * pow(1.0 - t, 2.0);
    float t2 = l2 * pow(t, 2.0);
    return t2 / (t1 + t2);
}
float3 spectral_reflectance_to_xyz_id31(float R[SPECTRAL_SIZE_id87])
{
    float3 xyz = float3(0.0, 0.0, 0.0);
    xyz += R[0] * float3(0.00006469, 0.00000184, 0.00030502);
    xyz += R[1] * float3(0.00021941, 0.00000621, 0.00103681);
    xyz += R[2] * float3(0.00112057, 0.00003101, 0.00531314);
    xyz += R[3] * float3(0.00376661, 0.00010475, 0.01795439);
    xyz += R[4] * float3(0.01188055, 0.00035364, 0.05707758);
    xyz += R[5] * float3(0.02328644, 0.00095147, 0.11365162);
    xyz += R[6] * float3(0.03455942, 0.00228226, 0.17335873);
    xyz += R[7] * float3(0.03722379, 0.00420733, 0.19620658);
    xyz += R[8] * float3(0.03241838, 0.00668880, 0.18608237);
    xyz += R[9] * float3(0.02123321, 0.00988840, 0.13995048);
    xyz += R[10] * float3(0.01049099, 0.01524945, 0.08917453);
    xyz += R[11] * float3(0.00329584, 0.02141831, 0.04789621);
    xyz += R[12] * float3(0.00050704, 0.03342293, 0.02814563);
    xyz += R[13] * float3(0.00094867, 0.05131001, 0.01613766);
    xyz += R[14] * float3(0.00627372, 0.07040208, 0.00775910);
    xyz += R[15] * float3(0.01686462, 0.08783871, 0.00429615);
    xyz += R[16] * float3(0.02868965, 0.09424905, 0.00200551);
    xyz += R[17] * float3(0.04267481, 0.09795667, 0.00086147);
    xyz += R[18] * float3(0.05625475, 0.09415219, 0.00036904);
    xyz += R[19] * float3(0.06947040, 0.08678102, 0.00019143);
    xyz += R[20] * float3(0.08305315, 0.07885653, 0.00014956);
    xyz += R[21] * float3(0.08612610, 0.06352670, 0.00009231);
    xyz += R[22] * float3(0.09046614, 0.05374142, 0.00006813);
    xyz += R[23] * float3(0.08500387, 0.04264606, 0.00002883);
    xyz += R[24] * float3(0.07090667, 0.03161735, 0.00001577);
    xyz += R[25] * float3(0.05062889, 0.02088521, 0.00000394);
    xyz += R[26] * float3(0.03547396, 0.01386011, 0.00000158);
    xyz += R[27] * float3(0.02146821, 0.00810264, 0.00000000);
    xyz += R[28] * float3(0.01251646, 0.00463010, 0.00000000);
    xyz += R[29] * float3(0.00680458, 0.00249138, 0.00000000);
    xyz += R[30] * float3(0.00346457, 0.00125930, 0.00000000);
    xyz += R[31] * float3(0.00149761, 0.00054165, 0.00000000);
    xyz += R[32] * float3(0.00076970, 0.00027795, 0.00000000);
    xyz += R[33] * float3(0.00040737, 0.00014711, 0.00000000);
    xyz += R[34] * float3(0.00016901, 0.00006103, 0.00000000);
    xyz += R[35] * float3(0.00009522, 0.00003439, 0.00000000);
    xyz += R[36] * float3(0.00004903, 0.00001771, 0.00000000);
    xyz += R[37] * float3(0.00002000, 0.00000722, 0.00000000);
    return xyz;
}
void spectral_linear_to_reflectance_id29(float3 lrgb, inout float R[SPECTRAL_SIZE_id87])
{
    float w, c, m, y, r, g, b;
    spectral_upsampling_id28(lrgb, w, c, m, y, r, g, b);
    R[0] = max(SPECTRAL_EPSILON_id88, w + c * 0.96853629 + m * 0.51567122 + y * 0.02055257 + r * 0.03147571 + g * 0.49108579 + b * 0.97901834);
    R[1] = max(SPECTRAL_EPSILON_id88, w + c * 0.96855103 + m * 0.54015520 + y * 0.02059936 + r * 0.03146636 + g * 0.46944057 + b * 0.97901649);
    R[2] = max(SPECTRAL_EPSILON_id88, w + c * 0.96859338 + m * 0.62645502 + y * 0.02062723 + r * 0.03140624 + g * 0.40165780 + b * 0.97901118);
    R[3] = max(SPECTRAL_EPSILON_id88, w + c * 0.96877345 + m * 0.75595012 + y * 0.02073387 + r * 0.03119611 + g * 0.24490420 + b * 0.97892146);
    R[4] = max(SPECTRAL_EPSILON_id88, w + c * 0.96942204 + m * 0.92826996 + y * 0.02114202 + r * 0.03053888 + g * 0.06826880 + b * 0.97858555);
    R[5] = max(SPECTRAL_EPSILON_id88, w + c * 0.97143709 + m * 0.97223624 + y * 0.02233154 + r * 0.02856855 + g * 0.02732883 + b * 0.97743705);
    R[6] = max(SPECTRAL_EPSILON_id88, w + c * 0.97541862 + m * 0.98616174 + y * 0.02556857 + r * 0.02459485 + g * 0.01360600 + b * 0.97428075);
    R[7] = max(SPECTRAL_EPSILON_id88, w + c * 0.98074186 + m * 0.98955255 + y * 0.03330189 + r * 0.01929520 + g * 0.01000187 + b * 0.96663223);
    R[8] = max(SPECTRAL_EPSILON_id88, w + c * 0.98580992 + m * 0.98676237 + y * 0.05185294 + r * 0.01423112 + g * 0.01284127 + b * 0.94822893);
    R[9] = max(SPECTRAL_EPSILON_id88, w + c * 0.98971194 + m * 0.97312575 + y * 0.10087639 + r * 0.01033111 + g * 0.02636635 + b * 0.89937713);
    R[10] = max(SPECTRAL_EPSILON_id88, w + c * 0.99238027 + m * 0.91944277 + y * 0.24000413 + r * 0.00765876 + g * 0.07058713 + b * 0.76070164);
    R[11] = max(SPECTRAL_EPSILON_id88, w + c * 0.99409844 + m * 0.32564851 + y * 0.53589066 + r * 0.00593693 + g * 0.70421692 + b * 0.46420440);
    R[12] = max(SPECTRAL_EPSILON_id88, w + c * 0.99517200 + m * 0.13820628 + y * 0.79874659 + r * 0.00485616 + g * 0.85473994 + b * 0.20123039);
    R[13] = max(SPECTRAL_EPSILON_id88, w + c * 0.99576545 + m * 0.05015143 + y * 0.91186529 + r * 0.00426186 + g * 0.95081565 + b * 0.08808402);
    R[14] = max(SPECTRAL_EPSILON_id88, w + c * 0.99593552 + m * 0.02912336 + y * 0.95399623 + r * 0.00409039 + g * 0.97170370 + b * 0.04592894);
    R[15] = max(SPECTRAL_EPSILON_id88, w + c * 0.99564041 + m * 0.02421691 + y * 0.97137099 + r * 0.00438375 + g * 0.97651888 + b * 0.02860373);
    R[16] = max(SPECTRAL_EPSILON_id88, w + c * 0.99464769 + m * 0.02660696 + y * 0.97939505 + r * 0.00537525 + g * 0.97429245 + b * 0.02060067);
    R[17] = max(SPECTRAL_EPSILON_id88, w + c * 0.99229579 + m * 0.03407586 + y * 0.98345207 + r * 0.00772962 + g * 0.97012917 + b * 0.01656701);
    R[18] = max(SPECTRAL_EPSILON_id88, w + c * 0.98638762 + m * 0.04835936 + y * 0.98553736 + r * 0.01366120 + g * 0.94258630 + b * 0.01451549);
    R[19] = max(SPECTRAL_EPSILON_id88, w + c * 0.96829712 + m * 0.00011720 + y * 0.98648905 + r * 0.03181352 + g * 0.99989207 + b * 0.01357964);
    R[20] = max(SPECTRAL_EPSILON_id88, w + c * 0.89228016 + m * 0.00008554 + y * 0.98674535 + r * 0.10791525 + g * 0.99989891 + b * 0.01331243);
    R[21] = max(SPECTRAL_EPSILON_id88, w + c * 0.53740239 + m * 0.85267882 + y * 0.98657555 + r * 0.46249516 + g * 0.13823139 + b * 0.01347661);
    R[22] = max(SPECTRAL_EPSILON_id88, w + c * 0.15360445 + m * 0.93188793 + y * 0.98611877 + r * 0.84604333 + g * 0.06968113 + b * 0.01387181);
    R[23] = max(SPECTRAL_EPSILON_id88, w + c * 0.05705719 + m * 0.94810268 + y * 0.98559942 + r * 0.94275572 + g * 0.05628787 + b * 0.01435472);
    R[24] = max(SPECTRAL_EPSILON_id88, w + c * 0.03126539 + m * 0.94200977 + y * 0.98507063 + r * 0.96860996 + g * 0.06111561 + b * 0.01479836);
    R[25] = max(SPECTRAL_EPSILON_id88, w + c * 0.02205445 + m * 0.91478045 + y * 0.98460039 + r * 0.97783966 + g * 0.08987709 + b * 0.01515250);
    R[26] = max(SPECTRAL_EPSILON_id88, w + c * 0.01802271 + m * 0.87065445 + y * 0.98425301 + r * 0.98187757 + g * 0.13656016 + b * 0.01540513);
    R[27] = max(SPECTRAL_EPSILON_id88, w + c * 0.01613460 + m * 0.78827548 + y * 0.98403909 + r * 0.98377315 + g * 0.22169624 + b * 0.01557233);
    R[28] = max(SPECTRAL_EPSILON_id88, w + c * 0.01520947 + m * 0.65738359 + y * 0.98388535 + r * 0.98470202 + g * 0.32176956 + b * 0.01565710);
    R[29] = max(SPECTRAL_EPSILON_id88, w + c * 0.01475977 + m * 0.59909403 + y * 0.98376116 + r * 0.98515481 + g * 0.36157329 + b * 0.01571025);
    R[30] = max(SPECTRAL_EPSILON_id88, w + c * 0.01454263 + m * 0.56817268 + y * 0.98368246 + r * 0.98537114 + g * 0.48361920 + b * 0.01571916);
    R[31] = max(SPECTRAL_EPSILON_id88, w + c * 0.01444459 + m * 0.54031997 + y * 0.98365023 + r * 0.98546685 + g * 0.46488579 + b * 0.01572133);
    R[32] = max(SPECTRAL_EPSILON_id88, w + c * 0.01439897 + m * 0.52110241 + y * 0.98361309 + r * 0.98550011 + g * 0.47440306 + b * 0.01572502);
    R[33] = max(SPECTRAL_EPSILON_id88, w + c * 0.01437620 + m * 0.51041094 + y * 0.98357259 + r * 0.98551031 + g * 0.48576990 + b * 0.01571717);
    R[34] = max(SPECTRAL_EPSILON_id88, w + c * 0.01436343 + m * 0.50526577 + y * 0.98353856 + r * 0.98550741 + g * 0.49267971 + b * 0.01571905);
    R[35] = max(SPECTRAL_EPSILON_id88, w + c * 0.01435687 + m * 0.50255080 + y * 0.98351247 + r * 0.98551323 + g * 0.49625685 + b * 0.01571059);
    R[36] = max(SPECTRAL_EPSILON_id88, w + c * 0.01435370 + m * 0.50126452 + y * 0.98350101 + r * 0.98551563 + g * 0.49807754 + b * 0.01569728);
    R[37] = max(SPECTRAL_EPSILON_id88, w + c * 0.01435408 + m * 0.50083021 + y * 0.98350852 + r * 0.98551547 + g * 0.49889859 + b * 0.01570020);
}
float3 spectral_lerp_id33(float3 color1, float3 color2, float t)
{
    float R1[SPECTRAL_SIZE_id87];
    float R2[SPECTRAL_SIZE_id87];
    spectral_linear_to_reflectance_id29(color1, R1);
    spectral_linear_to_reflectance_id29(color2, R2);
    float l1 = spectral_reflectance_to_xyz_id31(R1)[1];
    float l2 = spectral_reflectance_to_xyz_id31(R2)[1];
    t = spectral_linear_to_concentration_id32(l1, l2, t);
    float R[SPECTRAL_SIZE_id87];

    for (int i = 0; i < SPECTRAL_SIZE_id87; i++)
    {
        float KS = (1.0 - t) * (pow(1.0 - R1[i], 2.0) / (2.0 * R1[i])) + t * (pow(1.0 - R2[i], 2.0) / (2.0 * R2[i]));
        float KM = 1.0 + KS - sqrt(pow(KS, 2.0) + 2.0 * KS);
        R[i] = KM;
    }
    return spectral_xyz_to_rgb_id30(spectral_reflectance_to_xyz_id31(R));
}
float4 spectral_lerp_id34(float4 color1, float4 color2, float t)
{
    return float4(spectral_lerp_id33(color1.rgb, color2.rgb, t), lerp(color1.a, color2.a, t));
}
float4 Compute_id42()
{
    return InputValue_id97;
}
float4 Compute_id41()
{
    return InputValue_id100;
}
float Compute_id37()
{
    return InputValue_id99;
}
float4 Textured_id35(float f, float g)
{
    f = GradientTexture_id96.SampleLevel(LinearSampler_id44, float2(f.x, Compute_id37()), 0).x;
    f = sign(f) * pow(abs(f), g);
    float4 c;
    switch (GradientType_id95)

    {
        case 0:
            c = lerp(Compute_id41(), Compute_id42(), f);
            break;
        case 1:
            c = spectral_lerp_id34(Compute_id41(), Compute_id42(), f);
            break;
    }
    return c;
}
float Compute_id40()
{
    return InputValue_id98;
}
float Compute_id39()
{
    return InputValue_id102;
}
float Compute_id38()
{
    return InputValue_id101;
}
float4 Shading_id36(inout PS_STREAMS streams)
{
    float2 uv = streams.TexCoord_id62;
    float4 col = 0;
    float2 targetSize = ViewSize_id77;
    float aspect = targetSize.x / targetSize.y;
    uv = (uv - 0.5) * float2(aspect, 1) + 0.5;
    float innerRadius = Compute_id38();
    float outerRadius = Compute_id39();
    float gamma = Compute_id40();
    float thickness = outerRadius - innerRadius;
    float halo = clamp(distance(float2(0, 0), uv - 0.5) - innerRadius, 0, thickness);
    float f = halo / thickness;
    float g = gamma / (1.00001 - gamma);
    return Textured_id35(f, g);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id36(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
