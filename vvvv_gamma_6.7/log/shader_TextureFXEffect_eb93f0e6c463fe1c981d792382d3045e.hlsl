/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin LightMap_Internal_TextureFX [{Color = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {lightPos = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {lightSize = InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>}, {shadowSoftness = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P lightPos: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P lightSize: InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>
@P shadowSoftness: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Color: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 48]
@C    InputValue_id93 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id94 => ShaderFX.InputValueFloat2
@C    InputValue_id95 => ShaderFX.InputValueFloat2.i1
@C    InputValue_id96 => ShaderFX.InputValueFloat
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Gamma_id91 => LightMap_Internal_TextureFX.Gamma
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    LightMap_Internal_TextureFX => f266abb7132d876b5d8c927c13c7ab1f
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 205 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_eb93f0e6c463fe1c981d792382d3045e.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 209
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 760baac4c065f71b7879d51fef119bdb
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id93;            // Offset:    0 Size:    16
//   float2 InputValue_id94;            // Offset:   16 Size:     8
//   float2 InputValue_id95;            // Offset:   24 Size:     8
//   float InputValue_id96;             // Offset:   32 Size:     4
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float Gamma_id91;                  // Offset:   80 Size:     4
//      = 0x3f000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 168 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_eb93f0e6c463fe1c981d792382d3045e.hlsl"
mad r0.xy, cb0[1].xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), v1.xyxx  // r0.x <- tUV.x; r0.y <- tUV.y

#line 169
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
div r0.zw, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[1].zzzw
mul r0.xy, r0.zwzz, r0.xyxx
mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- tUV.x; r0.y <- tUV.y

#line 170
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- norm.x; r0.y <- norm.y

#line 171
max r0.z, |r0.x|, |r0.y|
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
min r0.w, |r0.x|, |r0.y|
mul r0.z, r0.z, r0.w
mul r0.w, r0.z, r0.z
mad r1.x, r0.w, l(0.020835), l(-0.085133)
mad r1.x, r0.w, r1.x, l(0.180141)
mad r1.x, r0.w, r1.x, l(-0.330299)
mad r0.w, r0.w, r1.x, l(0.999866)
mul r1.x, r0.w, r0.z
mad r1.x, r1.x, l(-2.000000), l(1.570796)
lt r1.y, |r0.x|, |r0.y|
and r1.x, r1.y, r1.x
mad r0.z, r0.z, r0.w, r1.x
lt r0.w, r0.x, -r0.x
and r0.w, r0.w, l(0xc0490fdb)
add r0.z, r0.w, r0.z
min r0.w, r0.x, r0.y
lt r0.w, r0.w, -r0.w
max r1.x, r0.x, r0.y

#line 172
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x  // r0.x <- r

#line 171
ge r0.y, r1.x, -r1.x
and r0.y, r0.y, r0.w
movc r0.y, r0.y, -r0.z, r0.z

#line 173
add r0.y, -r0.y, l(3.141593)

#line 176
min r0.z, r0.x, l(1.000000)
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, cb1[0].x
mul r0.z, r0.z, cb0[2].x  // r0.z <- blur

#line 179
mul r1.xy, r0.zzzz, l(3.000000, 4.000000, 0.000000, 0.000000)
mad r2.xy, r0.yyyy, l(0.159155, 0.159155, 0.000000, 0.000000), -r1.yxyy

#line 186
mad r1.xy, r0.yyyy, l(0.159155, 0.159155, 0.000000, 0.000000), r1.xyxx

#line 154
mov r2.z, l(0)
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xzxx, t0.yzwx, s0
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.yzwx, s0
ge r1.w, r1.w, r0.x

#line 179
and r1.w, r1.w, l(0x3db851ec)

#line 154
ge r0.w, r0.w, r0.x

#line 178
and r0.w, r0.w, l(0x3d4ccccd)  // r0.w <- sum

#line 179
add r0.w, r1.w, r0.w

#line 180
add r1.w, r0.z, r0.z
mad r2.z, r0.y, l(0.159155), -r1.w

#line 184
mad r3.x, r0.y, l(0.159155), r1.w

#line 154
mov r2.yw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t0.yzwx, s0
ge r1.w, r1.w, r0.x

#line 180
and r1.w, r1.w, l(0x3df5c28f)
add r0.w, r0.w, r1.w

#line 181
mad r4.x, r0.y, l(0.159155), -r0.z

#line 183
mad r4.z, r0.y, l(0.159155), r0.z

#line 173
mul r2.x, r0.y, l(0.159155)  // r2.x <- coord

#line 154
sample_indexable(texture2d)(float,float,float,float) r0.y, r2.xyxx, t0.yxzw, s0
ge r0.y, r0.y, r0.x

#line 182
and r0.y, r0.y, l(0x3e23d70a)

#line 154
mov r4.yw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r0.z, r4.xyxx, t0.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r1.w, r4.zwzz, t0.yzwx, s0
ge r1.w, r1.w, r0.x

#line 183
and r1.w, r1.w, l(0x3e19999a)

#line 154
ge r0.z, r0.z, r0.x

#line 181
and r0.z, r0.z, l(0x3e19999a)
add r0.z, r0.z, r0.w  // r0.z <- sum

#line 182
add r0.y, r0.y, r0.z  // r0.y <- sum

#line 183
add r0.y, r1.w, r0.y

#line 154
mov r3.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r0.z, r3.xyxx, t0.yzxw, s0
ge r0.z, r0.z, r0.x

#line 184
and r0.z, r0.z, l(0x3df5c28f)
add r0.y, r0.z, r0.y

#line 154
mov r1.z, l(0)
sample_indexable(texture2d)(float,float,float,float) r0.z, r1.xzxx, t0.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.yzyy, t0.yzwx, s0
ge r0.zw, r0.zzzw, r0.xxxx

#line 188
add r0.x, r0.x, l(-1.000000)
max r0.x, -r0.x, l(0.000000)

#line 186
and r0.zw, r0.zzzw, l(0, 0, 0x3db851ec, 0x3d4ccccd)

#line 185
add r0.y, r0.z, r0.y

#line 186
add r0.y, r0.w, r0.y

#line 188
mad r0.z, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.z
log r0.x, r0.x

#line 187
add r0.z, -cb1[5].x, l(1.000010)
div r0.z, cb1[5].x, r0.z  // r0.z <- g

#line 188
mul r0.x, r0.x, r0.z
exp r0.x, r0.x
mul o0.w, r0.x, r0.y

#line 198
mov o0.xyz, cb0[0].xyzx
ret 
// Approximately 99 instruction slots used
***************************
*************************/
static const float Pi_id79 = 3.1415926535897932384626433832795;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id93;
    float2 InputValue_id94;
    float2 InputValue_id95;
    float InputValue_id96;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float Gamma_id91 = 0.5f;
    static float THRESHOLD_id92 = 0.75f;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 Compute_id33()
{
    return InputValue_id93;
}
float Compute_id32()
{
    return InputValue_id96;
}
float dosample_id28(float2 coord, float r)
{
    return step(r, Texture0_id14.Sample(LinearSampler_id44, coord.xy).r).r;
}
float2 Compute_id31()
{
    return InputValue_id95;
}
float2 Compute_id30()
{
    return InputValue_id94;
}
float4 Shading_id29(inout PS_STREAMS streams)
{
    float2 tUV = streams.TexCoord_id62;
    float2 resolution = 1 / Texture0TexelSize_id15;
    tUV += Compute_id30() * float2(-1, 1);
    tUV = ((float2((tUV * 2 - 1) * float2(1, -1) * .5) * (1 / Compute_id31())).xy * float2(1, -1) + 0.5);
    float2 norm = tUV * 2.0 - 1.0;
    float theta = -atan2(norm.y, norm.x);
    float r = length(norm);
    float coord = (theta + Pi_id79) / (2.0 * Pi_id79);
    float2 tc = float2(coord, 0.0);
    float center = dosample_id28(tc, r);
    float blur = (1. / resolution.x) * smoothstep(0., 1, r) * Compute_id32();
    float sum = 0.0;
    sum += dosample_id28(float2(tc.x - 4.0 * blur, tc.y), r) * 0.05;
    sum += dosample_id28(float2(tc.x - 3.0 * blur, tc.y), r) * 0.09;
    sum += dosample_id28(float2(tc.x - 2.0 * blur, tc.y), r) * 0.12;
    sum += dosample_id28(float2(tc.x - 1.0 * blur, tc.y), r) * 0.15;
    sum += center * 0.16;
    sum += dosample_id28(float2(tc.x + 1.0 * blur, tc.y), r) * 0.15;
    sum += dosample_id28(float2(tc.x + 2.0 * blur, tc.y), r) * 0.12;
    sum += dosample_id28(float2(tc.x + 3.0 * blur, tc.y), r) * 0.09;
    sum += dosample_id28(float2(tc.x + 4.0 * blur, tc.y), r) * 0.05;
    float g = Gamma_id91 / (1.00001 - Gamma_id91);
    float4 c = float4(Compute_id33().xyz, sum * pow(smoothstep(1.0, 0.0, r), g));
    return c;
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id29(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
