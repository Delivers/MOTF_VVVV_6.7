/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin DeBayer_Internal_TextureFX [{Blue = InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>}, {Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {Green = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {Red = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}, {Size = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}]
@P Size: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P Red: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Green: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P Blue: InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 48]
@C    InputValue_id100 => ShaderFX.InputValueFloat4
@C    InputValue_id101 => ShaderFX.InputValueFloat.i2
@C    InputValue_id102 => ShaderFX.InputValueFloat.i1
@C    InputValue_id103 => ShaderFX.InputValueFloat
@C    InputValue_id104 => ShaderFX.InputValueFloat2
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    DeBayer_Internal_TextureFX => 045805b5d573efeb38f4bc025552211a
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 231 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_ea0d4d2b81dcec4572e31c872daf9b0a.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 235
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => bcc754590662243db032f2c42be51337
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id100;           // Offset:    0 Size:    16
//   float InputValue_id101;            // Offset:   16 Size:     4
//   float InputValue_id102;            // Offset:   20 Size:     4
//   float InputValue_id103;            // Offset:   24 Size:     4
//   float2 InputValue_id104;           // Offset:   32 Size:     8
//
// }
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8 [unused]
//   float2 ViewSize_id77;              // Offset:   16 Size:     8
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 210 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_ea0d4d2b81dcec4572e31c872daf9b0a.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 166
div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb1[1].xyxx
add r1.xy, r1.xyxx, cb0[2].xyxx  // r1.x <- PixelSize.x; r1.y <- PixelSize.y

#line 169
add r2.xy, -r1.xyxx, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r2.x <- left.x; r2.y <- left.y; r2.z <- left.z

#line 170
add r3.xy, r1.xyxx, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t0.xyzw, s0, l(0.000000)  // r3.x <- right.x; r3.y <- right.y; r3.z <- right.z

#line 172
mov r1.z, l(0)
add r4.xy, -r1.zyzz, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0, l(0.000000)  // r4.x <- upper.x; r4.y <- upper.y; r4.z <- upper.z

#line 173
add r5.xy, r1.zyzz, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t0.xyzw, s0, l(0.000000)  // r5.x <- lower.x; r5.y <- lower.y; r5.z <- lower.z

#line 178
mov r1.w, -r1.y
add r6.xy, r1.xwxx, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t0.xzyw, s0, l(0.000000)  // r6.x <- upperright.x; r6.y <- upperright.z

#line 179
add r1.zw, -r1.xxxw, v1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t0.ywxz, s0, l(0.000000)  // r1.z <- lowerleft.x; r1.w <- lowerleft.z

#line 180
sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r7.x <- center.x; r7.y <- center.y; r7.z <- center.z; r7.w <- center.w

#line 184
div r1.xy, v1.xyxx, r1.xyxx
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r1.x <- oddX; r1.y <- oddY

#line 185
frc r1.xy, r1.xyxx

#line 186
round_ne r1.xy, r1.xyxx

#line 190
lt r6.zw, r1.yyyx, l(0.000000, 0.000000, 0.100000, 0.100000)
and r2.w, r6.z, r6.w

#line 192
mul r8.x, r7.x, cb0[1].z  // r8.x <- <Filter_id69 return value>.x
add r3.w, r4.y, r5.y
add r2.y, r2.y, r3.w
add r2.y, r3.y, r2.y
mul r2.y, r2.y, cb0[1].y
mul r8.y, r2.y, l(0.250000)  // r8.y <- <Filter_id69 return value>.y
add r1.w, r1.w, r2.z
add r1.w, r6.y, r1.w
add r1.w, r3.z, r1.w
mul r1.w, r1.w, cb0[1].x
mul r8.z, r1.w, l(0.250000)  // r8.z <- <Filter_id69 return value>.z

#line 194
if_z r2.w

#line 198
  lt r1.xy, l(0.100000, 0.100000, 0.000000, 0.000000), r1.xyxx

#line 202
  and r2.yw, r6.zzzw, r1.xxxy

#line 204
  add r3.yz, r2.xxzx, r3.xxzx
  mul r3.yz, r3.yyzy, cb0[1].zzxz
  mul r9.xy, r3.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)  // r9.x <- <Filter_id69 return value>.x; r9.y <- <Filter_id69 return value>.z

#line 200
  mul r10.yz, r7.yyzy, cb0[1].yyxy  // r10.y <- <Filter_id69 return value>.y; r10.z <- <Filter_id69 return value>.z

#line 204
  add r3.yz, r4.zzxz, r5.zzxz
  mul r3.yz, r3.yyzy, cb0[1].xxzx
  mul r4.xy, r3.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)  // r4.x <- <Filter_id69 return value>.z; r4.y <- <Filter_id69 return value>.x

#line 197
  mov r9.z, r10.y
  mov r9.w, r4.x
  movc r5.xyz, r2.yyyy, r9.xzwx, r8.xyzx  // r5.x <- <Filter_id69 return value>.x; r5.y <- <Filter_id69 return value>.y; r5.z <- <Filter_id69 return value>.z

#line 198
  and r1.x, r1.y, r1.x

#line 200
  add r1.y, r1.z, r2.x
  add r1.y, r6.x, r1.y
  add r1.y, r3.x, r1.y
  mul r1.y, r1.y, cb0[1].z
  mul r10.x, r1.y, l(0.250000)  // r10.x <- <Filter_id69 return value>.x

#line 201
  mov r10.w, r8.y
  movc r3.xyz, r1.xxxx, r10.xwzx, r5.xyzx  // r3.x <- <Filter_id69 return value>.x; r3.y <- <Filter_id69 return value>.y; r3.z <- <Filter_id69 return value>.z

#line 205
  mov r4.zw, r9.zzzy
  movc r7.xyz, r2.wwww, r4.yzwy, r3.xyzx  // r7.x <- <Filter_id69 return value>.x; r7.y <- <Filter_id69 return value>.y; r7.z <- <Filter_id69 return value>.z

#line 206
  movc r4.xyzw, r2.wwww, r7.xyzw, l(0,0,0,1.000000)  // r4.x <- <Filter_id69 return value>.x; r4.y <- <Filter_id69 return value>.y; r4.z <- <Filter_id69 return value>.z; r4.w <- <Filter_id69 return value>.w
  mov r3.w, r7.w
  movc r1.xyzw, r1.xxxx, r3.xyzw, r4.xyzw  // r1.x <- <Filter_id69 return value>.x; r1.y <- <Filter_id69 return value>.y; r1.z <- <Filter_id69 return value>.z; r1.w <- <Filter_id69 return value>.w
  mov r5.w, r3.w
  movc r8.xyzw, r2.yyyy, r5.xyzw, r1.xyzw  // r8.x <- <Filter_id69 return value>.x; r8.y <- <Filter_id69 return value>.y; r8.z <- <Filter_id69 return value>.z; r8.w <- <Filter_id69 return value>.w
else   // Prior locations: r3.x <- right.x; r3.y <- right.y; r3.z <- right.z; r4.x <- upper.x; r4.y <- upper.y; r4.z <- upper.z; r5.x <- lower.x; r5.y <- lower.y; r5.z <- lower.z; r1.z <- lowerleft.x; r7.x <- center.x; r7.y <- center.y; r7.z <- center.z; r1.x <- oddX; r1.y <- oddY
  mov r8.w, r7.w  // r8.w <- <Filter_id69 return value>.w
endif 

#line 215
add r1.xyzw, -r0.xyzw, r8.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 224
ret 
// Approximately 69 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id100;
    float InputValue_id101;
    float InputValue_id102;
    float InputValue_id103;
    float2 InputValue_id104;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float gruen_id98;
    float blau_id99;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float Compute_id74()
{
    return InputValue_id101;
}
float Compute_id73()
{
    return InputValue_id102;
}
float Compute_id72()
{
    return InputValue_id103;
}
float2 Compute_id71()
{
    return InputValue_id104;
}
float4 Compute_id70()
{
    return InputValue_id100;
}
float4 Filter_id69(inout PS_STREAMS streams, float4 tex0col)
{
    float2 PixelSize = 1 / ViewSize_id77 + Compute_id71();
    float2 off = float2(PixelSize.x, PixelSize.y);
    float2 uv = streams.TexCoord_id62;
    float4 left = Texture0_id14.SampleLevel(LinearSampler_id44, uv - off, 0);
    float4 right = Texture0_id14.SampleLevel(LinearSampler_id44, uv + off, 0);
    off = float2(0, PixelSize.y);
    float4 upper = Texture0_id14.SampleLevel(LinearSampler_id44, uv - off, 0);
    float4 lower = Texture0_id14.SampleLevel(LinearSampler_id44, uv + off, 0);
    off = float2(PixelSize.x, PixelSize.y);
    float4 lowerright = Texture0_id14.SampleLevel(LinearSampler_id44, uv + off, 0);
    float4 upperleft = Texture0_id14.SampleLevel(LinearSampler_id44, uv - off, 0);
    off = float2(PixelSize.x, -PixelSize.y);
    float4 upperright = Texture0_id14.SampleLevel(LinearSampler_id44, uv + off, 0);
    float4 lowerleft = Texture0_id14.SampleLevel(LinearSampler_id44, uv - off, 0);
    float4 center = Texture0_id14.SampleLevel(LinearSampler_id44, uv, 0);
    float oddX = (uv.x / PixelSize.x) / 2;
    oddX = frac(oddX);
    oddX = round(oddX);
    float oddY = (uv.y / PixelSize.y) / 2;
    oddY = frac(oddY);
    oddY = round(oddY);
    float red = Compute_id72();
    float green = Compute_id73();
    float blue = Compute_id74();
    if (oddX < 0.1 && oddY < 0.1)
    {
        return float4(center.r * red, (upper.g + lower.g + left.g + right.g) / 4 * green, (upperleft.b + lowerleft.b + upperright.b + lowerright.b) / 4 * blue, center.a);
    }
    if (oddX > 0.1 && oddY < 0.1)
    {
        return float4((left.r + right.r) / 2 * red, center.g * green, (upper.b + lower.b) / 2 * blue, center.a);
    }
    if (oddX > 0.1 && oddY > 0.1)
    {
        return float4((upperleft.r + lowerleft.r + upperright.r + lowerright.r) / 4 * red, (upper.g + lower.g + left.g + right.g) / 4 * green, center.b * blue, center.a);
    }
    if (oddX < 0.1 && oddY > 0.1)
    {
        return float4((upper.r + lower.r) / 2 * red, center.g * green, (left.b + right.b) / 2 * blue, center.a);
    }
    return float4(0, 0, 0, 1);
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id69(streams, col), Compute_id70());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
