/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:1 Y:1 Z:1
@P EffectNodeBase.EffectNodeBaseShader: mixin Bitonic_Sort_ComputeFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer cb [Size: 16]
@C    _Level_id11 => Bitonic_Sort_ComputeFX._Level
@C    _LevelMask_id12 => Bitonic_Sort_ComputeFX._LevelMask
***************************
******  Resources    ******
***************************
@R    Data0_id13 => Bitonic_Sort_ComputeFX.Data0 [Stage: Compute, Slot: (0-0)]
@R    cb => cb [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    Bitonic_Sort_ComputeFX => 42778dd0cdc0d44b1d6ba364a4b215f9
***************************
*****     Stages      *****
***************************
@G    Compute => 25d950952f290c55c36f38eb873cd407
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb
// {
//
//   uint _Level_id11;                  // Offset:    0 Size:     4
//   uint _LevelMask_id12;              // Offset:    4 Size:     4
//
// }
//
// Resource bind info for Data0_id13
// {
//
//   float2 $Element;                   // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Data0_id13                            UAV  struct         r/w             u0      1 
// cb                                cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_uav_structured u0, 8
dcl_input vThreadID.x
dcl_temps 2
dcl_tgsm_structured g0, 8, 512
dcl_thread_group 1, 1, 1
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z; 
//   vThreadIDInGroupFlattened.x <- __input__.GroupIndex_id3
//
#line 41 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_72726b524ccc9c27eae44b70e2475e3f.hlsl"
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, vThreadID.x, l(0), u0.xyxx
store_structured g0.xy, l(0), l(0), r0.xyxx

#line 42
sync_g_t

#line 44
ushr r0.x, cb0[0].x, l(1)  // r0.x <- j

#line 46
and r0.y, vThreadID.x, cb0[0].y
ine r0.y, r0.y, l(0)

#line 44
mov r0.z, r0.x  // r0.z <- j
loop 
  uge r0.w, l(0), r0.z
  breakc_nz r0.w

#line 46
  ld_structured r1.yz, l(0), l(0), g0.xxyx
  ld_structured r0.w, r0.z, l(0), g0.xxxx

#line 35
  lt r0.w, r1.y, r0.w  // r0.w <- <Compare_id2 return value>

#line 46
  ieq r0.w, r0.y, r0.w
  xor r1.y, r0.z, l(0)
  ld_structured r1.yw, r1.y, l(0), g0.xxxy
  ld_structured r1.x, l(0), l(0), g0.xxxx
  movc r1.xy, r0.wwww, r1.ywyy, r1.xzxx  // r1.x <- result.x; r1.y <- result.y

#line 47
  sync_g_t

#line 48
  store_structured g0.xy, l(0), l(0), r1.xyxx

#line 49
  sync_g_t

#line 50
  ushr r0.z, r0.z, l(1)
endloop 

#line 51
ld_structured r0.xy, l(0), l(0), g0.xyxx
add r0.xy, r0.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)
store_structured u0.xy, vThreadID.x, l(0), r0.xyxx

#line 67
ret 
// Approximately 27 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    uint GroupIndex_id3;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
    uint GroupIndex_id3 : SV_GroupIndex;
};
cbuffer cb 
{
    uint _Level_id11;
    uint _LevelMask_id12;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
};
cbuffer Globals 
{
    groupshared float2 shared_data_id14[512];
};
RWStructuredBuffer<float2> Data0_id13;
bool Compare_id2(float2 left, float2 right)
{
    return left.x < right.x;
}
void Compute_id3(inout CS_STREAMS streams)
{
    uint3 DTid = streams.DispatchThreadId_id1;
    uint GI = streams.GroupIndex_id3;
    shared_data_id14[GI] = Data0_id13[DTid.x];
    GroupMemoryBarrierWithGroupSync();

    for (uint j = _Level_id11 >> 1; j > 0; j >>= 1)
    {
        float2 result = Compare_id2(shared_data_id14[GI & ~j], shared_data_id14[GI | j]) == (bool)(_LevelMask_id12 & DTid.x) ? shared_data_id14[GI ^ j] : shared_data_id14[GI];
        GroupMemoryBarrierWithGroupSync();
        shared_data_id14[GI] = result;
        GroupMemoryBarrierWithGroupSync();
    }
    Data0_id13[DTid.x] = float2(0.0, 1.0) + shared_data_id14[GI];
}
[numthreads(1, 1, 1)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.GroupIndex_id3 = __input__.GroupIndex_id3;
    streams.ThreadCountX_id7 = 1;
    streams.ThreadCountY_id8 = 1;
    streams.ThreadCountZ_id9 = 1;
    streams.ThreadCountPerGroup_id5 = 1 * 1 * 1;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id3(streams);
}
