/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin AdaptiveSharpenPass0_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 16]
@C    InputValue_id90 => ShaderFX.InputValueFloat4
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    p1_id88 => AdaptiveSharpenPass0_Internal_TextureFX.p1
@C    a_offset_id89 => AdaptiveSharpenPass0_Internal_TextureFX.a_offset
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    AdaptiveSharpenPass0_Internal_TextureFX => aac33804a697db0eb81db4dc811f616a
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 183 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_1d217e87c9d6146ec90642016e946130.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 187
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => a92e8053fa81120ec3fd11dc8b4b579a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id90;            // Offset:    0 Size:    16
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float2 p1_id88;                    // Offset:   80 Size:     8
//   float a_offset_id89;               // Offset:   88 Size:     4
//      = 0x40000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 146 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_1d217e87c9d6146ec90642016e946130.hlsl"
mad r0.xyzw, cb1[5].xyxy, l(0.000000, -1.000000, 1.000000, -1.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t0.xyzw, s0
mov_sat r0.xyz, r0.xyzx  // r0.x <- <get_id29 return value>.x; r0.y <- <get_id29 return value>.y; r0.z <- <get_id29 return value>.z; r0.x <- <get_id29 return value>.x; r0.y <- <get_id29 return value>.y; r0.z <- <get_id29 return value>.z
mov_sat r1.xyz, r1.xyzx  // r1.x <- <get_id29 return value>.x; r1.y <- <get_id29 return value>.y; r1.z <- <get_id29 return value>.z
add r2.xy, v1.xyxx, -cb1[5].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
mov_sat r2.xyz, r2.xyzx  // r2.x <- <get_id29 return value>.x; r2.y <- <get_id29 return value>.y; r2.z <- <get_id29 return value>.z

#line 155
add r0.yzw, r0.xxyz, r2.xxyz

#line 146
mad r3.xyzw, cb1[5].xyxy, l(-1.000000, 1.000000, 0.000000, 1.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r2.yzw, r3.xyxx, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t0.xyzw, s0
mov_sat r3.xyz, r3.xyzx  // r3.x <- <get_id29 return value>.x; r3.y <- <get_id29 return value>.y; r3.z <- <get_id29 return value>.z; r3.x <- <get_id29 return value>.x; r3.y <- <get_id29 return value>.y; r3.z <- <get_id29 return value>.z
mov_sat r2.yzw, r2.yyzw  // r2.y <- <get_id29 return value>.x; r2.z <- <get_id29 return value>.y; r2.w <- <get_id29 return value>.z

#line 155
add r0.yzw, r0.yyzw, r2.yyzw

#line 146
add r2.zw, v1.xxxy, cb1[5].xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.zwzz, t0.xyzw, s0
mov_sat r4.xyz, r4.xyzx  // r4.x <- <get_id29 return value>.x; r4.y <- <get_id29 return value>.y; r4.z <- <get_id29 return value>.z

#line 155
add r0.yzw, r0.yyzw, r4.xxyz

#line 146
mad r5.xyzw, cb1[5].xyxy, l(-1.000000, 0.000000, 1.000000, 0.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r4.yzw, r5.xyxx, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t0.xyzw, s0
mov_sat r5.xyz, r5.xyzx  // r5.x <- <get_id29 return value>.x; r5.y <- <get_id29 return value>.y; r5.z <- <get_id29 return value>.z; r5.x <- <get_id29 return value>.x; r5.y <- <get_id29 return value>.y; r5.z <- <get_id29 return value>.z
mov_sat r4.yzw, r4.yyzw  // r4.y <- <get_id29 return value>.x; r4.z <- <get_id29 return value>.y; r4.w <- <get_id29 return value>.z

#line 155
add r1.yzw, r1.xxyz, r4.yyzw
add r1.yzw, r5.xxyz, r1.yyzw
add r1.yzw, r3.xxyz, r1.yyzw
mad r0.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r0.yyzw

#line 146
sample_indexable(texture2d)(float,float,float,float) r6.xyz, v1.xyxx, t0.xyzw, s0
mov_sat r1.yzw, r6.xxyz  // r1.y <- <get_id29 return value>.x; r1.z <- <get_id29 return value>.y; r1.w <- <get_id29 return value>.z

#line 155
mad r0.yzw, r1.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000), r0.yyzw

#line 142
mad r1.y, r0.y, l(0.062500), -r1.y
mad r1.x, r0.y, l(0.062500), -r1.x
mad r1.z, r0.y, l(0.062500), -r4.y

#line 157
add r1.x, |r1.z|, |r1.x|

#line 142
mad r1.z, r0.y, l(0.062500), -r5.x

#line 157
add r1.x, |r1.z|, r1.x

#line 142
mad r1.z, r0.y, l(0.062500), -r3.x

#line 157
add r1.x, |r1.z|, r1.x
mul r1.x, r1.x, l(1.150000)
mad r1.x, |r1.y|, l(1.380000), r1.x

#line 142
mad r1.y, r0.y, l(0.062500), -r2.x
mad r0.x, r0.y, l(0.062500), -r0.x

#line 157
add r0.x, |r0.x|, |r1.y|

#line 142
mad r1.y, r0.y, l(0.062500), -r2.y

#line 157
add r0.x, r0.x, |r1.y|

#line 142
mad r1.y, r0.y, l(0.062500), -r4.x

#line 157
add r0.x, r0.x, |r1.y|
mad r0.x, r0.x, l(0.920000), r1.x

#line 146
mad r1.xyzw, cb1[5].xyxy, l(0.000000, -2.000000, -2.000000, 0.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t0.yxzw, s0
mov_sat r1.xy, r1.xyxx  // r1.y <- <get_id29 return value>.x

#line 142
mad r1.y, r0.y, l(0.062500), -r1.y
mad r1.x, r0.y, l(0.062500), -r1.x

#line 157
add r1.x, |r1.y|, |r1.x|

#line 146
mad r2.xyzw, cb1[5].xyxy, l(2.000000, 0.000000, 0.000000, 2.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.y, r2.xyxx, t0.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.z, r2.zwzz, t0.yzxw, s0
mov_sat r1.yz, r1.yyzy  // r1.z <- <get_id29 return value>.x

#line 142
mad r1.z, r0.y, l(0.062500), -r1.z
mad r1.y, r0.y, l(0.062500), -r1.y

#line 155
mul r0.yzw, r0.yyzw, l(0.000000, 0.062500, 0.062500, 0.062500)  // r0.y <- blur.x; r0.z <- blur.y; r0.w <- blur.z

#line 156
dp3 r0.y, r0.yzwy, l(-2.466667, -2.466667, -2.466667, 0.000000)
exp r0.y, r0.y
mad r0.y, r0.y, l(0.900000), l(0.266667)
min r0.y, r0.y, l(1.000000)  // r0.y <- c_comp

#line 157
add r0.z, |r1.y|, r1.x
add r0.z, |r1.z|, r0.z
mad r0.x, r0.z, l(0.230000), r0.x  // r0.x <- edge

#line 158
mad r6.w, r0.x, r0.y, cb1[5].z  // r6.w <- <Filter_id31 return value>.w

#line 162
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 167
add r1.xyzw, -r0.xyzw, r6.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 176
ret 
// Approximately 75 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id90;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float2 p1_id88 : register(c1);
    float a_offset_id89 = 2.0f;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float b_diff_id30(float3 blur, float3 c)
{
    return abs(blur - c);
}
float3 get_id29(inout PS_STREAMS streams, int x, int y)
{
    return saturate(Texture0_id14.Sample(LinearSampler_id44, p1_id88 * float2(x, y) + streams.TexCoord_id62).rgb);
}
float4 Compute_id32()
{
    return InputValue_id90;
}
float4 Filter_id31(inout PS_STREAMS streams, float4 tex0col)
{
    float3 c[13] = { get_id29(streams, 0, 0), get_id29(streams, -1, -1), get_id29(streams, 0, -1), get_id29(streams, 1, -1), get_id29(streams, -1, 0), get_id29(streams, 1, 0), get_id29(streams, -1, 1), get_id29(streams, 0, 1), get_id29(streams, 1, 1), get_id29(streams, 0, -2), get_id29(streams, -2, 0), get_id29(streams, 2, 0), get_id29(streams, 0, 2)};
    float3 blur = (2 * (c[2] + c[4] + c[5] + c[7]) + (c[1] + c[3] + c[6] + c[8]) + 4 * c[0]) / 16;
    float c_comp = saturate(4.0 / 15.0 + 0.9 * exp2(dot(blur, -37.0 / 15.0)));
    float edge = length(1.38 * (b_diff_id30(blur, c[0])) + 1.15 * (b_diff_id30(blur, c[2]) + b_diff_id30(blur, c[4]) + b_diff_id30(blur, c[5]) + b_diff_id30(blur, c[7])) + 0.92 * (b_diff_id30(blur, c[1]) + b_diff_id30(blur, c[3]) + b_diff_id30(blur, c[6]) + b_diff_id30(blur, c[8])) + 0.23 * (b_diff_id30(blur, c[9]) + b_diff_id30(blur, c[10]) + b_diff_id30(blur, c[11]) + b_diff_id30(blur, c[12])));
    return float4((Texture0_id14.Sample(LinearSampler_id44, streams.TexCoord_id62).rgb), (edge * c_comp + a_offset_id89));
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id31(streams, col), Compute_id32());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
