/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin ReactionDiffusion_Internal_TextureFX [{DiameterXY = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {ParametersMax = InputFloat4<ShaderFX.InputValueFloat4.i1,PerUpdate>}, {ParametersMin = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P ParametersMin: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
@P ParametersMax: InputFloat4<ShaderFX.InputValueFloat4.i1,PerUpdate>
@P DiameterXY: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 48]
@C    InputValue_id98 => ShaderFX.InputValueFloat2
@C    InputValue_id99 => ShaderFX.InputValueFloat4.i1
@C    InputValue_id100 => ShaderFX.InputValueFloat4
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Feedback_id93 => ReactionDiffusion_Internal_TextureFX.Feedback [Stage: Pixel, Slot: (0-0)]
@R    Init_id94 => ReactionDiffusion_Internal_TextureFX.Init [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ReactionDiffusion_Internal_TextureFX => d1f0640b57630ebee0b0025bf5342c4c
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 187 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_7f421e33f81d3b44900fef1878916122.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 191
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 2c89c5dc9fc070d3220461d3f880aebf
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float2 InputValue_id98;            // Offset:    0 Size:     8
//   float4 InputValue_id99;            // Offset:   16 Size:    16
//   float4 InputValue_id100;           // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Feedback_id93                     texture  float4          2d             t0      1 
// Init_id94                         texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 162 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_7f421e33f81d3b44900fef1878916122.hlsl"
add r0.xy, v1.xyxx, -cb0[0].xyxx
mov r0.zw, v1.yyyx

#line 160
sample_l_indexable(texture2d)(float,float,float,float) r0.xz, r0.xzxx, t0.xzyw, s0, l(0.000000)  // r0.x <- d_1n.x; r0.z <- d_1n.y

#line 162
sample_l_indexable(texture2d)(float,float,float,float) r0.yw, r0.wyww, t0.zxwy, s0, l(0.000000)

#line 163
add r1.xy, v1.xyxx, cb0[0].xyxx
mov r1.zw, v1.yyyx

#line 161
sample_l_indexable(texture2d)(float,float,float,float) r1.xz, r1.xzxx, t0.xzyw, s0, l(0.000000)

#line 163
sample_l_indexable(texture2d)(float,float,float,float) r1.yw, r1.wyww, t0.zxwy, s0, l(0.000000)

#line 161
add r0.xz, r0.xxzx, r1.xxzx

#line 162
add r0.xy, r0.ywyy, r0.xzxx  // r0.y <- d_1n.y

#line 163
add r0.xy, r1.ywyy, r0.xyxx

#line 158
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t1.xyzw, s0, l(0.000000)  // r1.x <- parm.x; r1.y <- parm.y; r1.z <- parm.z; r1.w <- parm.w

#line 159
add r2.xyzw, cb0[1].xzwy, -cb0[2].xzwy
mad r1.xyzw, r1.xzwy, r2.xyzw, cb0[2].xzwy  // r1.y <- parm.z; r1.z <- parm.w; r1.w <- parm.y

#line 167
add r0.z, -r1.x, l(1.000000)

#line 157
sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r2.x <- d_1.x; r2.y <- d_1.y

#line 167
add r0.w, -r2.x, l(1.000000)
mul r0.w, r0.w, r1.y
mad r0.z, r0.z, r2.x, r0.w

#line 165
mul r0.w, r2.y, r2.x

#line 167
mad r3.x, -r0.w, r0.y, r0.z  // r3.x <- reaction.x

#line 165
mul r0.z, r0.y, r0.w  // r0.z <- reaction.x

#line 164
mul r0.xy, r0.xyxx, r1.xwxx

#line 168
add r0.w, -r1.z, -r1.y
add r0.w, -r1.w, r0.w
add r0.w, r0.w, l(1.000000)
mad r3.y, r0.w, r2.y, r0.z  // r3.y <- reaction.y

#line 170
mad o0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r3.xyxx

#line 180
mov o0.zw, l(0,0,0,1.000000)
ret 
// Approximately 30 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float2 InputValue_id98;
    float4 InputValue_id99;
    float4 InputValue_id100;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
Texture2D Feedback_id93;
Texture2D Init_id94;
float2 Compute_id71()
{
    return InputValue_id98;
}
float4 Compute_id70()
{
    return InputValue_id99;
}
float4 Compute_id69()
{
    return InputValue_id100;
}
float4 Shading_id68(inout PS_STREAMS streams)
{
    float2 uv = streams.TexCoord_id62;
    float4 d_1 = Feedback_id93.SampleLevel(LinearSampler_id44, uv, 0);
    float4 parm = Init_id94.SampleLevel(LinearSampler_id44, uv, 0);
    parm.rgba = lerp(Compute_id69(), Compute_id70(), parm);
    float2 d_1n = Feedback_id93.SampleLevel(LinearSampler_id44, float2(uv.x - Compute_id71().x, uv.y), 0).xy;
    d_1n += Feedback_id93.SampleLevel(LinearSampler_id44, float2(uv.x + Compute_id71().x, uv.y), 0).xy;
    d_1n += Feedback_id93.SampleLevel(LinearSampler_id44, float2(uv.x, uv.y - Compute_id71().y), 0).xy;
    d_1n += Feedback_id93.SampleLevel(LinearSampler_id44, float2(uv.x, uv.y + Compute_id71().y), 0).xy;
    float2 diffusion = (d_1n / 4) * parm.rg;
    float2 reaction = d_1.xx * d_1.yy * d_1n.yy;
    reaction.x *= -1;
    reaction.x += (1 - parm.x) * d_1.x + parm.z * (1 - d_1.x);
    reaction.y += (-parm.z - parm.w + (1 - parm.y)) * d_1.y;
    float4 result = float4(1.0, 0.0, 0.0, 1.0);
    result.rg = diffusion + reaction;
    return result;
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id68(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
