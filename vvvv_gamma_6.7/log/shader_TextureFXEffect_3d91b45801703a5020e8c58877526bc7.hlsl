/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin HeightShadows_Pass0_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {DotTolerance = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {Height = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}, {LightDirection = InputFloat3<ShaderFX.InputValueFloat3,PerUpdate>}, {RayJitter = InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>}, {RayLength = InputFloat<ShaderFX.InputValueFloat.i3,PerUpdate>}, {ShadowFade = InputFloat<ShaderFX.InputValueFloat.i4,PerUpdate>}, {ShadowFalloffPow = InputFloat<ShaderFX.InputValueFloat.i5,PerUpdate>}]
@P Height: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P LightDirection: InputFloat3<ShaderFX.InputValueFloat3,PerUpdate>
@P DotTolerance: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P RayJitter: InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>
@P RayLength: InputFloat<ShaderFX.InputValueFloat.i3,PerUpdate>
@P ShadowFade: InputFloat<ShaderFX.InputValueFloat.i4,PerUpdate>
@P ShadowFalloffPow: InputFloat<ShaderFX.InputValueFloat.i5,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 64]
@C    InputValue_id107 => ShaderFX.InputValueFloat4
@C    InputValue_id108 => ShaderFX.InputValueFloat.i1
@C    InputValue_id109 => ShaderFX.InputValueFloat
@C    InputValue_id110 => ShaderFX.InputValueFloat3
@C    InputValue_id111 => ShaderFX.InputValueFloat.i2
@C    InputValue_id112 => ShaderFX.InputValueFloat.i3
@C    InputValue_id113 => ShaderFX.InputValueFloat.i4
@C    InputValue_id114 => ShaderFX.InputValueFloat.i5
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (0-0)]
@R    BorderSampler_id106 => HeightShadows_Pass0_Internal_TextureFX.BorderSampler [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id16 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    HeightShadows_Pass0_Internal_TextureFX => f392133e2204cc903f65d0200de3e2c7
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    NoiseFunctions => 98db2858f268d9a8c1c8a5d521e3dce2
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    ComputeFloat3 => fcd85992058d53e05e3805fecfe8c7a7
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
@S    InputFloat3 => 8982608ad2ca3465dcfa300c570359d5
@S    DeclFloat3 => f8ad0be4bea340b9223aeec02eb4c744
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 270 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_3d91b45801703a5020e8c58877526bc7.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 274
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 67f725ceaf8e4ea896e2462369173be9
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id107;           // Offset:    0 Size:    16
//   float InputValue_id108;            // Offset:   16 Size:     4
//   float InputValue_id109;            // Offset:   20 Size:     4
//   float3 InputValue_id110;           // Offset:   32 Size:    12
//   float InputValue_id111;            // Offset:   44 Size:     4
//   float InputValue_id112;            // Offset:   48 Size:     4
//   float InputValue_id113;            // Offset:   52 Size:     4
//   float InputValue_id114;            // Offset:   56 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler0_id52                     sampler      NA          NA             s0      1 
// BorderSampler_id106               sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// Texture1_id16                     texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 249 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_3d91b45801703a5020e8c58877526bc7.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 215
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t0.xyzw, s1, l(0.000000)
mul r1.z, r1.x, cb0[1].y  // r1.z <- cpos.z

#line 220
dp3 r2.x, cb0[2].xyzx, cb0[2].xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, cb0[2].xyzx

#line 221
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t1.xyzw, s1, l(0.000000)  // r3.x <- norm.x; r3.y <- norm.y; r3.z <- norm.z

#line 222
dp3 r2.w, -r2.xyzx, r3.xyzx  // r2.w <- dotnorm

#line 173
max r3.x, cb0[1].x, l(0.000000)
min r2.w, |r2.w|, r3.x

#line 163
div r2.w, r2.w, cb0[1].x  // r2.w <- <Map_id61 return value>

#line 228
mov r1.xy, v1.xyxx

#line 237
mov r3.w, l(-1)

#line 225
mov r3.xyz, r1.xyzx  // r3.x <- cpos.x; r3.y <- cpos.y; r3.z <- cpos.z
mov r4.xyzw, l(0,0,0,0)  // r4.x <- occluderpos.x; r4.y <- occluderpos.y; r4.z <- occluderpos.z; r4.w <- gotoccluder
mov r5.xy, l(1.000000,0,0,0)  // r5.x <- heightdiff; r5.y <- i
loop 
  ge r5.z, r5.y, l(24.000000)
  breakc_nz r5.z

#line 167
  mul r6.xyz, r3.xyzx, l(46.910500, 46.910500, 46.910500, 0.000000)
  frc r6.xyz, r6.xyzx  // r6.x <- p3.x; r6.y <- p3.y; r6.z <- p3.z

#line 168
  add r7.xyz, r6.yzxy, l(19.190001, 19.190001, 19.190001, 0.000000)
  dp3 r5.z, r6.xyzx, r7.xyzx
  add r6.xyz, r5.zzzz, r6.xyzx

#line 169
  add r5.z, r6.y, r6.x
  mul r5.z, r6.z, r5.z
  frc r5.z, r5.z  // r5.z <- <hash13_id79 return value>

#line 227
  mul r5.z, r5.z, cb0[2].w
  lt r5.w, l(0.000000), r5.y
  and r5.w, r5.w, l(0x3f800000)
  mul r5.z, r5.w, r5.z  // r5.z <- jitter

#line 228
  add r6.xyz, -r1.xyzx, r3.xyzx
  dp3 r5.w, r6.xyzx, r6.xyzx
  sqrt r5.w, r5.w
  add r5.w, r5.w, l(0.200000)  // r5.w <- distfac

#line 229
  mul r5.z, r5.w, r5.z
  mad r5.z, cb0[3].x, l(0.041667), r5.z
  mad r3.xyz, -r2.xyzx, r5.zzzz, r3.xyzx

#line 230
  sample_l_indexable(texture2d)(float,float,float,float) r5.z, r3.xyxx, t0.yzxw, s1, l(0.000000)

#line 231
  mad r5.z, -r5.z, cb0[1].y, r3.z  // r5.z <- cdiff

#line 232
  lt r5.w, r5.z, r5.x
  and r5.w, r5.w, l(0x3f800000)
  add r6.x, -r5.x, r5.z
  mad r5.x, r5.w, r6.x, r5.x

#line 233
  not r5.w, r4.w
  lt r5.z, r5.z, l(0.000000)
  and r5.z, r5.z, r5.w

#line 237
  movc r4.xyzw, r5.zzzz, r3.xyzw, r4.xyzw

#line 238
  add r5.y, r5.y, l(1.000000)
endloop 

#line 239
add r2.xyz, -r1.xyzx, r4.xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
and r2.y, r4.w, l(0x3f800000)
mul r2.x, r2.x, r2.y  // r2.x <- dist

#line 240
add_sat r2.y, r5.x, l(1.000000)
ge r2.z, r5.x, l(0.000000)
movc r3.x, r2.z, l(0), l(1.000000)
mul r1.w, r2.y, r3.x  // r1.w <- outdiff

#line 173
min r2.x, r2.x, l(0.800000)

#line 163
mul r2.x, r2.x, l(1.250000)  // r2.x <- <Map_id61 return value>

#line 173
max r2.y, cb0[3].y, l(0.000000)
min r2.y, r2.y, r2.x

#line 163
div r2.y, r2.y, cb0[3].y  // r2.y <- <Map_id61 return value>

#line 243
log r2.y, r2.y
mul r2.y, r2.y, cb0[3].z
exp r2.y, r2.y
log r2.w, r2.w
mul r2.w, r2.w, l(0.333300)
exp r2.w, r2.w
add r2.y, r2.y, l(-1.000000)
mad r2.y, r2.w, r2.y, l(1.000000)  // r2.y <- outcol

#line 244
and r2.z, r2.z, l(0x3f800000)
add r2.w, -r2.y, l(1.000000)
mad r1.x, r2.z, r2.w, r2.y  // r1.x <- res.x
mul r1.y, r3.x, r2.x  // r1.y <- res.y

#line 254
add r1.xyzw, -r0.xyzw, r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 263
ret 
// Approximately 79 instruction slots used
***************************
*************************/
static const int SampleCount_id103 = 24;
static const float invSampleCount_id104 = 0.04166667;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id107;
    float InputValue_id108;
    float InputValue_id109;
    float3 InputValue_id110;
    float InputValue_id111;
    float InputValue_id112;
    float InputValue_id113;
    float InputValue_id114;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float3 LightDir_id101;
    bool EnableShadows_id102;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
SamplerState ClampSampler_id105 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};
SamplerState BorderSampler_id106 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
float Map_id61(float value, float inMin, float inMax, float outMin, float outMax)
{
    return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);
}
float hash13_id79(float3 p3)
{
    p3 = frac(p3 * .1031);
    p3 += dot(p3, p3.yzx + 19.19);
    return frac((p3.x + p3.y) * p3.z);
}
float MapClamp_id90(float value, float inMin, float inMax, float outMin, float outMax)
{
    return Map_id61(clamp(value, min(inMin, inMax), max(inMin, inMax)), inMin, inMax, outMin, outMax);
}
float Compute_id98()
{
    return InputValue_id108;
}
float3 Compute_id99()
{
    return InputValue_id110;
}
float Compute_id97()
{
    return InputValue_id114;
}
float Compute_id96()
{
    return InputValue_id113;
}
float Compute_id95()
{
    return InputValue_id112;
}
float Compute_id94()
{
    return InputValue_id111;
}
float Compute_id93()
{
    return InputValue_id109;
}
float4 Compute_id92()
{
    return InputValue_id107;
}
float4 Filter_id91(inout PS_STREAMS streams, float4 tex0col)
{
    float height = Compute_id93();
    float rayJitter = Compute_id94();
    float rayLength = Compute_id95();
    float shadowFade = Compute_id96();
    float shadowFalloffPow = Compute_id97();
    float2 uv = streams.TexCoord_id62;
    float3 cpos = float3(uv, Texture0_id14.SampleLevel(BorderSampler_id106, uv, 0).x * height);
    float3 occluderpos = 0;
    bool gotoccluder = false;
    float3 orig = cpos;
    float heightdiff = 1;
    float3 raydir = -normalize(Compute_id99());
    float3 norm = Texture1_id16.SampleLevel(BorderSampler_id106, uv, 0).xyz;
    float dotnorm = dot(raydir, norm);
    float normtol = MapClamp_id90(abs(dotnorm), 0, Compute_id98(), 0, 1);

    for (float i = 0; i < SampleCount_id103; i++)
    {
        float jitter = hash13_id79(cpos * 455) * rayJitter * (i > 0);
        float distfac = 0.2 + distance(cpos, orig);
        cpos += raydir * (invSampleCount_id104 * rayLength + jitter * distfac);
        float cheight = Texture0_id14.SampleLevel(BorderSampler_id106, cpos.xy, 0).x * height;
        float cdiff = cpos.z - cheight;
        heightdiff = lerp(heightdiff, cdiff, cdiff < heightdiff);
        if (!gotoccluder && cdiff < 0)
        {
            gotoccluder = true;
            occluderpos = cpos;
        }
    }
    float dist = lerp(0, distance(occluderpos, orig), gotoccluder);
    float outdiff = saturate(heightdiff + 1) * (1 - (heightdiff >= 0));
    float outbluram = MapClamp_id90(dist, 0.0, 0.8, 0, 1);
    float outcol = MapClamp_id90(outbluram, 0, shadowFade, 0, 1);
    outcol = lerp(1, pow(outcol, shadowFalloffPow), pow(normtol, 0.3333));
    float4 res = float4(lerp(outcol, 1, heightdiff >= 0), outbluram * (1 - (heightdiff >= 0)), orig.z, outdiff);
    return res;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id91(streams, col), Compute_id92());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
