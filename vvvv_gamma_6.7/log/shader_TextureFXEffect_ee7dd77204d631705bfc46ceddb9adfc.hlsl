/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Voronoise_Internal_TextureFX [{Blur = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {ColorA = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {ColorB = InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>}, {Size = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {Voronoi = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P ColorA: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
@P ColorB: InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>
@P Size: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P Voronoi: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Blur: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 64]
@C    InputValue_id99 => ShaderFX.InputValueFloat.i1
@C    InputValue_id100 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id101 => ShaderFX.InputValueFloat4_Color.i1
@C    InputValue_id102 => ShaderFX.InputValueFloat2
@C    InputValue_id103 => ShaderFX.InputValueFloat
cbuffer Globals [Size: 144]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Transform_id98 => Voronoise_Internal_TextureFX.Transform
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Voronoise_Internal_TextureFX => b84edf9907a1a4a38ff2e78867512dee
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 214 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_ee7dd77204d631705bfc46ceddb9adfc.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 218
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => f6d89adff2d81a517dfbaa01d80f6b49
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float InputValue_id99;             // Offset:    0 Size:     4
//   float4 InputValue_id100;           // Offset:   16 Size:    16
//   float4 InputValue_id101;           // Offset:   32 Size:    16
//   float2 InputValue_id102;           // Offset:   48 Size:     8
//   float InputValue_id103;            // Offset:   56 Size:     4
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float4x4 Transform_id98;           // Offset:   80 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[7], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 192 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_ee7dd77204d631705bfc46ceddb9adfc.hlsl"
mad r0.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
mov r0.z, l(1.000000)
dp3 r1.x, r0.xyzx, cb1[5].xywx
dp3 r1.y, r0.xyzx, cb1[6].xywx
mad r0.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- <TransformUV_id59 return value>.x; r0.y <- <TransformUV_id59 return value>.y

#line 197
mul r0.xy, r0.xyxx, cb0[3].xyxx

#line 158
round_ni r0.zw, r0.xxxy  // r0.z <- p.x; r0.w <- p.y

#line 159
frc r0.xy, r0.xyxx  // r0.x <- f.x; r0.y <- f.y

#line 160
add r1.x, -cb0[0].x, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.x
mad r1.x, r1.x, l(63.000000), l(1.000000)  // r1.x <- k

#line 169
mov r1.y, cb0[3].z
mov r1.z, l(1.000000)

#line 164
mov r2.xy, l(0,0,0,0)  // r2.x <- va; r2.y <- wt
mov r1.w, l(-2)  // r1.w <- j
loop 
  ilt r2.z, l(2), r1.w
  breakc_nz r2.z

#line 168
  itof r3.y, r1.w  // r3.y <- g.y

#line 166
  mov r2.zw, r2.xxxy  // r2.z <- va; r2.w <- wt
  mov r3.z, l(-2)  // r3.z <- i
  loop 
    ilt r3.w, l(2), r3.z
    breakc_nz r3.w

#line 168
    itof r3.x, r3.z  // r3.x <- g.x

#line 169
    add r4.xy, r0.zwzz, r3.xyxx

#line 145
    dp2 r3.w, r4.xyxx, l(127.099998, 311.700012, 0.000000, 0.000000)  // r3.w <- q.x
    dp2 r4.z, r4.xyxx, l(269.500000, 183.300003, 0.000000, 0.000000)  // r4.z <- q.y
    dp2 r4.x, r4.xyxx, l(419.200012, 371.899994, 0.000000, 0.000000)  // r4.x <- q.z

#line 146
    sincos r5.x, null, r3.w
    sincos r5.yz, null, r4.zzxz
    mul r4.xyz, r5.xyzx, l(43758.546875, 43758.546875, 43758.546875, 0.000000)
    frc r4.xyz, r4.xyzx  // r4.x <- <hash3_id68 return value>.x; r4.y <- <hash3_id68 return value>.y; r4.z <- <hash3_id68 return value>.z

#line 169
    mul r3.w, r1.z, r4.z  // r3.w <- o.z

#line 170
    add r4.zw, -r0.xxxy, r3.xxxy
    mad r4.xy, r4.xyxx, r1.yyyy, r4.zwzz  // r4.x <- r.x; r4.y <- r.y

#line 171
    dp2 r3.x, r4.xyxx, r4.xyxx  // r3.x <- d

#line 172
    sqrt r3.x, r3.x
    mul r3.x, r3.x, l(0.707214)
    min r3.x, r3.x, l(1.000000)
    mad r4.x, r3.x, l(-2.000000), l(3.000000)
    mul r3.x, r3.x, r3.x
    mad r3.x, -r4.x, r3.x, l(1.000000)
    max r3.x, r3.x, l(0.000000)
    log r3.x, r3.x
    mul r3.x, r1.x, r3.x
    exp r3.x, r3.x  // r3.x <- ww

#line 173
    mad r2.z, r3.w, r3.x, r2.z

#line 174
    add r2.w, r2.w, r3.x

#line 175
    iadd r3.z, r3.z, l(1)
  endloop 
  mov r2.xy, r2.zwzz  // r2.x <- va; r2.y <- wt
  iadd r1.w, r1.w, l(1)
endloop 

#line 176
div r0.x, r2.x, r2.y  // r0.x <- <iqnoise_id69 return value>

#line 198
add r1.xyzw, -cb0[1].xyzw, cb0[2].xyzw
mad o0.xyzw, r0.xxxx, r1.xyzw, cb0[1].xyzw

#line 207
ret 
// Approximately 59 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float InputValue_id99;
    float4 InputValue_id100;
    float4 InputValue_id101;
    float2 InputValue_id102;
    float InputValue_id103;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float4x4 Transform_id98;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float3 hash3_id68(float2 p)
{
    float3 q = float3(dot(p, float2(127.1, 311.7)), dot(p, float2(269.5, 183.3)), dot(p, float2(419.2, 371.9)));
    return frac(sin(q) * 43758.5453);
}
float4 Compute_id75()
{
    return InputValue_id101;
}
float4 Compute_id74()
{
    return InputValue_id100;
}
float iqnoise_id69(float2 x, float u, float v)
{
    float2 p = floor(x);
    float2 f = frac(x);
    float k = 1.0 + 63.0 * pow(1.0 - v, 4.0);
    float va = 0.0;
    float wt = 0.0;

    for (int j = -2; j <= 2; j++)

        for (int i = -2; i <= 2; i++)
        {
            float2 g = float2((float)i, (float)j);
            float3 o = hash3_id68(p + g) * float3(u, u, 1.0);
            float2 r = g - f + o.xy;
            float d = dot(r, r);
            float ww = pow(saturate(1.0 - smoothstep(0.0, 1.414, sqrt(d))), k);
            va += o.z * ww;
            wt += ww;
        }
    return va / wt;
}
float Compute_id73()
{
    return InputValue_id99;
}
float Compute_id72()
{
    return InputValue_id103;
}
float2 Compute_id71()
{
    return InputValue_id102;
}
float2 TransformUV_id59(float2 uv, float4x4 transform)
{
    return mul(float4((uv.xy * 2 - 1) * float2(1, -1) * 0.5, 0, 1), transform).xy * float2(1, -1) + 0.5;
}
float4 Shading_id70(inout PS_STREAMS streams)
{
    float2 uvr = TransformUV_id59(streams.TexCoord_id62, Transform_id98);
    float f = iqnoise_id69(Compute_id71() * uvr.xy, Compute_id72(), Compute_id73());
    return lerp(Compute_id74(), Compute_id75(), f);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id70(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
