/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin ConvertColorSpace_Internal_TextureFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Gamma_id87 => ConvertColorSpace_Internal_TextureFX.Gamma
@C    type_id88 => ConvertColorSpace_Internal_TextureFX.type
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ConvertColorSpace_Internal_TextureFX => 510962c344f159a6230efb928b6367fd
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    AddonColorUtility => 9a804e072dbcc5302c99c79218edc161
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 222 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_1d24bdfb9a031c679e58716f839d916d.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 226
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 4d703bc7c6f092e8a5754a5b5c70bade
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float Gamma_id87;                  // Offset:   80 Size:     4
//      = 0x400ccccd 
//   int type_id88;                     // Offset:   84 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler0_id52                     sampler      NA          NA             s0      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 184 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_1d24bdfb9a031c679e58716f839d916d.hlsl"
switch cb0[5].y

#line 187
  case l(0)

#line 179
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 174
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[5].x
  log r1.yzw, r0.xxyz
  mul r1.xyz, r1.yzwy, r1.xxxx
  exp r0.xyz, r1.xyzx  // r0.x <- RGBa.x; r0.y <- RGBa.y; r0.z <- RGBa.z

#line 189
  break 

#line 190
  case l(1)

#line 179
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 170
  mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  mul r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- <SRgbToLinear_id30 return value>.x; r0.y <- <SRgbToLinear_id30 return value>.y; r0.z <- <SRgbToLinear_id30 return value>.z

#line 192
  break 

#line 193
  case l(2)

#line 179
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 161
  add r1.xyz, r0.xyzx, l(0.055000, 0.055000, 0.055000, 0.000000)
  mul r1.xyz, r1.xyzx, l(0.947867, 0.947867, 0.947867, 0.000000)
  log r1.xyz, r1.xyzx
  mul r1.xyz, r1.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
  exp r1.xyz, r1.xyzx  // r1.x <- higher.x; r1.y <- higher.y; r1.z <- higher.z

#line 163
  ge r2.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r0.xyzx
  and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)  // r2.x <- cutoff.x; r2.y <- cutoff.y; r2.z <- cutoff.z

#line 164
  mad r3.xyz, r0.xyzx, l(0.077399, 0.077399, 0.077399, 0.000000), -r1.xyzx
  mad r0.xyz, r2.xyzx, r3.xyzx, r1.xyzx  // r0.x <- sRGBa.x; r0.y <- sRGBa.y; r0.z <- sRGBa.z

#line 195
  break 

#line 196
  case l(3)

#line 179
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 155
  log r1.xyz, r0.xyzx
  mul r1.xyz, r1.xyzx, cb0[5].xxxx
  exp r0.xyz, r1.xyzx  // r0.x <- RGBa.x; r0.y <- RGBa.y; r0.z <- RGBa.z

#line 198
  break 

#line 199
  case l(4)

#line 179
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 148
  sqrt r1.xyz, r0.xyzx  // r1.x <- S1.x; r1.y <- S1.y; r1.z <- S1.z

#line 149
  sqrt r2.xyz, r1.xyzx  // r2.x <- S2.x; r2.y <- S2.y; r2.z <- S2.z

#line 150
  sqrt r3.xyz, r2.xyzx  // r3.x <- S3.x; r3.y <- S3.y; r3.z <- S3.z

#line 151
  mul r2.xyz, r2.xyzx, l(0.684122, 0.684122, 0.684122, 0.000000)
  mad r1.xyz, r1.xyzx, l(0.662003, 0.662003, 0.662003, 0.000000), r2.xyzx
  mad r1.xyz, -r3.xyzx, l(0.323584, 0.323584, 0.323584, 0.000000), r1.xyzx
  mad r0.xyz, -r0.xyzx, l(0.022541, 0.022541, 0.022541, 0.000000), r1.xyzx  // r0.x <- <LinearToSRgb_id33 return value>.x; r0.y <- <LinearToSRgb_id33 return value>.y; r0.z <- <LinearToSRgb_id33 return value>.z

#line 201
  break 

#line 202
  case l(5)

#line 179
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 139
  log r1.xyz, r0.xyzx
  mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  exp r1.xyz, r1.xyzx
  mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)  // r1.x <- higher.x; r1.y <- higher.y; r1.z <- higher.z

#line 141
  ge r2.xyz, l(0.003131, 0.003131, 0.003131, 0.000000), r0.xyzx
  and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)  // r2.x <- cutoff.x; r2.y <- cutoff.y; r2.z <- cutoff.z

#line 142
  mad r3.xyz, r0.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000), -r1.xyzx
  mad r0.xyz, r2.xyzx, r3.xyzx, r1.xyzx  // r0.x <- RGBa.x; r0.y <- RGBa.y; r0.z <- RGBa.z

#line 204
  break 

#line 205
  default 
  break 
endswitch 
mov o0.xyzw, r0.xyzw

#line 215
ret 
// Approximately 58 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float Gamma_id87 = 2.2f;
    int type_id88;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 LinearToSRgbPrecise_id34(float4 RGBa)
{
    float3 rgb = RGBa.rgb;
    float3 higher = 1.055 * pow(rgb, 1.0 / 2.4) - 0.055;
    float3 lower = rgb * 12.92f;
    float3 cutoff = step(rgb, 0.0031308);
    RGBa.rgb = lerp(higher, lower, cutoff);
    return RGBa;
}
float4 LinearToSRgb_id33(float4 RGBa)
{
    float3 RGB = RGBa.rgb;
    float3 S1 = sqrt(RGB);
    float3 S2 = sqrt(S1);
    float3 S3 = sqrt(S2);
    return float4(0.662002687f * S1 + 0.684122060f * S2 - 0.323583601f * S3 - 0.0225411470f * RGB, RGBa.a);
}
float4 LinearToGamma_id32(float4 RGBa, float Gamma)
{
    RGBa.rgb = pow(RGBa.rgb, Gamma);
    return RGBa;
}
float4 SRgbToLinearPrecise_id31(float4 sRGBa)
{
    float3 srgb = sRGBa.rgb;
    float3 higher = pow((srgb + 0.055) / 1.055, 2.4);
    float3 lower = srgb / 12.92;
    float3 cutoff = step(srgb, 0.04045);
    sRGBa.rgb = lerp(higher, lower, cutoff);
    return sRGBa;
}
float4 SRgbToLinear_id30(float4 sRGBa)
{
    float3 sRGB = sRGBa.rgb;
    return float4(sRGB * (sRGB * (sRGB * 0.305306011 + 0.682171111) + 0.012522878), sRGBa.a);
}
float4 GammaToLinear_id29(float4 RGBa, float Gamma)
{
    RGBa.rgb = pow(RGBa.rgb, 1.0 / Gamma);
    return RGBa;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 c;
    switch (type_id88)

    {
        case 0:
            c = GammaToLinear_id29(InTex0_id26(streams), Gamma_id87);
            break;
        case 1:
            c = SRgbToLinear_id30(InTex0_id26(streams));
            break;
        case 2:
            c = SRgbToLinearPrecise_id31(InTex0_id26(streams));
            break;
        case 3:
            c = LinearToGamma_id32(InTex0_id26(streams), Gamma_id87);
            break;
        case 4:
            c = LinearToSRgb_id33(InTex0_id26(streams));
            break;
        case 5:
            c = LinearToSRgbPrecise_id34(InTex0_id26(streams));
            break;
    }
    return c;
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
