/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Seamless_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 16]
@C    InputValue_id96 => ShaderFX.InputValueFloat4
cbuffer Globals [Size: 160]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    type_id94 => Seamless_Internal_TextureFX.type
@C    tTex_id95 => Seamless_Internal_TextureFX.tTex
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearRepeatSampler_id50 => Texturing.LinearRepeatSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id16 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Seamless_Internal_TextureFX => b00d499c59b3b5144a4ca10198d572d6
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 264 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_5f92aba913d4d3b6e494fc94b329140d.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 268
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 36e0489c20f8496185bd189e5be3c80d
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id96;            // Offset:    0 Size:    16
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int type_id94;                     // Offset:   80 Size:     4
//   float4x4 tTex_id95;                // Offset:   96 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearRepeatSampler_id50          sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// Texture1_id16                     texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 243 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_5f92aba913d4d3b6e494fc94b329140d.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 216
mad r1.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
mov r1.z, l(1.000000)
dp3 r2.x, r1.xyzx, cb1[6].xywx
dp3 r2.y, r1.xyzx, cb1[7].xywx
mad r1.xy, r2.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)  // r1.x <- <TransformUV_id60 return value>.x; r1.y <- <TransformUV_id60 return value>.y

#line 226
switch cb1[5].x

#line 229
  case l(0)

#line 187
  round_ni r3.xyzw, r1.xyxy  // r3.z <- iuv.x; r3.w <- iuv.y

#line 188
  frc r1.zw, r1.xxxy  // r1.z <- fuv.x; r1.w <- fuv.y

#line 190
  add r4.xyzw, r3.zwzw, l(0.500000, 0.500000, 1.500000, 0.500000)
  mul r4.xyzw, r4.xyzw, l(0.003906, 0.003906, 0.003906, 0.003906)

#line 189
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t1.xyzw, s0, l(0.000000)  // r5.x <- ofa.x; r5.y <- ofa.y; r5.z <- ofa.z; r5.w <- ofa.w

#line 190
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.zwzz, t1.xyzw, s0, l(0.000000)  // r4.x <- ofb.x; r4.y <- ofb.y; r4.z <- ofb.z; r4.w <- ofb.w

#line 192
  add r3.xyzw, r3.xyzw, l(0.500000, 1.500000, 1.500000, 1.500000)
  mul r3.xyzw, r3.xyzw, l(0.003906, 0.003906, 0.003906, 0.003906)

#line 191
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r3.xyxx, t1.xyzw, s0, l(0.000000)  // r6.x <- ofc.x; r6.y <- ofc.y; r6.z <- ofc.z; r6.w <- ofc.w

#line 192
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.zwzz, t1.xyzw, s0, l(0.000000)  // r3.x <- ofd.x; r3.y <- ofd.y; r3.z <- ofd.z; r3.w <- ofd.w

#line 193
  deriv_rtx_coarse r7.xy, r1.xyxx  // r7.x <- fddx.x; r7.y <- fddx.y

#line 194
  deriv_rty_coarse r7.zw, r1.xxxy  // r7.z <- fddy.x; r7.w <- fddy.y

#line 195
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  lt r8.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r5.zwzz
  lt r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r5.zw, -r8.xxxy, r5.zzzw
  itof r5.zw, r5.zzzw  // r5.z <- ofa.z; r5.w <- ofa.w

#line 196
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  lt r8.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r4.zwzz
  lt r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r4.zw, -r8.xxxy, r4.zzzw
  itof r4.zw, r4.zzzw  // r4.z <- ofb.z; r4.w <- ofb.w

#line 197
  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  lt r8.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r6.zwzz
  lt r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r6.zw, -r8.xxxy, r6.zzzw
  itof r6.zw, r6.zzzw  // r6.z <- ofc.z; r6.w <- ofc.w

#line 198
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  lt r8.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r3.zwzz
  lt r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r3.zw, -r8.xxxy, r3.zzzw
  itof r3.zw, r3.zzzw  // r3.z <- ofd.z; r3.w <- ofd.w

#line 199
  mad r5.xy, r1.xyxx, r5.zwzz, r5.xyxx  // r5.x <- uva.x; r5.y <- uva.y

#line 200
  mul r8.xy, r5.zwzz, r7.xyxx  // r8.x <- ddxa.x; r8.y <- ddxa.y

#line 201
  mul r5.zw, r5.zzzw, r7.zzzw  // r5.z <- ddya.x; r5.w <- ddya.y

#line 202
  mad r4.xy, r1.xyxx, r4.zwzz, r4.xyxx  // r4.x <- uvb.x; r4.y <- uvb.y

#line 203
  mul r8.zw, r4.zzzw, r7.xxxy  // r8.z <- ddxb.x; r8.w <- ddxb.y

#line 204
  mul r4.zw, r4.zzzw, r7.zzzw  // r4.z <- ddyb.x; r4.w <- ddyb.y

#line 205
  mad r6.xy, r1.xyxx, r6.zwzz, r6.xyxx  // r6.x <- uvc.x; r6.y <- uvc.y

#line 206
  mul r9.xy, r6.zwzz, r7.xyxx  // r9.x <- ddxc.x; r9.y <- ddxc.y

#line 207
  mul r6.zw, r6.zzzw, r7.zzzw  // r6.z <- ddyc.x; r6.w <- ddyc.y

#line 208
  mad r3.xy, r1.xyxx, r3.zwzz, r3.xyxx  // r3.x <- uvd.x; r3.y <- uvd.y

#line 209
  mul r7.xy, r3.zwzz, r7.xyxx  // r7.x <- ddxd.x; r7.y <- ddxd.y

#line 210
  mul r3.zw, r3.zzzw, r7.zzzw  // r3.z <- ddyd.x; r3.w <- ddyd.y

#line 211
  add r1.zw, r1.zzzw, l(0.000000, 0.000000, -0.250000, -0.250000)
  add_sat r1.zw, r1.zzzw, r1.zzzw
  mad r7.zw, r1.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mul r1.zw, r1.zzzw, r1.zzzw
  mul r1.zw, r1.zzzw, r7.zzzw  // r1.z <- b.x; r1.w <- b.y

#line 212
  sample_d_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyxx, t0.xyzw, s0, r8.xyxx, r5.zwzz
  sample_d_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s0, r8.zwzz, r4.zwzz
  add r4.xyzw, -r5.xyzw, r4.xyzw
  mad r4.xyzw, r1.zzzz, r4.xyzw, r5.xyzw
  sample_d_indexable(texture2d)(float,float,float,float) r5.xyzw, r6.xyxx, t0.xyzw, s0, r9.xyxx, r6.zwzz
  sample_d_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t0.xyzw, s0, r7.xyxx, r3.zwzz
  add r3.xyzw, -r5.xyzw, r3.xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, r5.xyzw
  add r3.xyzw, -r4.xyzw, r3.xyzw
  mad r2.xyzw, r1.wwww, r3.xyzw, r4.xyzw  // r2.x <- <textureNoTile0_id70 return value>.x; r2.y <- <textureNoTile0_id70 return value>.y; r2.z <- <textureNoTile0_id70 return value>.z; r2.w <- <textureNoTile0_id70 return value>.w

#line 231
  break 

#line 232
  case l(1)

#line 163
  round_ni r1.zw, r1.xxxy  // r1.z <- p.x; r1.w <- p.y

#line 164
  frc r3.xy, r1.xyxx  // r3.x <- f.x; r3.y <- f.y

#line 165
  deriv_rtx_coarse r3.zw, r1.xxxy  // r3.z <- myddx.x; r3.w <- myddx.y

#line 166
  deriv_rty_coarse r4.xy, r1.xyxx  // r4.x <- myddy.x; r4.y <- myddy.y

#line 170
  mov r5.xyzw, l(0,0,0,0)  // r5.x <- va.x; r5.y <- va.y; r5.z <- va.z; r5.w <- va.w
  mov r4.zw, l(0,0,0,-1)  // r4.z <- wt; r4.w <- j
  loop 
    ilt r6.x, l(1), r4.w
    breakc_nz r6.x

#line 174
    itof r6.y, r4.w  // r6.y <- g.y

#line 172
    mov r7.xyzw, r5.xyzw  // r7.x <- va.x; r7.y <- va.y; r7.z <- va.z; r7.w <- va.w
    mov r6.z, r4.z  // r6.z <- wt
    mov r6.w, l(-1)  // r6.w <- i
    loop 
      ilt r8.x, l(1), r6.w
      breakc_nz r8.x

#line 174
      itof r6.x, r6.w  // r6.x <- g.x

#line 175
      add r8.xy, r1.zwzz, r6.xyxx

#line 146
      dp2 r8.z, r8.xyxx, l(37.000000, 17.000000, 0.000000, 0.000000)
      dp2 r8.w, r8.xyxx, l(11.000000, 47.000000, 0.000000, 0.000000)
      dp2 r9.x, r8.xyxx, l(41.000000, 29.000000, 0.000000, 0.000000)
      add r9.x, r9.x, l(3.000000)
      dp2 r8.x, r8.xyxx, l(23.000000, 31.000000, 0.000000, 0.000000)
      add r8.xzw, r8.xxzw, l(4.000000, 0.000000, 1.000000, 2.000000)
      sincos r10.z, null, r9.x
      sincos r10.xyw, null, r8.zwzx
      mul r8.xyzw, r10.xyzw, l(103.000000, 103.000000, 103.000000, 103.000000)
      frc r8.xyzw, r8.xyzw  // r8.x <- <hash4_id69 return value>.x; r8.y <- <hash4_id69 return value>.y; r8.z <- <hash4_id69 return value>.z; r8.w <- <hash4_id69 return value>.w

#line 176
      add r9.xy, -r3.xyxx, r6.xyxx
      add r8.xy, r8.xyxx, r9.xyxx  // r8.x <- r.x; r8.y <- r.y

#line 177
      dp2 r6.x, r8.xyxx, r8.xyxx  // r6.x <- d

#line 178
      mul r6.x, r6.x, l(-7.213475)
      exp r6.x, r6.x  // r6.x <- w

#line 179
      add r8.xy, r1.xyxx, r8.zwzz
      sample_d_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t0.xyzw, s0, r3.zwzz, r4.xyxx  // r8.x <- c.x; r8.y <- c.y; r8.z <- c.z; r8.w <- c.w

#line 180
      mad r7.xyzw, r6.xxxx, r8.xyzw, r7.xyzw

#line 181
      add r6.z, r6.x, r6.z

#line 182
      iadd r6.w, r6.w, l(1)
    endloop 
    mov r5.xyzw, r7.xyzw  // r5.x <- va.x; r5.y <- va.y; r5.z <- va.z; r5.w <- va.w
    mov r4.z, r6.z  // r4.z <- wt
    iadd r4.w, r4.w, l(1)
  endloop 

#line 183
  div r2.xyzw, r5.xyzw, r4.zzzz  // r2.x <- <textureNoTile1_id71 return value>.x; r2.y <- <textureNoTile1_id71 return value>.y; r2.z <- <textureNoTile1_id71 return value>.z; r2.w <- <textureNoTile1_id71 return value>.w

#line 234
  break 

#line 235
  case l(2)

#line 150
  mul r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.005000, 0.005000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.yzxw, s0, l(0.000000)  // r1.z <- k

#line 151
  mul r1.z, r1.z, l(8.000000)  // r1.z <- index

#line 152
  round_ni r1.w, r1.z  // r1.w <- i

#line 153
  frc r1.z, r1.z  // r1.z <- f

#line 154
  mul r3.xy, r1.wwww, l(3.000000, 7.000000, 0.000000, 0.000000)

#line 155
  add r1.w, r1.w, l(1.000000)
  mul r3.zw, r1.wwww, l(0.000000, 0.000000, 3.000000, 7.000000)

#line 154
  sincos r3.xyzw, null, r3.xyzw  // r3.x <- offa.x; r3.y <- offa.y; r3.z <- offb.x; r3.w <- offb.y

#line 156
  deriv_rtx_coarse r4.xy, r1.xyxx  // r4.x <- dx.x; r4.y <- dx.y
  deriv_rty_coarse r4.zw, r1.xxxy  // r4.z <- dy.x; r4.w <- dy.y

#line 157
  add r3.xy, r1.xyxx, r3.xyxx
  sample_d_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.xyxx, t0.xyzw, s0, r4.xyxx, r4.zwzz  // r5.x <- cola.x; r5.y <- cola.y; r5.z <- cola.z; r5.w <- cola.w

#line 158
  add r1.xy, r1.xyxx, r3.zwzz
  sample_d_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyxx, t0.xyzw, s0, r4.xyxx, r4.zwzz  // r3.x <- colb.x; r3.y <- colb.y; r3.z <- colb.z; r3.w <- colb.w

#line 159
  add r1.xyw, -r3.xyxz, r5.xyxz

#line 142
  add r1.x, r1.y, r1.x
  add r1.x, r1.w, r1.x  // r1.x <- <sum_id72 return value>

#line 159
  mad r1.x, -r1.x, l(0.100000), r1.z
  add r1.x, r1.x, l(-0.200000)
  mul_sat r1.x, r1.x, l(1.666667)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mul r1.x, r1.x, r1.y
  add r3.xyzw, -r5.xyzw, r3.xyzw
  mad r2.xyzw, r1.xxxx, r3.xyzw, r5.xyzw  // r2.x <- <textureNoTile2_id73 return value>.x; r2.y <- <textureNoTile2_id73 return value>.y; r2.z <- <textureNoTile2_id73 return value>.z; r2.w <- <textureNoTile2_id73 return value>.w

#line 237
  break 

#line 238
  default 
  break 
endswitch   // r2.x <- col.x; r2.y <- col.y; r2.z <- col.z; r2.w <- col.w

#line 248
add r1.xyzw, -r0.xyzw, r2.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 257
ret 
// Approximately 148 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id96;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int type_id94;
    float4x4 tTex_id95;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float sum_id72(float3 v)
{
    return v.x + v.y + v.z;
}
float4 hash4_id69(float2 p)
{
    return frac(sin(float4(1.0 + dot(p, float2(37.0, 17.0)), 2.0 + dot(p, float2(11.0, 47.0)), 3.0 + dot(p, float2(41.0, 29.0)), 4.0 + dot(p, float2(23.0, 31.0)))) * 103.0);
}
float4 textureNoTile2_id73(in float2 uv)
{
    float k = Texture1_id16.SampleLevel(LinearRepeatSampler_id50, 0.005 * uv, 0).x;
    float index = k * 8.0;
    float i = floor(index);
    float f = frac(index);
    float2 offa = sin(float2(3.0, 7.0) * (i + 0.0));
    float2 offb = sin(float2(3.0, 7.0) * (i + 1.0));
    float2 dx = ddx(uv), dy = ddy(uv);
    float4 cola = Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uv + offa, dx, dy);
    float4 colb = Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uv + offb, dx, dy);
    return lerp(cola, colb, smoothstep(0.2, 0.8, f - 0.1 * sum_id72(cola - colb)));
}
float4 textureNoTile1_id71(in float2 uv)
{
    float2 p = floor(uv);
    float2 f = frac(uv);
    float2 myddx = ddx(uv);
    float2 myddy = ddy(uv);
    float4 va = 0.0;
    float wt = 0.0;

    for (int j = -1; j <= 1; j++)

        for (int i = -1; i <= 1; i++)
        {
            float2 g = float2(float(i), float(j));
            float4 o = hash4_id69(p + g);
            float2 r = g - f + o.xy;
            float d = dot(r, r);
            float w = exp(-5.0 * d);
            float4 c = Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uv + o.zw, myddx, myddy);
            va += w * c;
            wt += w;
        }
    return va / wt;
}
float4 textureNoTile0_id70(in float2 uv)
{
    float2 iuv = floor(uv);
    float2 fuv = frac(uv);
    float4 ofa = Texture1_id16.SampleLevel(LinearRepeatSampler_id50, (iuv + float2(0.5, 0.5)) / 256.0, 0);
    float4 ofb = Texture1_id16.SampleLevel(LinearRepeatSampler_id50, (iuv + float2(1.5, 0.5)) / 256.0, 0);
    float4 ofc = Texture1_id16.SampleLevel(LinearRepeatSampler_id50, (iuv + float2(0.5, 1.5)) / 256.0, 0);
    float4 ofd = Texture1_id16.SampleLevel(LinearRepeatSampler_id50, (iuv + float2(1.5, 1.5)) / 256.0, 0);
    float2 fddx = ddx(uv);
    float2 fddy = ddy(uv);
    ofa.zw = sign(ofa.zw - 0.5);
    ofb.zw = sign(ofb.zw - 0.5);
    ofc.zw = sign(ofc.zw - 0.5);
    ofd.zw = sign(ofd.zw - 0.5);
    float2 uva = uv * ofa.zw + ofa.xy;
    float2 ddxa = fddx * ofa.zw;
    float2 ddya = fddy * ofa.zw;
    float2 uvb = uv * ofb.zw + ofb.xy;
    float2 ddxb = fddx * ofb.zw;
    float2 ddyb = fddy * ofb.zw;
    float2 uvc = uv * ofc.zw + ofc.xy;
    float2 ddxc = fddx * ofc.zw;
    float2 ddyc = fddy * ofc.zw;
    float2 uvd = uv * ofd.zw + ofd.xy;
    float2 ddxd = fddx * ofd.zw;
    float2 ddyd = fddy * ofd.zw;
    float2 b = smoothstep(0.25, 0.75, fuv);
    return lerp(lerp(Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uva, ddxa, ddya), Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uvb, ddxb, ddyb), b.x), lerp(Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uvc, ddxc, ddyc), Texture0_id14.SampleGrad(LinearRepeatSampler_id50, uvd, ddxd, ddyd), b.x), b.y);
}
float2 TransformUV_id60(float2 uv, float4x4 transform)
{
    return mul(float4((uv.xy * 2 - 1) * float2(1, -1) * 0.5, 0, 1), transform).xy * float2(1, -1) + 0.5;
}
float4 Compute_id75()
{
    return InputValue_id96;
}
float4 Filter_id74(inout PS_STREAMS streams, float4 tex0col)
{
    float2 uv = TransformUV_id60(streams.TexCoord_id62, tTex_id95);
    float4 col;
    switch (type_id94)

    {
        case 0:
            col = textureNoTile0_id70(uv);
            break;
        case 1:
            col = textureNoTile1_id71(uv);
            break;
        case 2:
            col = textureNoTile2_id73(uv);
            break;
    }
    return col;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id74(streams, col), Compute_id75());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
