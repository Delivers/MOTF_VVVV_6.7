/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Dither_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {DitherXY = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {Threshold = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P Threshold: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P DitherXY: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 32]
@C    InputValue_id92 => ShaderFX.InputValueFloat4
@C    InputValue_id93 => ShaderFX.InputValueFloat2
@C    InputValue_id94 => ShaderFX.InputValueFloat
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Type_id91 => Dither_Internal_TextureFX.Type
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (2-2)]
***************************
*****     Sources     *****
***************************
@S    Dither_Internal_TextureFX => 87686c7beedd5b95a157d7eb7dbe52eb
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 254 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_42cb50e0a93084bd5976771f6a6eccb2.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 258
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 3269d6dee70607f793f4f3376b529829
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id92;            // Offset:    0 Size:    16
//   float2 InputValue_id93;            // Offset:   16 Size:     8
//   float InputValue_id94;             // Offset:   24 Size:     4
//
// }
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8 [unused]
//   float2 ViewSize_id77;              // Offset:   16 Size:     8
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int Type_id91;                     // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler0_id52                     sampler      NA          NA             s0      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
// Globals                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[2], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 233 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_42cb50e0a93084bd5976771f6a6eccb2.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 219
switch cb2[5].x

#line 222
  case l(0)

#line 195
  mul r2.xy, v1.yxyy, cb1[1].yxyy
  mul r2.zw, r2.xxxy, cb0[1].yyyx
  ge r2.zw, r2.zzzw, -r2.zzzw
  movc r2.zw, r2.zzzw, cb0[1].yyyx, -cb0[1].yyyx
  div r3.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r2.zwzz
  mul r2.xy, r2.xyxx, r3.xyxx
  frc r2.xy, r2.xyxx
  mul r2.xy, r2.xyxx, r2.zwzz
  ftoi r2.xy, r2.xyxx  // r2.y <- x; r2.x <- y

#line 150
  mul r1.w, cb0[1].z, l(10.000000)  // r1.w <- a

#line 151
  ilt r2.z, r2.y, l(4)
  if_nz r2.z

#line 153
    ige r2.w, r2.x, l(4)
    if_nz r2.w

#line 155
      iadd r2.w, r2.x, l(-4)
      dp4 r3.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r3.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r3.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r3.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r2.w, r3.xyzw, icb[r2.w + 0].xyzw
      add r2.w, r2.w, l(3.000000)
      div r2.w, r2.w, r1.w  // r2.w <- limit

#line 156
    else 

#line 159
      dp4 r3.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r3.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r3.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r3.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r3.x, r3.xyzw, icb[r2.x + 0].xyzw
      div r2.w, r3.x, r1.w  // r2.w <- limit

#line 160
    endif 

#line 161
  else 
    mov r2.w, l(0)  // r2.w <- limit
  endif 

#line 162
  ige r3.x, r2.y, l(4)
  if_nz r3.x

#line 164
    ige r3.y, r2.x, l(4)
    if_nz r3.y

#line 166
      iadd r3.yz, r2.xxyx, l(0, -4, -4, 0)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r3.z + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r3.z + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r3.z + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r3.z + 0].xyzw
      dp4 r3.y, r4.xyzw, icb[r3.y + 0].xyzw
      div r2.w, r3.y, r1.w

#line 167
    else 

#line 170
      iadd r3.y, r2.y, l(-4)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r3.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r3.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r3.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r3.y + 0].xyzw
      dp4 r3.y, r4.xyzw, icb[r2.x + 0].xyzw
      div r2.w, r3.y, r1.w

#line 171
    endif 

#line 172
  endif 

#line 173
  lt r2.w, r0.x, r2.w

#line 180
  movc r1.x, r2.w, l(0), l(1.000000)  // r1.x <- <FindClosest_id29 return value>

#line 151
  if_nz r2.z

#line 153
    ige r2.w, r2.x, l(4)
    if_nz r2.w

#line 155
      iadd r2.w, r2.x, l(-4)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r2.w, r4.xyzw, icb[r2.w + 0].xyzw
      add r2.w, r2.w, l(3.000000)
      div r2.w, r2.w, r1.w  // r2.w <- limit

#line 156
    else 

#line 159
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r3.y, r4.xyzw, icb[r2.x + 0].xyzw
      div r2.w, r3.y, r1.w  // r2.w <- limit

#line 160
    endif 

#line 161
  else 
    mov r2.w, l(0)  // r2.w <- limit
  endif 

#line 162
  if_nz r3.x

#line 164
    ige r3.y, r2.x, l(4)
    if_nz r3.y

#line 166
      iadd r3.yz, r2.xxyx, l(0, -4, -4, 0)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r3.z + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r3.z + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r3.z + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r3.z + 0].xyzw
      dp4 r3.y, r4.xyzw, icb[r3.y + 0].xyzw
      div r2.w, r3.y, r1.w

#line 167
    else 

#line 170
      iadd r3.y, r2.y, l(-4)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r3.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r3.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r3.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r3.y + 0].xyzw
      dp4 r3.y, r4.xyzw, icb[r2.x + 0].xyzw
      div r2.w, r3.y, r1.w

#line 171
    endif 

#line 172
  endif 

#line 173
  lt r2.w, r0.y, r2.w

#line 180
  movc r1.y, r2.w, l(0), l(1.000000)  // r1.y <- <FindClosest_id29 return value>

#line 151
  if_nz r2.z

#line 153
    ige r2.z, r2.x, l(4)
    if_nz r2.z

#line 155
      iadd r2.z, r2.x, l(-4)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r2.z, r4.xyzw, icb[r2.z + 0].xyzw
      add r2.z, r2.z, l(3.000000)
      div r2.z, r2.z, r1.w  // r2.z <- limit

#line 156
    else 

#line 159
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r2.w, r4.xyzw, icb[r2.x + 0].xyzw
      div r2.z, r2.w, r1.w  // r2.z <- limit

#line 160
    endif 

#line 161
  else 
    mov r2.z, l(0)  // r2.z <- limit
  endif 

#line 162
  if_nz r3.x

#line 164
    ige r2.w, r2.x, l(4)
    if_nz r2.w

#line 166
      iadd r3.xy, r2.xyxx, l(-4, -4, 0, 0)
      dp4 r4.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r3.y + 0].xyzw
      dp4 r4.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r3.y + 0].xyzw
      dp4 r4.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r3.y + 0].xyzw
      dp4 r4.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r3.y + 0].xyzw
      dp4 r2.w, r4.xyzw, icb[r3.x + 0].xyzw
      div r2.z, r2.w, r1.w

#line 167
    else 

#line 170
      iadd r2.y, r2.y, l(-4)
      dp4 r3.x, l(1.000000, 49.000000, 13.000000, 61.000000), icb[r2.y + 0].xyzw
      dp4 r3.y, l(33.000000, 17.000000, 45.000000, 29.000000), icb[r2.y + 0].xyzw
      dp4 r3.z, l(9.000000, 57.000000, 5.000000, 53.000000), icb[r2.y + 0].xyzw
      dp4 r3.w, l(41.000000, 25.000000, 37.000000, 21.000000), icb[r2.y + 0].xyzw
      dp4 r2.x, r3.xyzw, icb[r2.x + 0].xyzw
      div r2.z, r2.x, r1.w

#line 171
    endif 

#line 172
  endif 

#line 173
  lt r1.w, r0.z, r2.z

#line 180
  movc r1.z, r1.w, l(0), l(1.000000)  // r1.z <- <FindClosest_id29 return value>

#line 224
  break 

#line 225
  case l(1)

#line 216
  resinfo_indexable(texture2d)(float,float,float,float) r2.xy, l(0), t0.xyzw  // r2.x <- SizeXY.x; r2.y <- SizeXY.y

#line 217
  mul r2.xy, r2.xyxx, v1.xyxx
  mul r2.xy, r2.xyxx, cb0[1].xyxx
  ftoi r2.xy, r2.xyxx  // r2.x <- scp.x; r2.y <- scp.y

#line 185
  and r2.zw, r2.xxxy, l(0, 0, 0x80000000, 0x80000000)
  imax r2.xy, r2.xyxx, -r2.xyxx
  and r2.xy, r2.xyxx, l(3, 3, 0, 0)
  ineg r3.xy, r2.xyxx
  movc r2.xy, r2.zwzz, r3.xyxx, r2.xyxx
  ineg r2.zw, r2.xxxy
  ult r3.xyzw, r2.yxxx, l(1, 1, 2, 3)
  and r4.y, r2.z, r3.z
  iadd r2.xz, r2.xxyx, l(-3, 0, -3, 0)
  movc r4.z, r3.z, l(0), r2.x
  ieq r4.w, r3.w, l(0)
  mov r4.x, r3.y
  and r5.xyzw, r4.xyzw, l(0, 12, 3, 15)
  or r5.xy, r5.ywyy, r5.xzxx
  or r5.x, r5.y, r5.x
  and r6.xyzw, r4.xyzw, l(8, 4, 11, 7)
  or r6.xy, r6.ywyy, r6.xzxx
  or r5.y, r6.y, r6.x
  and r6.xyzw, r4.xyzw, l(2, 14, 1, 13)
  or r6.xy, r6.ywyy, r6.xzxx
  or r5.z, r6.y, r6.x
  and r4.xyzw, r4.xyzw, l(10, 6, 9, 5)
  or r4.xy, r4.ywyy, r4.xzxx
  or r5.w, r4.y, r4.x
  ult r2.xy, r2.yyyy, l(2, 3, 0, 0)
  and r3.y, r2.w, r2.x
  movc r3.z, r2.x, l(0), r2.z
  ieq r3.w, r2.y, l(0)
  and r2.xyzw, r3.xyzw, r5.xyzw
  or r2.xy, r2.ywyy, r2.xzxx
  or r1.w, r2.y, r2.x  // r1.w <- dither

#line 186
  itof r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(-4.000000)
  div r1.w, r1.w, cb0[1].z
  mul r1.w, r1.w, l(10.000000)
  mad r2.xyz, r0.xyzx, l(255.000000, 255.000000, 255.000000, 0.000000), r1.wwww  // r2.x <- col.x; r2.y <- col.y; r2.z <- col.z

#line 187
  ftou r3.xyz, r2.xyzx
  and r3.xyz, r3.xyzx, l(248, 248, 248, 0)
  utof r3.xyz, r3.xyzx
  ge r2.xyz, r2.xyzx, l(248.000000, 248.000000, 248.000000, 0.000000)
  and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, -r3.xyzx, l(248.000000, 248.000000, 248.000000, 0.000000)
  mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx  // r2.x <- col.x; r2.y <- col.y; r2.z <- col.z

#line 188
  mul r1.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)  // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z

#line 227
  break 

#line 228
  default 
  break 
endswitch   // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z

#line 238
add r1.xyz, -r0.xyzx, r1.xyzx
mov r1.w, l(0)
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 247
ret 
// Approximately 205 instruction slots used
***************************
*************************/
static const int4x4 psx_dither_table_id89 = float4x4(0, 8, 2, 10, 12, 4, 14, 6, 3, 11, 1, 9, 15, 7, 13, 5);
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id92;
    float2 InputValue_id93;
    float InputValue_id94;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int Type_id91;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float Compute_id34()
{
    return InputValue_id94;
}
float FindClosest_id29(int x, int y, float c0)
{
    float4x4 dither = float4x4(1.0, 33.0, 9.0, 41.0, 49.0, 17.0, 57.0, 25.0, 13.0, 45.0, 5.0, 37.0, 61.0, 29.0, 53.0, 21.0);
    float limit = 0.0;
    float a = Compute_id34() * 10;
    if (x < 4)
    {
        if (y >= 4)
        {
            limit = (dither[x][y - 4] + 3.0) / a;
        }
        else
        {
            limit = (dither[x][y]) / a;
        }
    }
    if (x >= 4)
    {
        if (y >= 4)
        {
            limit = (dither[x - 4][y - 4] + 0.0) / a;
        }
        else
        {
            limit = (dither[x - 4][y] + 0.0) / a;
        }
    }
    if (c0 < limit)
    {
        return 0.0;
    }
    else
    {
        return 1.0;
    }
}
float3 DitherCrunch_id31(float3 col, int2 p)
{
    col *= 255.0;
    int dither = psx_dither_table_id89[p.x % 4][p.y % 4];
    col += (dither / 2.0 - 4.0) / Compute_id34() * 10;
    col = lerp((uint3(col) & 0xf8), 0xf8, step(0xf8, col));
    col /= 255;
    return col;
}
float4 Bayer_id30(inout PS_STREAMS streams, float4 col, float2 ditherXY)
{
    float2 uv = streams.TexCoord_id62;
    int x = int((uv.x * ViewSize_id77.x) % ditherXY.x);
    int y = int((uv.y * ViewSize_id77.y) % ditherXY.y);
    float4 finalCol;
    finalCol.r = FindClosest_id29(x, y, col.r);
    finalCol.g = FindClosest_id29(x, y, col.g);
    finalCol.b = FindClosest_id29(x, y, col.b);
    finalCol.a = col.a;
    return finalCol;
}
float2 Compute_id35()
{
    return InputValue_id93;
}
float4 Compute_id33()
{
    return InputValue_id92;
}
float4 Filter_id32(inout PS_STREAMS streams, float4 tex0col)
{
    float2 ditherXY = Compute_id35();
    float3 col;
    float2 SizeXY;
    Texture0_id14.GetDimensions(SizeXY.x, SizeXY.y);
    int2 scp = int2(streams.TexCoord_id62 * SizeXY * ditherXY);
    float threshold = Compute_id34();
    switch (Type_id91)

    {
        case 0:
            col = Bayer_id30(streams, tex0col, ditherXY).xyz;
            break;
        case 1:
            col = DitherCrunch_id31(tex0col.xyz, scp);
            break;
    }
    return float4(col, tex0col.a);
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id32(streams, col), Compute_id33());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
