/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:8 Y:8 Z:8
@P EffectNodeBase.EffectNodeBaseShader: mixin ComputeFXGraph [{Root = mixin ComputeOrder [{Computes = [Shader_2103977367]}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDispatch [Size: 48]
@C    ThreadGroupCountGlobal_id10 => ComputeShaderBase.ThreadGroupCountGlobal
@C    input_4027469542_id16 => input_4027469542
@C    input_856423807_id17 => input_856423807
@C    input_2082529403_id18 => input_2082529403
***************************
******  Resources    ******
***************************
@R    TextureInput_2990988801_id13 => TextureInput_2990988801 [Stage: Compute, Slot: (0-0)]
@R    TextureInput_3445202295_id14 => TextureInput_3445202295 [Stage: Compute, Slot: (1-1)]
@R    TextureInput_1640326676_id15 => TextureInput_1640326676 [Stage: Compute, Slot: (0-0)]
@R    PerDispatch => PerDispatch [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    ComputeFXGraph => dca3deb94a1ea6d5babe444153dee98b
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    Shader_2103977367 => 1f7afc8975eb6af5a68e0c71fa291989
***************************
*****     Stages      *****
***************************
@G    Compute => 4378cfef6bc04ddc720459207b95b0b5
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDispatch
// {
//
//   int3 ThreadGroupCountGlobal_id10;  // Offset:    0 Size:    12 [unused]
//   int3 input_4027469542_id16;        // Offset:   16 Size:    12
//   float input_856423807_id17;        // Offset:   28 Size:     4 [unused]
//   float3 input_2082529403_id18;      // Offset:   32 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TextureInput_2990988801_id13      texture   float          3d             t0      1 
// TextureInput_3445202295_id14      texture  float4          3d             t1      1 
// TextureInput_1640326676_id15          UAV   float          3d             u0      1 
// PerDispatch                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 2
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 38 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_737e0a98c81a239e00469e545a4ba849.hlsl"
ige r0.xyz, vThreadID.xyzx, cb0[1].xyzx  // r0.x <- Assign_2669607774; r0.y <- Assign_2401786989; r0.z <- Assign_3128971616

#line 39
or r0.x, r0.y, r0.x
or r0.x, r0.z, r0.x  // r0.x <- result_2293831901

#line 44
if_z r0.x

#line 53
  iadd r0.xyz, vThreadID.xyzx, l(1, 0, 0, 0)  // r0.x <- result_836345151.x; r0.y <- result_836345151.y; r0.z <- result_836345151.z

#line 54
  mov r0.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.x, r0.xyzw, t0.xyzw  // r1.x <- getTextureValue_4156594151

#line 55
  lt r1.x, l(0.000000), r1.x  // r1.x <- Assign_55348088

#line 57
  ld_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzw, t1.xyzw  // r0.x <- getTextureValue_669467437.x

#line 62
  movc r0.x, r1.x, l(0), r0.x  // r0.x <- output_4237215759.x

#line 64
  iadd r1.xyz, vThreadID.xyzx, l(-1, 0, 0, 0)  // r1.x <- result_1326157520.x; r1.y <- result_1326157520.y; r1.z <- result_1326157520.z

#line 65
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw  // r0.y <- getTextureValue_2987795512

#line 66
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_829105525

#line 68
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t1.yzxw  // r0.z <- getTextureValue_2925370466.x

#line 75
  movc r0.y, r0.y, l(-0.000000), -r0.z
  add r0.x, r0.y, r0.x  // r0.x <- result_1880526855

#line 76
  iadd r1.xyz, vThreadID.xyzx, l(0, 1, 0, 0)  // r1.x <- result_149097581.x; r1.y <- result_149097581.y; r1.z <- result_149097581.z

#line 77
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw  // r0.y <- getTextureValue_4165280193

#line 78
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_2340669734

#line 80
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t1.xzyw  // r0.z <- getTextureValue_534270663.y

#line 85
  movc r0.y, r0.y, l(0), r0.z  // r0.y <- output_2877969831.y

#line 87
  iadd r1.xyz, vThreadID.xyzx, l(0, -1, 0, 0)  // r1.x <- result_2648307878.x; r1.y <- result_2648307878.y; r1.z <- result_2648307878.z

#line 88
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t0.yzxw  // r0.z <- getTextureValue_2752127518

#line 89
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_1906165024

#line 91
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t1.xzwy  // r0.w <- getTextureValue_2964331640.y

#line 98
  movc r0.z, r0.z, l(-0.000000), -r0.w
  add r0.y, r0.z, r0.y  // r0.y <- result_1286027384

#line 99
  iadd r1.xyz, vThreadID.xyzx, l(0, 0, 1, 0)  // r1.x <- result_2129966457.x; r1.y <- result_2129966457.y; r1.z <- result_2129966457.z

#line 100
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t0.yzxw  // r0.z <- getTextureValue_59711117

#line 101
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_1708306771

#line 103
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t1.xywz  // r0.w <- getTextureValue_2626944843.z

#line 108
  movc r0.z, r0.z, l(0), r0.w  // r0.z <- output_1216224000.z

#line 110
  iadd r1.xyz, vThreadID.xyzx, l(0, 0, -1, 0)  // r1.x <- result_3106682510.x; r1.y <- result_3106682510.y; r1.z <- result_3106682510.z

#line 111
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t0.yzwx  // r0.w <- getTextureValue_1227159670

#line 112
  lt r0.w, l(0.000000), r0.w  // r0.w <- Assign_2386130607

#line 114
  ld_indexable(texture3d)(float,float,float,float) r1.x, r1.xyzw, t1.zxyw  // r1.x <- getTextureValue_2954352612.z

#line 121
  movc r0.w, r0.w, l(-0.000000), -r1.x
  add r0.xz, r0.yywy, r0.xxzx  // r0.z <- result_3704685372

#line 122
  add r0.x, r0.z, r0.x  // r0.x <- result_2124251924

#line 123
  mul r0.x, r0.x, l(0.500000)  // r0.x <- result_3299392860

#line 125
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xxxx
endif 

#line 151
ret 
// Approximately 48 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
    int3 input_4027469542_id16;
    float input_856423807_id17;
    float3 input_2082529403_id18;
};
Texture3D<float> TextureInput_3602538457_id12;
Texture3D<float> TextureInput_2990988801_id13;
Texture3D<float4> TextureInput_3445202295_id14;
RWTexture3D<float> TextureInput_1640326676_id15;
void Compute_id4(inout CS_STREAMS streams)
{
    int DispatchThreadIdX_1705848389 = streams.DispatchThreadId_id1.x;
    int inputX_3964728810 = input_4027469542_id16.x;
    bool Assign_2669607774 = DispatchThreadIdX_1705848389 >= inputX_3964728810;
    int DispatchThreadIdY_1152064971 = streams.DispatchThreadId_id1.y;
    int inputY_3132258850 = input_4027469542_id16.y;
    bool Assign_2401786989 = DispatchThreadIdY_1152064971 >= inputY_3132258850;
    int DispatchThreadIdZ_1595855846 = streams.DispatchThreadId_id1.z;
    int inputZ_47154949 = input_4027469542_id16.z;
    bool Assign_3128971616 = DispatchThreadIdZ_1595855846 >= inputZ_47154949;
    bool result_2293831901 = (Assign_2669607774 || Assign_2401786989 || Assign_3128971616);
    if (result_2293831901)
    {
        return;
    }
    float divergence_2773640457 = TextureInput_3602538457_id12[streams.DispatchThreadId_id1];
    float obstacle_3039937939 = TextureInput_2990988801_id13[streams.DispatchThreadId_id1];
    float4 velocity_103807989 = TextureInput_3445202295_id14[streams.DispatchThreadId_id1];
    float deltatime_232734638 = 0;
    deltatime_232734638 = input_856423807_id17;
    int3 index_4194632681 = int3(0, 0, 0);
    index_4194632681 = streams.DispatchThreadId_id1;
    float3 resourcescale_153526072 = float3(0, 0, 0);
    resourcescale_153526072 = input_2082529403_id18;
    int3 result_836345151 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_4156594151 = TextureInput_2990988801_id13[result_836345151];
    bool Assign_55348088 = getTextureValue_4156594151 > 0;
    int3 result_746937425 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float4 getTextureValue_669467437 = TextureInput_3445202295_id14[result_746937425];
    float4 output_4237215759 = getTextureValue_669467437;
    if (Assign_55348088)
    {
        output_4237215759 = float4(0, 0, 0, 0);
    }
    float AddOutputX_833364022 = output_4237215759.x;
    int3 result_1326157520 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_2987795512 = TextureInput_2990988801_id13[result_1326157520];
    bool Assign_829105525 = getTextureValue_2987795512 > 0;
    int3 result_2886213582 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float4 getTextureValue_2925370466 = TextureInput_3445202295_id14[result_2886213582];
    float4 output_72840420 = getTextureValue_2925370466;
    if (Assign_829105525)
    {
        output_72840420 = float4(0, 0, 0, 0);
    }
    float AddOutputX_3543794981 = output_72840420.x;
    float result_1880526855 = (AddOutputX_833364022 - AddOutputX_3543794981);
    int3 result_149097581 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_4165280193 = TextureInput_2990988801_id13[result_149097581];
    bool Assign_2340669734 = getTextureValue_4165280193 > 0;
    int3 result_1445872191 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float4 getTextureValue_534270663 = TextureInput_3445202295_id14[result_1445872191];
    float4 output_2877969831 = getTextureValue_534270663;
    if (Assign_2340669734)
    {
        output_2877969831 = float4(0, 0, 0, 0);
    }
    float AddOutputY_2610530003 = output_2877969831.y;
    int3 result_2648307878 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_2752127518 = TextureInput_2990988801_id13[result_2648307878];
    bool Assign_1906165024 = getTextureValue_2752127518 > 0;
    int3 result_2152904948 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float4 getTextureValue_2964331640 = TextureInput_3445202295_id14[result_2152904948];
    float4 output_2842848981 = getTextureValue_2964331640;
    if (Assign_1906165024)
    {
        output_2842848981 = float4(0, 0, 0, 0);
    }
    float AddOutputY_470248773 = output_2842848981.y;
    float result_1286027384 = (AddOutputY_2610530003 - AddOutputY_470248773);
    int3 result_2129966457 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_59711117 = TextureInput_2990988801_id13[result_2129966457];
    bool Assign_1708306771 = getTextureValue_59711117 > 0;
    int3 result_2601411427 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float4 getTextureValue_2626944843 = TextureInput_3445202295_id14[result_2601411427];
    float4 output_1216224000 = getTextureValue_2626944843;
    if (Assign_1708306771)
    {
        output_1216224000 = float4(0, 0, 0, 0);
    }
    float AddOutputZ_3193131734 = output_1216224000.z;
    int3 result_3106682510 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_1227159670 = TextureInput_2990988801_id13[result_3106682510];
    bool Assign_2386130607 = getTextureValue_1227159670 > 0;
    int3 result_2741708488 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float4 getTextureValue_2954352612 = TextureInput_3445202295_id14[result_2741708488];
    float4 output_2492409394 = getTextureValue_2954352612;
    if (Assign_2386130607)
    {
        output_2492409394 = float4(0, 0, 0, 0);
    }
    float AddOutputZ_2022807027 = output_2492409394.z;
    float result_3704685372 = (AddOutputZ_3193131734 - AddOutputZ_2022807027);
    float result_2124251924 = (result_1880526855 + result_1286027384 + result_3704685372);
    float result_3299392860 = (result_2124251924 * 0.5);
    divergence_2773640457 = result_3299392860;
    TextureInput_1640326676_id15[streams.DispatchThreadId_id1] = divergence_2773640457;
}
void Compute_id3(inout CS_STREAMS streams)
{

    {
        Compute_id4(streams);
    }
}
void Compute_id2(inout CS_STREAMS streams)
{
    Compute_id3(streams);
}
[numthreads(8, 8, 8)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 8;
    streams.ThreadCountY_id8 = 8;
    streams.ThreadCountZ_id9 = 8;
    streams.ThreadCountPerGroup_id5 = 8 * 8 * 8;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id2(streams);
}
