/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin AdaptiveSharpenPass1_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 16]
@C    InputValue_id91 => ShaderFX.InputValueFloat4
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    p1_id88 => AdaptiveSharpenPass1_Internal_TextureFX.p1
@C    curve_height_id89 => AdaptiveSharpenPass1_Internal_TextureFX.curve_height
@C    a_offset_id90 => AdaptiveSharpenPass1_Internal_TextureFX.a_offset
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    AdaptiveSharpenPass1_Internal_TextureFX => d75d627c6eefc02e9da7e668e5e3686f
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 246 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_ff2196ea6ce28d94a7c5d37621a5fbe7.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 250
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => f61561cd80c635cc1c31c5efdc46ff91
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id91;            // Offset:    0 Size:    16
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float2 p1_id88;                    // Offset:   80 Size:     8
//   float curve_height_id89;           // Offset:   88 Size:     4
//      = 0x3f800000 
//   float a_offset_id90;               // Offset:   92 Size:     4
//      = 0x40000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 28
dcl_indexableTemp x0[25], 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 225 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_ff2196ea6ce28d94a7c5d37621a5fbe7.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 147
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- orig.x; r1.y <- orig.y; r1.z <- orig.z; r1.w <- orig.w

#line 148
add r2.x, r1.w, -cb1[5].w  // r2.x <- c_edge

#line 151
lt r2.y, l(24.000000), r2.x
lt r2.z, r2.x, l(-0.500000)
or r2.y, r2.z, r2.y

#line 156
if_z r2.y
  mov_sat r1.xyz, r1.xyzx
  mad r3.xyzw, cb1[5].xyxy, l(-0.001000, -0.001000, 0.001000, 0.001000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
  mad r5.xyzw, cb1[5].xyxy, l(0.000000, -0.001000, 0.001000, -0.001000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.zwzz, t0.xyzw, s0, l(0.000000)
  mad r7.xyzw, cb1[5].xyxy, l(-0.001000, 0.000000, 0.001000, 0.000000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r7.zwzz, t0.xyzw, s0, l(0.000000)
  mad r9.xyzw, cb1[5].xyxy, l(-0.001000, 0.001000, 0.000000, 0.001000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r9.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.zwzz, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.zwzz, t0.xyzw, s0, l(0.000000)
  mad r11.xyzw, cb1[5].xyxy, l(0.000000, -0.002000, -0.002000, 0.000000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r11.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r11.zwzz, t0.xyzw, s0, l(0.000000)
  mad r13.xyzw, cb1[5].xyxy, l(0.002000, 0.000000, 0.000000, 0.002000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r13.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.zwzz, t0.xyzw, s0, l(0.000000)
  mad r15.xyzw, cb1[5].xyxy, l(0.000000, 0.003000, 0.001000, 0.002000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r16.xyzw, r15.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r15.zwzz, t0.xyzw, s0, l(0.000000)
  mad r17.xyzw, cb1[5].xyxy, l(-0.001000, 0.002000, 0.003000, 0.000000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r18.xyzw, r17.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r17.xyzw, r17.zwzz, t0.xyzw, s0, l(0.000000)
  mad r19.xyzw, cb1[5].xyxy, l(0.002000, 0.001000, 0.002000, -0.001000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r20.xyzw, r19.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.zwzz, t0.xyzw, s0, l(0.000000)
  mad r21.xyzw, cb1[5].xyxy, l(-0.003000, 0.000000, -0.002000, 0.001000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r22.xyzw, r21.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r21.xyzw, r21.zwzz, t0.xyzw, s0, l(0.000000)
  mad r23.xyzw, cb1[5].xyxy, l(-0.002000, -0.001000, 0.000000, -0.003000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r24.xyzw, r23.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r23.xyzw, r23.zwzz, t0.xyzw, s0, l(0.000000)
  mad r25.xyzw, cb1[5].xyxy, l(0.001000, -0.002000, -0.001000, -0.002000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r26.xyzw, r25.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r25.xyzw, r25.zwzz, t0.xyzw, s0, l(0.000000)

#line 157
  max r2.y, r4.w, r6.w
  max r2.z, r5.w, r8.w
  max r2.y, r2.z, r2.y
  max r2.z, r7.w, r10.w
  max r2.w, r3.w, r9.w
  max r2.z, r2.w, r2.z
  max r2.y, r2.z, r2.y
  max r2.z, r11.w, r12.w
  max r2.w, r13.w, r14.w
  max r2.z, r2.w, r2.z
  max r1.w, r1.w, r2.z
  max r1.w, r1.w, r2.y
  add r1.w, r1.w, -cb1[5].w  // r1.w <- maxedge

#line 158
  add r2.y, r6.w, r12.w
  add r2.y, r23.w, r2.y

#line 185
  mul r2.z, cb1[5].z, l(0.500000)

#line 158
  mad r2.y, -cb1[5].w, l(3.000000), r2.y
  add r2.y, r2.y, l(0.056000)
  add r1.w, |r1.w|, l(0.030000)
  div r2.y, r2.y, r1.w
  add r2.w, r9.w, r13.w
  add r2.w, r16.w, r2.w
  mad r2.w, -cb1[5].w, l(3.000000), r2.w
  add r2.w, r2.w, l(0.056000)
  div r2.w, r2.w, r1.w
  add_sat r2.yw, r2.yyyw, l(0.000000, -0.850000, 0.000000, -0.850000)
  add r16.w, r8.w, r11.w
  add r16.w, r22.w, r16.w
  mad r16.w, -cb1[5].w, l(3.000000), r16.w
  add r16.w, r16.w, l(0.056000)
  div r16.w, r16.w, r1.w
  add_sat r16.w, r16.w, l(-0.850000)
  add r22.w, r7.w, r14.w
  add r17.w, r17.w, r22.w
  mad r17.w, -cb1[5].w, l(3.000000), r17.w
  add r17.w, r17.w, l(0.056000)
  div r17.w, r17.w, r1.w
  add_sat r17.w, r17.w, l(-0.850000)
  mul r16.w, r16.w, r17.w
  mad r2.y, r2.y, r2.w, r16.w
  add r2.w, r4.w, r25.w
  add r2.w, r24.w, r2.w
  mad r2.w, -cb1[5].w, l(3.000000), r2.w
  add r2.w, r2.w, l(0.056000)
  div r2.w, r2.w, r1.w
  add_sat r2.w, r2.w, l(-0.850000)
  add r15.w, r3.w, r15.w
  add r15.w, r20.w, r15.w
  mad r15.w, -cb1[5].w, l(3.000000), r15.w
  add r15.w, r15.w, l(0.056000)
  div r15.w, r15.w, r1.w
  add_sat r15.w, r15.w, l(-0.850000)
  mad r2.y, r2.w, r15.w, r2.y
  add r2.w, r5.w, r26.w
  add r2.w, r19.w, r2.w
  mad r2.w, -cb1[5].w, l(3.000000), r2.w
  add r2.w, r2.w, l(0.056000)
  div r2.w, r2.w, r1.w
  add_sat r2.w, r2.w, l(-0.850000)
  add r15.w, r10.w, r21.w
  add r15.w, r18.w, r15.w
  mad r15.w, -cb1[5].w, l(3.000000), r15.w
  add r15.w, r15.w, l(0.056000)
  div r1.w, r15.w, r1.w
  add_sat r1.w, r1.w, l(-0.850000)
  mad r1.w, r2.w, r1.w, r2.y  // r1.w <- sbe

#line 159
  add r1.w, r1.w, l(-2.000000)
  mul_sat r1.w, r1.w, l(0.909091)
  mad r2.y, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.y
  mad r2.yw, r1.wwww, l(0.000000, 0.167000, 0.000000, 0.250000), l(0.000000, 0.167000, 0.000000, 0.250000)  // r2.y <- cs.x; r2.w <- cs.y

#line 160
  mul r27.xyz, r1.xyzx, r1.xyzx
  dp3 r1.w, l(0.255800, 0.651100, 0.093100, 0.000000), r27.xyzx
  sqrt r1.w, r1.w  // r1.w <- c0_Y

#line 161
  mul_sat r4.xyz, |r4.xyzx|, r4.xyzx
  dp3 r4.x, l(0.255800, 0.651100, 0.093100, 0.000000), r4.xyzx
  mul_sat r6.xyz, |r6.xyzx|, r6.xyzx
  dp3 r4.y, l(0.255800, 0.651100, 0.093100, 0.000000), r6.xyzx
  mul_sat r5.xyz, |r5.xyzx|, r5.xyzx
  dp3 r4.z, l(0.255800, 0.651100, 0.093100, 0.000000), r5.xyzx
  sqrt r4.xyz, r4.xyzx
  mul_sat r5.xyz, |r8.xyzx|, r8.xyzx
  dp3 r5.x, l(0.255800, 0.651100, 0.093100, 0.000000), r5.xyzx
  mul_sat r6.xyz, |r7.xyzx|, r7.xyzx
  dp3 r5.y, l(0.255800, 0.651100, 0.093100, 0.000000), r6.xyzx
  mul_sat r6.xyz, |r10.xyzx|, r10.xyzx
  dp3 r5.z, l(0.255800, 0.651100, 0.093100, 0.000000), r6.xyzx
  sqrt r5.xyz, r5.xyzx
  mul_sat r6.xyz, |r9.xyzx|, r9.xyzx
  dp3 r6.x, l(0.255800, 0.651100, 0.093100, 0.000000), r6.xyzx
  mul_sat r3.xyz, |r3.xyzx|, r3.xyzx
  dp3 r3.x, l(0.255800, 0.651100, 0.093100, 0.000000), r3.xyzx
  mul_sat r7.xyz, |r12.xyzx|, r12.xyzx
  dp3 r3.y, l(0.255800, 0.651100, 0.093100, 0.000000), r7.xyzx
  mul_sat r7.xyz, |r11.xyzx|, r11.xyzx
  dp3 r3.z, l(0.255800, 0.651100, 0.093100, 0.000000), r7.xyzx
  sqrt r3.xyz, r3.xyzx
  mul_sat r7.xyz, |r14.xyzx|, r14.xyzx
  dp3 r6.y, l(0.255800, 0.651100, 0.093100, 0.000000), r7.xyzx
  mul_sat r7.xyz, |r13.xyzx|, r13.xyzx
  dp3 r6.z, l(0.255800, 0.651100, 0.093100, 0.000000), r7.xyzx
  sqrt r6.xyz, r6.xyzx
  mul_sat r7.xyz, |r16.xyzx|, r16.xyzx
  dp3 r7.x, l(0.255800, 0.651100, 0.093100, 0.000000), r7.xyzx
  mul_sat r8.xyz, |r15.xyzx|, r15.xyzx
  dp3 r7.y, l(0.255800, 0.651100, 0.093100, 0.000000), r8.xyzx
  mul_sat r8.xyz, |r18.xyzx|, r18.xyzx
  dp3 r7.z, l(0.255800, 0.651100, 0.093100, 0.000000), r8.xyzx
  sqrt r7.xyz, r7.xyzx
  mul_sat r8.xyz, |r17.xyzx|, r17.xyzx
  dp3 r8.x, l(0.255800, 0.651100, 0.093100, 0.000000), r8.xyzx
  mul_sat r9.xyz, |r20.xyzx|, r20.xyzx
  dp3 r8.y, l(0.255800, 0.651100, 0.093100, 0.000000), r9.xyzx
  mul_sat r9.xyz, |r19.xyzx|, r19.xyzx
  dp3 r8.z, l(0.255800, 0.651100, 0.093100, 0.000000), r9.xyzx
  sqrt r8.xyz, r8.xyzx
  mul_sat r9.xyz, |r22.xyzx|, r22.xyzx
  dp3 r9.x, l(0.255800, 0.651100, 0.093100, 0.000000), r9.xyzx
  mul_sat r10.xyz, |r21.xyzx|, r21.xyzx
  dp3 r9.y, l(0.255800, 0.651100, 0.093100, 0.000000), r10.xyzx
  mul_sat r10.xyz, |r24.xyzx|, r24.xyzx
  dp3 r9.z, l(0.255800, 0.651100, 0.093100, 0.000000), r10.xyzx
  sqrt r9.xyz, r9.xyzx
  mul_sat r10.xyz, |r23.xyzx|, r23.xyzx
  dp3 r10.x, l(0.255800, 0.651100, 0.093100, 0.000000), r10.xyzx
  mul_sat r11.xyz, |r26.xyzx|, r26.xyzx
  dp3 r10.y, l(0.255800, 0.651100, 0.093100, 0.000000), r11.xyzx
  mul_sat r11.xyz, |r25.xyzx|, r25.xyzx
  dp3 r10.z, l(0.255800, 0.651100, 0.093100, 0.000000), r11.xyzx
  sqrt r10.xyz, r10.xyzx
  mov x0[0].x, r1.w
  mov x0[1].x, r4.x
  mov x0[2].x, r4.y
  mov x0[3].x, r4.z
  mov x0[4].x, r5.x
  mov x0[5].x, r5.y
  mov x0[6].x, r5.z
  mov x0[7].x, r6.x
  mov x0[8].x, r3.x
  mov x0[9].x, r3.y
  mov x0[10].x, r3.z
  mov x0[11].x, r6.y
  mov x0[12].x, r6.z
  mov x0[13].x, r7.x
  mov x0[14].x, r7.y
  mov x0[15].x, r7.z
  mov x0[16].x, r8.x
  mov x0[17].x, r8.y
  mov x0[18].x, r8.z
  mov x0[19].x, r9.x
  mov x0[20].x, r9.y
  mov x0[21].x, r9.z
  mov x0[22].x, r10.x
  mov x0[23].x, r10.y
  mov x0[24].x, r10.z

#line 164
  add r11.x, r2.x, l(-0.300000)
  add_sat r11.x, r11.x, r11.x
  mad r11.y, r11.x, l(-2.000000), l(3.000000)
  mul r11.x, r11.x, r11.x
  mul r11.x, r11.x, r11.y
  mad r11.xy, r11.xxxx, l(0.366025, -0.866491, 0.000000, 0.000000), l(0.500000, 1.414214, 0.000000, 0.000000)
  mul r11.xy, r11.xyxx, r11.xyxx  // r11.x <- dW.x; r11.y <- dW.z

#line 165
  add r11.z, r1.w, -r4.y
  add r12.x, r1.w, -r5.x
  add r11.z, |r11.z|, |r12.x|
  add r12.x, r1.w, -r5.y
  add r11.z, r11.z, |r12.x|
  add r12.x, r1.w, -r6.x
  add r11.z, r11.z, |r12.x|
  add r12.xy, r1.wwww, -r4.xzxx
  add r12.x, |r12.y|, |r12.x|
  add r12.y, r1.w, -r5.z
  add r12.x, |r12.y|, r12.x
  add r12.y, r1.w, -r3.x
  add r12.x, |r12.y|, r12.x
  mad r11.z, r12.x, l(0.250000), r11.z
  mad r11.z, r11.z, l(3.000000), l(0.020000)  // r11.z <- mdiff_c0

#line 166
  add r12.x, r4.x, -r10.z
  add r12.y, r4.x, -r9.z
  add r12.x, |r12.y|, |r12.x|
  add r12.y, -r4.y, r4.x
  add r12.x, |r12.y|, r12.x
  add r12.y, r4.x, -r5.x
  add r12.x, |r12.y|, r12.x
  add r12.yz, -r3.yyzy, r4.xxxx
  add r12.y, |r12.z|, |r12.y|
  mad r12.x, r12.y, l(0.500000), r12.x
  div r12.x, r11.z, r12.x
  add r12.y, r4.z, -r10.y
  add r12.z, r4.z, -r8.z
  add r12.y, |r12.z|, |r12.y|
  add r12.z, r4.z, -r5.y
  add r12.y, |r12.z|, r12.y
  add r12.z, -r4.y, r4.z
  add r12.y, |r12.z|, r12.y
  add r12.z, -r3.y, r4.z
  add r13.x, r4.z, -r6.y
  add r12.z, |r12.z|, |r13.x|
  mad r12.y, r12.z, l(0.500000), r12.y
  div r12.y, r11.z, r12.y
  add r12.z, -r5.x, r5.z
  add r13.x, r5.z, -r9.y
  add r12.z, |r12.z|, |r13.x|
  add r13.x, r5.z, -r7.z
  add r12.z, r12.z, |r13.x|
  add r13.xy, r5.zzzz, -r6.xzxx
  add r12.z, r12.z, |r13.x|
  add r13.x, -r3.z, r5.z
  add r13.x, |r13.y|, |r13.x|
  mad r12.z, r13.x, l(0.500000), r12.z
  div r12.z, r11.z, r12.z
  min r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r13.x, -r5.y, r3.x
  add r13.y, r3.x, -r6.x
  add r13.x, |r13.y|, |r13.x|
  add r13.y, r3.x, -r8.y
  add r13.x, |r13.y|, r13.x
  add r13.y, r3.x, -r7.y
  add r13.x, |r13.y|, r13.x
  add r13.yz, r3.xxxx, -r6.zzyz
  add r13.y, |r13.z|, |r13.y|
  mad r13.x, r13.y, l(0.500000), r13.x
  div r13.x, r11.z, r13.x
  min r13.x, r13.x, l(1.000000)
  add r13.y, -r4.y, r3.y
  add r10.xyz, r3.yyyy, -r10.xyzx
  add r10.z, |r10.z|, |r13.y|
  add r10.y, |r10.y|, r10.z
  add r10.x, |r10.x|, r10.y
  add r10.yz, -r4.xxzx, r3.yyyy
  add r10.y, |r10.z|, |r10.y|
  mad r10.x, r10.y, l(0.500000), r10.x
  div r10.x, r11.z, r10.x
  min r10.x, r11.y, r10.x
  add r9.xy, r3.zzzz, -r9.xyxx
  add r9.x, |r9.x|, |r9.y|
  add r9.y, r3.z, -r9.z
  add r9.x, |r9.y|, r9.x
  add r9.yz, -r5.xxzx, r3.zzzz
  add r9.x, |r9.y|, r9.x
  add r9.y, -r4.x, r3.z
  add r9.y, |r9.z|, |r9.y|
  mad r9.x, r9.y, l(0.500000), r9.x
  div r9.x, r11.z, r9.x
  min r9.x, r11.y, r9.x
  add r8.xyz, r6.yyyy, -r8.xyzx
  add r9.y, -r5.y, r6.y
  add r8.y, |r8.y|, |r9.y|
  add r8.y, |r8.z|, r8.y
  add r8.x, |r8.x|, r8.y
  add r8.y, -r4.z, r6.y
  add r8.z, -r3.x, r6.y
  add r8.y, |r8.z|, |r8.y|
  mad r8.x, r8.y, l(0.500000), r8.x
  div r8.x, r11.z, r8.x
  min r8.x, r11.y, r8.x
  add r7.xyz, r6.zzzz, -r7.xyzx
  add r7.x, |r7.z|, |r7.x|
  add r7.z, -r6.x, r6.z
  add r7.x, |r7.z|, r7.x
  add r7.x, |r7.y|, r7.x
  add r7.y, -r5.z, r6.z
  add r7.z, -r3.x, r6.z
  add r7.y, |r7.z|, |r7.y|
  mad r7.x, r7.y, l(0.500000), r7.x
  div r7.x, r11.z, r7.x
  min r7.x, r11.y, r7.x

#line 167
  add r7.y, r9.x, r10.x
  mul r7.y, r7.y, l(0.250000)
  max r7.y, r12.x, r7.y
  max r7.y, r7.y, l(0.250000)
  add r7.y, r12.x, r7.y

#line 168
  add r7.z, r8.x, r10.x

#line 167
  mul r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.250000, 0.000000)

#line 168
  max r7.z, r12.y, r7.z
  max r7.z, r7.z, l(0.250000)
  add r7.z, r12.y, r7.z
  mul r7.z, r7.z, l(0.500000)

#line 169
  add r8.y, r7.x, r9.x
  mul r8.y, r8.y, l(0.250000)
  max r8.y, r12.z, r8.y
  max r8.y, r8.y, l(0.250000)
  add r8.y, r12.z, r8.y

#line 170
  add r8.z, r7.x, r8.x

#line 169
  mul r8.yz, r8.yyzy, l(0.000000, 0.500000, 0.250000, 0.000000)

#line 170
  max r8.z, r13.x, r8.z
  max r8.z, r8.z, l(0.250000)
  add r8.z, r13.x, r8.z
  mul r8.z, r8.z, l(0.500000)

#line 178
  add r4.w, r4.w, -cb1[5].w

#line 180
  add r4.xyzw, r4.xyzw, l(0.060000, 0.060000, 0.060000, -0.010000)

#line 178
  mul_sat r4.w, r4.w, l(11.111111)  // r4.w <- t

#line 179
  mul r9.y, r4.w, r4.w
  mad r4.w, -r4.w, l(1.980000), l(2.970000)
  mad r4.w, r9.y, r4.w, l(0.010000)  // r4.w <- lowthr

#line 180
  log r4.x, r4.x
  mul r4.x, r4.x, l(2.400000)
  exp r4.x, r4.x
  mul r9.y, r4.w, r7.y  // r9.y <- weightsum

#line 178
  add r6.w, r6.w, -cb1[5].w
  add r6.w, r6.w, l(-0.010000)
  mul_sat r6.w, r6.w, l(11.111111)  // r6.w <- t

#line 179
  mul r9.z, r6.w, r6.w
  mad r6.w, -r6.w, l(1.980000), l(2.970000)
  mad r6.w, r9.z, r6.w, l(0.010000)  // r6.w <- lowthr

#line 180
  log r4.y, r4.y
  mul r4.y, r4.y, l(2.400000)
  exp r4.y, r4.y
  mul r9.z, r6.w, r11.x
  mul r4.y, r4.y, r9.z
  mad r4.x, r4.x, r9.y, r4.y  // r4.x <- neg_laplace

#line 181
  mad r4.y, r7.y, r4.w, r9.z  // r4.y <- weightsum

#line 182
  mul r6.w, r6.w, l(0.083333)
  mad r4.w, r4.w, l(0.083333), r6.w  // r4.w <- lowthrsum

#line 178
  add r5.w, r5.w, -cb1[5].w

#line 180
  add r5.xw, r5.xxxw, l(0.060000, 0.000000, 0.000000, -0.010000)

#line 178
  mul_sat r5.w, r5.w, l(11.111111)  // r5.w <- t

#line 179
  mul r6.w, r5.w, r5.w
  mad r5.w, -r5.w, l(1.980000), l(2.970000)
  mad r5.w, r6.w, r5.w, l(0.010000)  // r5.w <- lowthr

#line 180
  log r4.z, r4.z
  mul r4.z, r4.z, l(2.400000)
  exp r4.z, r4.z
  mul r6.w, r5.w, r7.z
  mad r4.x, r4.z, r6.w, r4.x

#line 181
  mad r4.y, r7.z, r5.w, r4.y

#line 182
  mad r4.z, r5.w, l(0.083333), r4.w  // r4.z <- lowthrsum

#line 178
  add r4.w, r8.w, -cb1[5].w
  add r4.w, r4.w, l(-0.010000)
  mul_sat r4.w, r4.w, l(11.111111)  // r4.w <- t

#line 179
  mul r5.w, r4.w, r4.w
  mad r4.w, -r4.w, l(1.980000), l(2.970000)
  mad r4.w, r5.w, r4.w, l(0.010000)  // r4.w <- lowthr

#line 180
  log r5.x, r5.x
  mul r5.x, r5.x, l(2.400000)
  exp r5.x, r5.x
  mul r5.w, r4.w, r11.x
  mad r4.x, r5.x, r5.w, r4.x

#line 181
  mad r4.y, r11.x, r4.w, r4.y

#line 182
  mad r4.z, r4.w, l(0.083333), r4.z

#line 178
  add r4.w, r7.w, -cb1[5].w
  add r4.w, r4.w, l(-0.010000)
  mul_sat r4.w, r4.w, l(11.111111)  // r4.w <- t

#line 179
  mul r5.x, r4.w, r4.w
  mad r4.w, -r4.w, l(1.980000), l(2.970000)
  mad r4.w, r5.x, r4.w, l(0.010000)  // r4.w <- lowthr

#line 180
  add r5.x, r5.y, l(0.060000)
  log r5.x, r5.x
  mul r5.x, r5.x, l(2.400000)
  exp r5.x, r5.x
  mul r5.y, r4.w, r11.x
  mad r4.x, r5.x, r5.y, r4.x

#line 181
  mad r4.y, r11.x, r4.w, r4.y

#line 182
  mad r4.z, r4.w, l(0.083333), r4.z

#line 178
  add r4.w, r10.w, -cb1[5].w
  add r4.w, r4.w, l(-0.010000)
  mul_sat r4.w, r4.w, l(11.111111)  // r4.w <- t

#line 179
  mul r5.x, r4.w, r4.w
  mad r4.w, -r4.w, l(1.980000), l(2.970000)
  mad r4.w, r5.x, r4.w, l(0.010000)  // r4.w <- lowthr

#line 180
  add r5.x, r5.z, l(0.060000)
  log r5.x, r5.x
  mul r5.x, r5.x, l(2.400000)
  exp r5.x, r5.x
  mul r5.y, r4.w, r8.y
  mad r4.x, r5.x, r5.y, r4.x

#line 181
  mad r4.y, r8.y, r4.w, r4.y

#line 182
  mad r4.z, r4.w, l(0.083333), r4.z

#line 178
  add r4.w, r9.w, -cb1[5].w
  add r4.w, r4.w, l(-0.010000)
  mul_sat r4.w, r4.w, l(11.111111)  // r4.w <- t

#line 179
  mul r5.x, r4.w, r4.w
  mad r4.w, -r4.w, l(1.980000), l(2.970000)
  mad r4.w, r5.x, r4.w, l(0.010000)  // r4.w <- lowthr

#line 180
  add r5.x, r6.x, l(0.060000)
  log r5.x, r5.x
  mul r5.x, r5.x, l(2.400000)
  exp r5.x, r5.x
  mul r5.y, r4.w, r11.x
  mad r4.x, r5.x, r5.y, r4.x

#line 181
  mad r4.y, r11.x, r4.w, r4.y

#line 182
  mad r4.z, r4.w, l(0.083333), r4.z

#line 178
  add r3.w, r3.w, -cb1[5].w

#line 180
  add r3.xyzw, r3.xyzw, l(0.060000, 0.060000, 0.060000, -0.010000)

#line 178
  mul_sat r3.w, r3.w, l(11.111111)  // r3.w <- t

#line 179
  mul r4.w, r3.w, r3.w
  mad r3.w, -r3.w, l(1.980000), l(2.970000)
  mad r3.w, r4.w, r3.w, l(0.010000)  // r3.w <- lowthr

#line 180
  log r3.x, r3.x
  mul r3.x, r3.x, l(2.400000)
  exp r3.x, r3.x
  mul r4.w, r3.w, r8.z
  mad r3.x, r3.x, r4.w, r4.x  // r3.x <- neg_laplace

#line 181
  mad r4.x, r8.z, r3.w, r4.y  // r4.x <- weightsum

#line 182
  mad r3.w, r3.w, l(0.083333), r4.z  // r3.w <- lowthrsum

#line 178
  add r4.y, r12.w, -cb1[5].w
  add r4.y, r4.y, l(-0.010000)
  mul_sat r4.y, r4.y, l(11.111111)  // r4.y <- t

#line 179
  mul r4.z, r4.y, r4.y
  mad r4.y, -r4.y, l(1.980000), l(2.970000)
  mad r4.y, r4.z, r4.y, l(0.010000)  // r4.y <- lowthr

#line 180
  log r3.y, r3.y
  mul r3.y, r3.y, l(2.400000)
  exp r3.y, r3.y
  mul r4.z, r4.y, r10.x
  mad r3.x, r3.y, r4.z, r3.x

#line 181
  mad r3.y, r10.x, r4.y, r4.x  // r3.y <- weightsum

#line 182
  mad r3.w, r4.y, l(0.083333), r3.w

#line 178
  add r4.x, r11.w, -cb1[5].w
  add r4.x, r4.x, l(-0.010000)
  mul_sat r4.x, r4.x, l(11.111111)  // r4.x <- t

#line 179
  mul r4.y, r4.x, r4.x
  mad r4.x, -r4.x, l(1.980000), l(2.970000)
  mad r4.x, r4.y, r4.x, l(0.010000)  // r4.x <- lowthr

#line 180
  log r3.z, r3.z
  mul r3.z, r3.z, l(2.400000)
  exp r3.z, r3.z
  mul r4.y, r4.x, r9.x
  mad r3.x, r3.z, r4.y, r3.x

#line 181
  mad r3.y, r9.x, r4.x, r3.y

#line 182
  mad r3.z, r4.x, l(0.083333), r3.w  // r3.z <- lowthrsum

#line 178
  add r3.w, r14.w, -cb1[5].w
  add r3.w, r3.w, l(-0.010000)
  mul_sat r3.w, r3.w, l(11.111111)  // r3.w <- t

#line 179
  mul r4.x, r3.w, r3.w
  mad r3.w, -r3.w, l(1.980000), l(2.970000)
  mad r3.w, r4.x, r3.w, l(0.010000)  // r3.w <- lowthr

#line 180
  add r4.x, r6.y, l(0.060000)
  log r4.x, r4.x
  mul r4.x, r4.x, l(2.400000)
  exp r4.x, r4.x
  mul r4.y, r3.w, r8.x
  mad r3.x, r4.x, r4.y, r3.x

#line 181
  mad r3.y, r8.x, r3.w, r3.y

#line 182
  mad r3.z, r3.w, l(0.083333), r3.z

#line 178
  add r3.w, r13.w, -cb1[5].w
  add r3.w, r3.w, l(-0.010000)
  mul_sat r3.w, r3.w, l(11.111111)  // r3.w <- t

#line 179
  mul r4.x, r3.w, r3.w
  mad r3.w, -r3.w, l(1.980000), l(2.970000)
  mad r3.w, r4.x, r3.w, l(0.010000)  // r3.w <- lowthr

#line 180
  add r4.x, r6.z, l(0.060000)
  log r4.x, r4.x
  mul r4.x, r4.x, l(2.400000)
  exp r4.x, r4.x
  mul r4.y, r3.w, r7.x
  mad r3.x, r4.x, r4.y, r3.x

#line 181
  mad r3.y, r7.x, r3.w, r3.y

#line 182
  mad r3.z, r3.w, l(0.083333), r3.z

#line 184
  div r3.x, r3.x, r3.y
  log r3.x, r3.x
  mul r3.x, r3.x, l(0.416667)
  exp r3.x, r3.x
  add r3.x, r3.x, l(-0.060000)  // r3.x <- neg_laplace

#line 185
  log r2.x, |r2.x|
  mul r2.x, r2.x, l(3.500000)
  exp r2.x, r2.x
  mad r2.x, r2.z, r2.x, l(0.625000)
  div r2.x, cb1[5].z, r2.x  // r2.x <- sharpen_val

#line 186
  add r2.z, r1.w, -r3.x
  mad r2.x, r3.z, r2.x, l(0.010000)
  mul r2.x, r2.x, r2.z  // r2.x <- sharpdiff

#line 193
  mov r2.z, l(0)  // r2.z <- j
  loop 
    ige r3.x, r2.z, l(24)
    breakc_nz r3.x

#line 195
    mov r3.x, x0[r2.z + 0].x  // r3.x <- temp

#line 198
    iadd r3.yz, r2.zzzz, l(0, 1, 2, 0)  // r3.z <- j

#line 196
    mov r3.w, x0[r3.y + 0].x
    min r3.w, r3.w, r3.x
    mov x0[r2.z + 0].x, r3.w

#line 197
    mov r3.w, x0[r3.y + 0].x
    max r3.x, r3.w, r3.x
    mov x0[r3.y + 0].x, r3.x

#line 198
    mov r2.z, r3.z  // r2.z <- j
  endloop 

#line 200
  mov r3.x, l(24)  // r3.x <- jj
  loop 
    ige r2.z, l(0), r3.x
    breakc_nz r2.z

#line 202
    mov r2.z, x0[0].x  // r2.z <- temp

#line 203
    mov r3.z, x0[r3.x + 0].x
    min r3.z, r2.z, r3.z
    mov x0[0].x, r3.z

#line 204
    mov r3.z, x0[r3.x + 0].x
    max r2.z, r2.z, r3.z
    mov x0[r3.x + 0].x, r2.z

#line 205
    mov r2.z, x0[24].x  // r2.z <- temp

#line 208
    iadd r3.xy, r3.xxxx, l(-2, -1, 0, 0)

#line 206
    mov r3.z, x0[r3.y + 0].x
    max r3.z, r2.z, r3.z
    mov x0[24].x, r3.z

#line 207
    mov r3.z, x0[r3.y + 0].x
    min r2.z, r2.z, r3.z
    mov x0[r3.y + 0].x, r2.z

#line 208
  endloop 

#line 193
  mov r2.z, l(1)  // r2.z <- j
  loop 
    ige r3.x, r2.z, l(23)
    breakc_nz r3.x

#line 195
    mov r3.x, x0[r2.z + 0].x  // r3.x <- temp

#line 198
    iadd r3.yz, r2.zzzz, l(0, 1, 2, 0)  // r3.z <- j

#line 196
    mov r3.w, x0[r3.y + 0].x
    min r3.w, r3.w, r3.x
    mov x0[r2.z + 0].x, r3.w

#line 197
    mov r3.w, x0[r3.y + 0].x
    max r3.x, r3.w, r3.x
    mov x0[r3.y + 0].x, r3.x

#line 198
    mov r2.z, r3.z  // r2.z <- j
  endloop 

#line 200
  mov r3.x, l(23)  // r3.x <- jj
  loop 
    ige r2.z, l(1), r3.x
    breakc_nz r2.z

#line 202
    mov r2.z, x0[1].x  // r2.z <- temp

#line 203
    mov r3.z, x0[r3.x + 0].x
    min r3.z, r2.z, r3.z
    mov x0[1].x, r3.z

#line 204
    mov r3.z, x0[r3.x + 0].x
    max r2.z, r2.z, r3.z
    mov x0[r3.x + 0].x, r2.z

#line 205
    mov r2.z, x0[23].x  // r2.z <- temp

#line 208
    iadd r3.xy, r3.xxxx, l(-2, -1, 0, 0)

#line 206
    mov r3.z, x0[r3.y + 0].x
    max r3.z, r2.z, r3.z
    mov x0[23].x, r3.z

#line 207
    mov r3.z, x0[r3.y + 0].x
    min r2.z, r2.z, r3.z
    mov x0[r3.y + 0].x, r2.z

#line 208
  endloop 

#line 193
  mov r2.z, l(2)  // r2.z <- j
  loop 
    ige r3.x, r2.z, l(22)
    breakc_nz r3.x

#line 195
    mov r3.x, x0[r2.z + 0].x  // r3.x <- temp

#line 198
    iadd r3.yz, r2.zzzz, l(0, 1, 2, 0)  // r3.z <- j

#line 196
    mov r3.w, x0[r3.y + 0].x
    min r3.w, r3.w, r3.x
    mov x0[r2.z + 0].x, r3.w

#line 197
    mov r3.w, x0[r3.y + 0].x
    max r3.x, r3.w, r3.x
    mov x0[r3.y + 0].x, r3.x

#line 198
    mov r2.z, r3.z  // r2.z <- j
  endloop 

#line 200
  mov r3.x, l(22)  // r3.x <- jj
  loop 
    ige r2.z, l(2), r3.x
    breakc_nz r2.z

#line 202
    mov r2.z, x0[2].x  // r2.z <- temp

#line 203
    mov r3.z, x0[r3.x + 0].x
    min r3.z, r2.z, r3.z
    mov x0[2].x, r3.z

#line 204
    mov r3.z, x0[r3.x + 0].x
    max r2.z, r2.z, r3.z
    mov x0[r3.x + 0].x, r2.z

#line 205
    mov r2.z, x0[22].x  // r2.z <- temp

#line 208
    iadd r3.xy, r3.xxxx, l(-2, -1, 0, 0)

#line 206
    mov r3.z, x0[r3.y + 0].x
    max r3.z, r2.z, r3.z
    mov x0[22].x, r3.z

#line 207
    mov r3.z, x0[r3.y + 0].x
    min r2.z, r2.z, r3.z
    mov x0[r3.y + 0].x, r2.z

#line 208
  endloop 

#line 210
  mov r2.z, x0[22].x
  mov r3.x, x0[23].x
  mad r2.z, r3.x, l(2.000000), r2.z
  mul r3.x, r1.w, l(3.000000)
  max r2.z, r2.z, r3.x
  mov r3.y, x0[24].x
  add r2.z, r2.z, r3.y

#line 211
  mov r3.y, x0[2].x
  mov r3.z, x0[1].x
  mad r3.y, r3.z, l(2.000000), r3.y
  min r3.x, r3.x, r3.y
  mov r3.y, x0[0].x
  add r3.x, r3.y, r3.x

#line 212
  mad r2.z, r2.z, l(0.250000), -r1.w
  mad r3.x, -r3.x, l(0.250000), r1.w
  min r2.z, |r2.z|, |r3.x|  // r2.z <- min_dist

#line 213
  add r3.x, -r1.w, -r2.z
  add r3.x, r3.x, l(1.000100)
  min r3.x, r3.x, l(0.003000)
  add r3.x, r2.z, r3.x  // r3.x <- pos_scale

#line 214
  add r3.y, r1.w, -r2.z
  add r3.y, r3.y, l(0.000100)
  min r3.y, r3.y, l(0.009000)
  add r2.z, r2.z, r3.y  // r2.z <- neg_scale

#line 215
  mad r3.y, r3.x, l(0.056000), l(0.094400)
  min r3.x, r3.y, r3.x

#line 216
  mad r3.y, r2.z, l(0.056000), l(0.094400)
  min r2.z, r2.z, r3.y

#line 217
  max r3.y, r2.x, l(0.000000)
  log r3.z, r3.y
  mul r3.zw, r3.zzzx, l(0.000000, 0.000000, 0.700000, 24.000000)
  exp r3.z, r3.z
  add r4.xy, -r2.ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  min r3.y, r3.w, r3.y
  add r3.y, r3.y, r3.y
  div r3.y, r3.y, r3.x
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  add r3.yw, r3.yyyy, l(0.000000, -1.000000, 0.000000, 1.000000)
  div r3.y, r3.y, r3.w
  mul r3.x, r3.x, r3.y
  log r3.x, |r3.x|
  mul r3.x, r3.x, l(0.700000)
  exp r3.x, r3.x
  mul r3.x, r3.x, r4.x
  mad r2.y, r2.y, r3.z, r3.x
  log r2.y, r2.y
  mul r2.y, r2.y, l(1.428571)
  exp r2.y, r2.y
  min r2.x, r2.x, l(0.000000)
  log r3.x, -r2.x
  mul r3.x, r3.x, l(0.700000)
  exp r3.x, r3.x
  mul r3.y, r2.z, l(24.000000)
  min r2.x, -r2.x, r3.y
  add r2.x, r2.x, r2.x
  div r2.x, r2.x, r2.z
  mul r2.x, r2.x, l(1.442695)
  exp r2.x, r2.x
  add r3.yz, r2.xxxx, l(0.000000, -1.000000, 1.000000, 0.000000)
  div r2.x, r3.y, r3.z
  mul r2.x, r2.z, r2.x
  log r2.x, |r2.x|
  mul r2.x, r2.x, l(0.700000)
  exp r2.x, r2.x
  mul r2.x, r2.x, r4.y
  mad r2.x, r2.w, r3.x, r2.x
  log r2.x, r2.x
  mul r2.x, r2.x, l(1.428571)
  exp r2.x, r2.x
  add r2.x, -r2.x, r2.y  // r2.x <- sharpdiff

#line 218
  add_sat r2.y, r1.w, r2.x
  add r2.y, -r1.w, r2.y  // r2.y <- sharpdiff_lim

#line 220
  mul r2.z, r2.y, l(0.900000)

#line 219
  max r2.z, r2.y, r2.z
  mad r2.z, r2.z, l(1.030000), r1.w
  add r2.z, r2.z, l(0.030000)
  add r2.w, r1.w, l(0.030000)
  div r2.z, r2.z, r2.w  // r2.z <- satmul

#line 220
  mad r2.x, r2.y, l(3.000000), r2.x
  mad r2.x, r2.x, l(0.250000), r1.w
  add r1.xyz, -r1.wwww, r1.xyzx
  mad r1.xyz, r1.xyzx, r2.zzzz, r2.xxxx  // r1.x <- res.x; r1.y <- res.y; r1.z <- res.z

#line 221
else   // Prior locations: r1.x <- orig.x; r1.y <- orig.y; r1.z <- orig.z; r1.w <- orig.w; r2.x <- c_edge
  mov r1.xyz, l(0,1.000000,0,0)
endif 

#line 230
mov r1.w, l(1.000000)
add r1.xyzw, -r0.xyzw, r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 239
ret 
// Approximately 699 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id91;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float2 p1_id88 : register(c1);
    float curve_height_id89 = 1.0f;
    float a_offset_id90 = 2.0;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 Compute_id30()
{
    return InputValue_id91;
}
float4 Filter_id29(inout PS_STREAMS streams, float4 tex0col)
{
    float4 orig = (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, 0) + streams.TexCoord_id62, 0));
    float c_edge = orig.a - a_offset_id90;

    {
        if (c_edge > 24 || c_edge < -0.5)
        {
            return float4(0, 1.0, 0, 1.0);
        }
    }
    float4 c[25] = { (float4(saturate((orig).rgb), (orig).a)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-1, -1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, -1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(1, -1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-1, 0) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(1, 0) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-1, 1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, 1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(1, 1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, -2) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-2, 0) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(2, 0) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, 2) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, 3) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(1, 2) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-1, 2) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(3, 0) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(2, 1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(2, -1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-3, 0) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-2, 1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-2, -1) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(0, -3) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(1, -2) + streams.TexCoord_id62, 0)), (Texture0_id14.SampleLevel(LinearSampler_id44, p1_id88 * 0.001 * float2(-1, -2) + streams.TexCoord_id62, 0))};
    float maxedge = (max(max((max(max(c[1].a, c[2].a), max(c[3].a, c[4].a))), (max(max(c[5].a, c[6].a), max(c[7].a, c[8].a)))), max((max(max(c[9].a, c[10].a), max(c[11].a, c[12].a))), c[0].a))) - a_offset_id90;
    float sbe = (saturate((c[2].a + c[9].a + c[22].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) * (saturate((c[7].a + c[12].a + c[13].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) + (saturate((c[4].a + c[10].a + c[19].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) * (saturate((c[5].a + c[11].a + c[16].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) + (saturate((c[1].a + c[24].a + c[21].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) * (saturate((c[8].a + c[14].a + c[17].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) + (saturate((c[3].a + c[23].a + c[18].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85)) * (saturate((c[6].a + c[20].a + c[15].a - 3 * a_offset_id90 + 0.056) / (abs(maxedge) + 0.03) - 0.85));
    float2 cs = lerp(float2(0.167, 0.250), float2(0.334, 0.500), smoothstep(2, 3.1, sbe));
    float c0_Y = (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[0]) * abs(c[0])).rgb)));
    float luma[25] = { c0_Y, (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[1]) * abs(c[1])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[2]) * abs(c[2])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[3]) * abs(c[3])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[4]) * abs(c[4])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[5]) * abs(c[5])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[6]) * abs(c[6])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[7]) * abs(c[7])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[8]) * abs(c[8])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[9]) * abs(c[9])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[10]) * abs(c[10])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[11]) * abs(c[11])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[12]) * abs(c[12])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[13]) * abs(c[13])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[14]) * abs(c[14])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[15]) * abs(c[15])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[16]) * abs(c[16])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[17]) * abs(c[17])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[18]) * abs(c[18])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[19]) * abs(c[19])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[20]) * abs(c[20])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[21]) * abs(c[21])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[22]) * abs(c[22])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[23]) * abs(c[23])).rgb))), (sqrt(dot(float3(0.2558, 0.6511, 0.0931), saturate((c[24]) * abs(c[24])).rgb)))};
    const float3 W1 = float3(0.5, 1.0, 1.41421356237);
    const float3 W2 = float3(0.86602540378, 1.0, 0.54772255751);
    float3 dW = pow(lerp(W1, W2, smoothstep(0.3, 0.8, c_edge)), 2);
    float mdiff_c0 = 0.02 + 3 * (abs(luma[0] - luma[2]) + abs(luma[0] - luma[4]) + abs(luma[0] - luma[5]) + abs(luma[0] - luma[7]) + 0.25 * (abs(luma[0] - luma[1]) + abs(luma[0] - luma[3]) + abs(luma[0] - luma[6]) + abs(luma[0] - luma[8])));
    float weights[12] = { (min(mdiff_c0 / (abs(luma[1] - luma[24]) + abs(luma[1] - luma[21]) + abs(luma[1] - luma[2]) + abs(luma[1] - luma[4]) + 0.5 * (abs(luma[1] - luma[9]) + abs(luma[1] - luma[10]))), dW.y)), (dW.x), (min(mdiff_c0 / (abs(luma[3] - luma[23]) + abs(luma[3] - luma[18]) + abs(luma[3] - luma[5]) + abs(luma[3] - luma[2]) + 0.5 * (abs(luma[3] - luma[9]) + abs(luma[3] - luma[11]))), dW.y)), (dW.x), (dW.x), (min(mdiff_c0 / (abs(luma[6] - luma[4]) + abs(luma[6] - luma[20]) + abs(luma[6] - luma[15]) + abs(luma[6] - luma[7]) + 0.5 * (abs(luma[6] - luma[10]) + abs(luma[6] - luma[12]))), dW.y)), (dW.x), (min(mdiff_c0 / (abs(luma[8] - luma[5]) + abs(luma[8] - luma[7]) + abs(luma[8] - luma[17]) + abs(luma[8] - luma[14]) + 0.5 * (abs(luma[8] - luma[12]) + abs(luma[8] - luma[11]))), dW.y)), (min(mdiff_c0 / (abs(luma[9] - luma[2]) + abs(luma[9] - luma[24]) + abs(luma[9] - luma[23]) + abs(luma[9] - luma[22]) + 0.5 * (abs(luma[9] - luma[1]) + abs(luma[9] - luma[3]))), dW.z)), (min(mdiff_c0 / (abs(luma[10] - luma[20]) + abs(luma[10] - luma[19]) + abs(luma[10] - luma[21]) + abs(luma[10] - luma[4]) + 0.5 * (abs(luma[10] - luma[1]) + abs(luma[10] - luma[6]))), dW.z)), (min(mdiff_c0 / (abs(luma[11] - luma[17]) + abs(luma[11] - luma[5]) + abs(luma[11] - luma[18]) + abs(luma[11] - luma[16]) + 0.5 * (abs(luma[11] - luma[3]) + abs(luma[11] - luma[8]))), dW.z)), (min(mdiff_c0 / (abs(luma[12] - luma[13]) + abs(luma[12] - luma[15]) + abs(luma[12] - luma[7]) + abs(luma[12] - luma[14]) + 0.5 * (abs(luma[12] - luma[6]) + abs(luma[12] - luma[8]))), dW.z))};
    weights[0] = (max(max((weights[8] + weights[9]) / 4, weights[0]), 0.25) + weights[0]) / 2;
    weights[2] = (max(max((weights[8] + weights[10]) / 4, weights[2]), 0.25) + weights[2]) / 2;
    weights[5] = (max(max((weights[9] + weights[11]) / 4, weights[5]), 0.25) + weights[5]) / 2;
    weights[7] = (max(max((weights[10] + weights[11]) / 4, weights[7]), 0.25) + weights[7]) / 2;
    float lowthrsum = 0;
    float weightsum = 0;
    float neg_laplace = 0;

    [unroll]
    for (int pix = 0; pix < 12; ++pix)
    {
        float t = saturate((c[pix + 1].a - a_offset_id90 - 0.01) / (0.1 - 0.01));
        float lowthr = t * t * (2.97 - 1.98 * t) + 0.01;
        neg_laplace += pow(luma[pix + 1] + 0.06, 2.4) * (weights[pix] * lowthr);
        weightsum += weights[pix] * lowthr;
        lowthrsum += lowthr / 12;
    }
    neg_laplace = pow(abs(neg_laplace / weightsum), (1.0 / 2.4)) - 0.06;
    float sharpen_val = curve_height_id89 / (curve_height_id89 * 0.5 * pow(abs(c_edge), 3.5) + 0.625);
    float sharpdiff = (c0_Y - neg_laplace) * (lowthrsum * sharpen_val + 0.01);

    [unroll]
    for (int i = 0; i < 3; ++i)
    {
        float temp;

        for (int j = i; j < 24 - i; j += 2)
        {
            temp = luma[j];
            luma[j] = min(luma[j], luma[j + 1]);
            luma[j + 1] = max(temp, luma[j + 1]);
        }

        for (int jj = 24 - i; jj > i; jj -= 2)
        {
            temp = luma[i];
            luma[i] = min(luma[i], luma[jj]);
            luma[jj] = max(temp, luma[jj]);
            temp = luma[24 - i];
            luma[24 - i] = max(luma[24 - i], luma[jj - 1]);
            luma[jj - 1] = min(temp, luma[jj - 1]);
        }
    }
    float nmax = (max(luma[22] + luma[23] * 2, c0_Y * 3) + luma[24]) / 4;
    float nmin = (min(luma[2] + luma[1] * 2, c0_Y * 3) + luma[0]) / 4;
    float min_dist = min(abs(nmax - c0_Y), abs(c0_Y - nmin));
    float pos_scale = min_dist + min(0.003, 1.0001 - min_dist - c0_Y);
    float neg_scale = min_dist + min(0.009, 0.0001 + c0_Y - min_dist);
    pos_scale = min(pos_scale, 0.1 * (1 - 0.056) + pos_scale * 0.056);
    neg_scale = min(neg_scale, 0.1 * (1 - 0.056) + neg_scale * 0.056);
    sharpdiff = (pow(cs.x * pow(abs(max(sharpdiff, 0)), 0.7) + abs(1 - cs.x) * pow(abs(((exp(2 * min(abs(max(sharpdiff, 0)), pos_scale * 24) / pos_scale) - 1) / (exp(2 * min(abs(max(sharpdiff, 0)), pos_scale * 24) / pos_scale) + 1) * pos_scale)), 0.7), (1.0 / 0.7))) - (pow(cs.y * pow(abs(min(sharpdiff, 0)), 0.7) + abs(1 - cs.y) * pow(abs(((exp(2 * min(abs(min(sharpdiff, 0)), neg_scale * 24) / neg_scale) - 1) / (exp(2 * min(abs(min(sharpdiff, 0)), neg_scale * 24) / neg_scale) + 1) * neg_scale)), 0.7), (1.0 / 0.7)));
    float sharpdiff_lim = saturate(c0_Y + sharpdiff) - c0_Y;
    float satmul = (c0_Y + max(sharpdiff_lim * 0.9, sharpdiff_lim) * 1.03 + 0.03) / (c0_Y + 0.03);
    float3 res = c0_Y + (sharpdiff_lim * 3 + sharpdiff) / 4 + (c[0].rgb - c0_Y) * satmul;
    return float4((false == true ? res + orig.rgb - c[0].rgb : res), 1.0);
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id29(streams, col), Compute_id30());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
