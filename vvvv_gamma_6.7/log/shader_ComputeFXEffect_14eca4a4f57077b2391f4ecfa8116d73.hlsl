/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:1 Y:1 Z:1
@P EffectNodeBase.EffectNodeBaseShader: mixin Feedback_Advanced_Internal_ComputeFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id20 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id22 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id24 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id26 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id28 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id30 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id32 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id34 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id36 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id38 => Texturing.Texture9TexelSize
@C    Reso_id77 => Feedback_Advanced_Internal_ComputeFX.Reso
@C    Reset_id78 => Feedback_Advanced_Internal_ComputeFX.Reset
@C    Fade_id79 => Feedback_Advanced_Internal_ComputeFX.Fade
***************************
******  Resources    ******
***************************
@R    LinearSampler_id49 => Texturing.LinearSampler [Stage: Compute, Slot: (0-0)]
@R    TexCol_id80 => Feedback_Advanced_Internal_ComputeFX.TexCol [Stage: Compute, Slot: (0-0)]
@R    Out_id81 => Feedback_Advanced_Internal_ComputeFX.Out [Stage: Compute, Slot: (0-0)]
@R    Globals => Globals [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    Feedback_Advanced_Internal_ComputeFX => 482c520fbf5040acb051fe995b35a4b7
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    TransformUtils => 651146ed53d019a2c2c72b489f9cff84
@S    HappyTransform => 40e380fb8141f7a8a6b741a8bd03a993
@S    Global => f3a73f928089a02788395f11e18f679c
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
***************************
*****     Stages      *****
***************************
@G    Compute => c628717b2b5481340d785bd3c414456e
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id20;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id22;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id24;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id26;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id28;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id30;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id32;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id34;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id36;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id38;     // Offset:   72 Size:     8 [unused]
//   int2 Reso_id77;                    // Offset:   80 Size:     8
//      = 0x00000200 0x00000200 
//   bool Reset_id78;                   // Offset:   88 Size:     4
//      = 0xffffffff 
//   float Fade_id79;                   // Offset:   92 Size:     4
//      = 0x3f000000 
//
// }
//
// Resource bind info for Out_id81
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id49                sampler      NA          NA             s0      1 
// TexCol_id80                       texture  float4          2d             t0      1 
// Out_id81                              UAV  struct         r/w             u0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_uav_structured u0, 16
dcl_input vThreadID.x
dcl_temps 4
dcl_thread_group 1, 1, 1
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 125 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_14eca4a4f57077b2391f4ecfa8116d73.hlsl"
udiv r0.x, r1.x, vThreadID.x, cb0[5].x
utof r1.x, r1.x
utof r1.y, r0.x
add r0.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
itof r0.zw, cb0[5].xxxy
div r0.xy, r0.xyxx, r0.zwzz  // r0.x <- uv.x; r0.y <- uv.y

#line 126
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyzw, vThreadID.x, l(0), u0.xyzw  // r1.x <- c.x; r1.y <- c.y; r1.z <- c.z; r1.w <- c.w

#line 127
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- cc.x; r0.y <- cc.y; r0.z <- cc.z; r0.w <- cc.w

#line 128
add r2.xyzw, -r0.xyzw, r1.xyzw
mad r2.xyzw, cb0[5].wwww, r2.xyzw, r0.xyzw
add r3.xyzw, r0.xyzw, -r2.xyzw
mad r2.xyzw, r0.wwww, r3.xyzw, r2.xyzw
store_structured u0.xyzw, vThreadID.x, l(0), r2.xyzw

#line 129
if_nz cb0[5].z

#line 131
  mov r1.xyz, r0.xyzx
  store_structured u0.xyzw, vThreadID.x, l(0), r1.xyzw

#line 132
endif 

#line 147
ret 
// Approximately 18 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
};
cbuffer PerFrame 
{
    float Time_id17;
    float TimeStep_id18;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id20;
    float2 Texture1TexelSize_id22;
    float2 Texture2TexelSize_id24;
    float2 Texture3TexelSize_id26;
    float2 Texture4TexelSize_id28;
    float2 Texture5TexelSize_id30;
    float2 Texture6TexelSize_id32;
    float2 Texture7TexelSize_id34;
    float2 Texture8TexelSize_id36;
    float2 Texture9TexelSize_id38;
    int2 Reso_id77 = float2(512.0f, 512.0f);
    bool Reset_id78 = true;
    float Fade_id79 = 0.5f;
};
Texture2D Texture0_id19;
Texture2D Texture1_id21;
Texture2D Texture2_id23;
Texture2D Texture3_id25;
Texture2D Texture4_id27;
Texture2D Texture5_id29;
Texture2D Texture6_id31;
Texture2D Texture7_id33;
Texture2D Texture8_id35;
Texture2D Texture9_id37;
TextureCube TextureCube0_id39;
TextureCube TextureCube1_id40;
TextureCube TextureCube2_id41;
TextureCube TextureCube3_id42;
Texture3D Texture3D0_id43;
Texture3D Texture3D1_id44;
Texture3D Texture3D2_id45;
Texture3D Texture3D3_id46;
SamplerState Sampler_id47;
SamplerState PointSampler_id48 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id49 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id51 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id52 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id53 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id54 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id55 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id56 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id57;
SamplerState Sampler1_id58;
SamplerState Sampler2_id59;
SamplerState Sampler3_id60;
SamplerState Sampler4_id61;
SamplerState Sampler5_id62;
SamplerState Sampler6_id63;
SamplerState Sampler7_id64;
SamplerState Sampler8_id65;
SamplerState Sampler9_id66;
Texture2D TexCol_id80;
RWStructuredBuffer<float4> Out_id81;
void Compute_id72(inout CS_STREAMS streams)
{
    uint3 DTid = streams.DispatchThreadId_id1;
    float2 uv = (float2(DTid.x % Reso_id77.x, DTid.x / Reso_id77.x) + 0.5) / Reso_id77;
    float4 c = Out_id81[DTid.x];
    float4 cc = TexCol_id80.SampleLevel(LinearSampler_id49, uv, 0);
    Out_id81[DTid.x] = lerp(lerp(cc, c, Fade_id79), cc, cc.a);
    if (Reset_id78)
    {
        Out_id81[DTid.x] = float4(cc.xyz, c.a);
    }
}
[numthreads(1, 1, 1)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 1;
    streams.ThreadCountY_id8 = 1;
    streams.ThreadCountZ_id9 = 1;
    streams.ThreadCountPerGroup_id5 = 1 * 1 * 1;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id72(streams);
}
