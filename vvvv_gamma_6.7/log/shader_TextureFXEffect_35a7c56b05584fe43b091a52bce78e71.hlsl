/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin DisplaceChannel_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {Displace = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {Offset = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {OffsetScale = InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>}]
@P Offset: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P OffsetScale: InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>
@P Displace: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 32]
@C    InputValue_id98 => ShaderFX.InputValueFloat4
@C    InputValue_id99 => ShaderFX.InputValueFloat2
@C    InputValue_id100 => ShaderFX.InputValueFloat2.i1
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    type_id97 => DisplaceChannel_Internal_TextureFX.type
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Sampler1_id53 => Texturing.Sampler1 [Stage: Pixel, Slot: (2-2)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id16 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    DisplaceChannel_Internal_TextureFX => 3c0263f7310537cba1a04d18f293b03a
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 398 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_35a7c56b05584fe43b091a52bce78e71.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 402
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 7c2fce829cad7a7ef6a07aa74018931d
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id98;            // Offset:    0 Size:    16
//   float2 InputValue_id99;            // Offset:   16 Size:     8
//   float2 InputValue_id100;           // Offset:   24 Size:     8
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int type_id97;                     // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Sampler1_id53                     sampler      NA          NA             s2      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// Texture1_id16                     texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 377 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_35a7c56b05584fe43b091a52bce78e71.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 324
switch cb1[5].x

#line 327
  case l(0)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 313
  sample_l_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- red

#line 314
  sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.y <- col.y; r1.z <- col.z; r1.w <- col.w

#line 329
  break 

#line 330
  case l(1)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 307
  sample_l_indexable(texture2d)(float,float,float,float) r1.y, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.y <- green

#line 308
  sample_l_indexable(texture2d)(float,float,float,float) r1.xzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- col.x; r1.z <- col.z; r1.w <- col.w

#line 332
  break 

#line 333
  case l(2)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 301
  sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.z <- blue

#line 302
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- col.x; r1.y <- col.y; r1.w <- col.w

#line 335
  break 

#line 336
  case l(3)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 295
  sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- redGreen.x; r1.y <- redGreen.y

#line 296
  sample_l_indexable(texture2d)(float,float,float,float) r1.zw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.z <- col.z; r1.w <- col.w

#line 338
  break 

#line 339
  case l(4)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 289
  sample_l_indexable(texture2d)(float,float,float,float) r1.xz, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- redBlue.x; r1.z <- redBlue.y

#line 290
  sample_l_indexable(texture2d)(float,float,float,float) r1.yw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.y <- col.y; r1.w <- col.w

#line 341
  break 

#line 342
  case l(5)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 283
  sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.y <- greenBlue.x; r1.z <- greenBlue.y

#line 284
  sample_l_indexable(texture2d)(float,float,float,float) r1.xw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- col.x; r1.w <- col.w

#line 344
  break 

#line 345
  case l(6)

#line 275
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 164
  lt r2.x, r1.y, r1.z
  mov r3.xy, r1.zyzz
  mov r3.zw, l(0,0,-1.000000,0.666667)
  mov r4.xy, r3.yxyy
  mov r4.zw, l(0,0,0,-0.333333)
  movc r2.xyzw, r2.xxxx, r3.xyzw, r4.xyzw  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z; r2.w <- P.w

#line 165
  lt r3.x, r1.x, r2.x
  mov r4.xyz, r2.xywx
  mov r4.w, r1.x
  mov r2.xyw, r4.wywx
  movc r2.xyzw, r3.xxxx, r4.xyzw, r2.xyzw  // r2.x <- Q.x; r2.y <- Q.y; r2.z <- Q.z; r2.w <- Q.w

#line 166
  min r3.x, r2.y, r2.w
  add r3.x, r2.x, -r3.x  // r3.x <- C

#line 167
  add r2.y, -r2.y, r2.w
  mad r2.w, r3.x, l(6.000000), l(0.000000)
  div r2.y, r2.y, r2.w
  add r2.y, r2.z, r2.y

#line 191
  add r2.x, r2.x, l(0.000000)
  div r2.x, r3.x, r2.x  // r2.x <- S

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, v1.xyxx, t1.zwxy, s2, l(0.000000)  // r2.z <- <InTex1_id27 return value>.x; r2.w <- <InTex1_id27 return value>.y

#line 172
  add r2.zw, r2.zzzw, -cb0[1].xxxy
  mad r2.zw, r2.zzzw, cb0[1].zzzw, v1.xxxy  // r2.z <- <OffsetUV_id85 return value>.x; r2.w <- <OffsetUV_id85 return value>.y

#line 277
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r2.zwzz, t0.xyzw, s0, l(0.000000)

#line 164
  max r2.z, r3.z, r3.y  // r2.z <- P.x

#line 165
  max r2.z, r2.z, r3.x  // r2.z <- Q.x

#line 156
  frc r2.y, |r2.y|  // r2.y <- H

#line 159
  mad r3.xyz, r2.yyyy, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)

#line 160
  mad_sat r3.xyz, |r3.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)  // r3.x <- <HUEtoRGB_id36 return value>.x; r3.y <- <HUEtoRGB_id36 return value>.y; r3.z <- <HUEtoRGB_id36 return value>.z

#line 186
  add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r2.xyw, r3.xyxz, r2.xxxx, l(1.000000, 1.000000, 0.000000, 1.000000)
  mul r1.xyz, r2.zzzz, r2.xywx  // r1.x <- <HSVtoRGB_id37 return value>.x; r1.y <- <HSVtoRGB_id37 return value>.y; r1.z <- <HSVtoRGB_id37 return value>.z

#line 347
  break 

#line 348
  case l(7)

#line 267
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 164
  lt r2.x, r1.y, r1.z
  mov r3.xy, r1.zyzz
  mov r3.zw, l(0,0,-1.000000,0.666667)
  mov r4.xy, r3.yxyy
  mov r4.zw, l(0,0,0,-0.333333)
  movc r2.xyzw, r2.xxxx, r3.xyzw, r4.xyzw  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z; r2.w <- P.w

#line 165
  lt r3.x, r1.x, r2.x
  mov r4.xyz, r2.xywx
  mov r4.w, r1.x
  mov r2.xyw, r4.wywx
  movc r2.xyzw, r3.xxxx, r4.xyzw, r2.xyzw  // r2.x <- Q.x; r2.y <- Q.y; r2.z <- Q.z; r2.w <- Q.w

#line 166
  min r3.x, r2.y, r2.w
  add r3.x, r2.x, -r3.x  // r3.x <- C

#line 167
  add r2.y, -r2.y, r2.w
  mad r2.w, r3.x, l(6.000000), l(0.000000)
  div r2.y, r2.y, r2.w
  add r2.y, r2.z, r2.y

#line 203
  mad r2.x, -r3.x, l(0.500000), r2.x  // r2.x <- L

#line 204
  mad r2.x, r2.x, l(2.000000), l(-1.000000)
  add r2.x, -|r2.x|, l(1.000000)
  div r2.x, r3.x, r2.x  // r2.x <- S

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, v1.xyxx, t1.zwxy, s2, l(0.000000)  // r2.z <- <InTex1_id27 return value>.x; r2.w <- <InTex1_id27 return value>.y

#line 172
  add r2.zw, r2.zzzw, -cb0[1].xxxy
  mad r2.zw, r2.zzzw, cb0[1].zzzw, v1.xxxy  // r2.z <- <OffsetUV_id85 return value>.x; r2.w <- <OffsetUV_id85 return value>.y

#line 269
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r2.zwzz, t0.yzxw, s0, l(0.000000)

#line 164
  lt r2.z, r3.x, r3.y
  movc r3.xy, r2.zzzz, r3.yxyy, r3.xyxx  // r3.x <- P.x; r3.y <- P.y

#line 165
  lt r2.z, r3.z, r3.x
  movc r3.xyz, r2.zzzz, r3.xyzx, r3.zyxz  // r3.x <- Q.x; r3.y <- Q.y; r3.z <- Q.w

#line 166
  min r2.z, r3.y, r3.z
  add r2.z, -r2.z, r3.x  // r2.z <- C

#line 203
  mad r2.z, -r2.z, l(0.500000), r3.x  // r2.z <- L

#line 156
  frc r2.y, |r2.y|  // r2.y <- H

#line 159
  mad r3.xyz, r2.yyyy, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)

#line 160
  mad_sat r3.xyz, |r3.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)  // r3.x <- <HUEtoRGB_id36 return value>.x; r3.y <- <HUEtoRGB_id36 return value>.y; r3.z <- <HUEtoRGB_id36 return value>.z

#line 197
  mad r2.y, r2.z, l(2.000000), l(-1.000000)
  add r2.y, -|r2.y|, l(1.000000)
  mul r2.x, r2.x, r2.y  // r2.x <- C

#line 198
  add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  mad r1.xyz, r3.xyzx, r2.xxxx, r2.zzzz  // r1.x <- <HSLtoRGB_id38 return value>.x; r1.y <- <HSLtoRGB_id38 return value>.y; r1.z <- <HSLtoRGB_id38 return value>.z

#line 350
  break 

#line 351
  case l(8)

#line 259
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 164
  lt r2.x, r1.y, r1.z
  mov r3.xy, r1.zyzz
  mov r3.zw, l(0,0,-1.000000,0.666667)
  mov r4.xy, r3.yxyy
  mov r4.zw, l(0,0,0,-0.333333)
  movc r2.xyzw, r2.xxxx, r3.xyzw, r4.xyzw  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z; r2.w <- P.w

#line 165
  lt r3.x, r1.x, r2.x
  mov r4.xyz, r2.xywx
  mov r4.w, r1.x
  mov r2.xyw, r4.wywx
  movc r2.xyzw, r3.xxxx, r4.xyzw, r2.xyzw  // r2.x <- Q.x; r2.y <- Q.y; r2.z <- Q.z; r2.w <- Q.w

#line 166
  min r3.x, r2.y, r2.w
  add r2.x, r2.x, -r3.x  // r2.x <- C

#line 167
  add r2.y, -r2.y, r2.w
  mad r2.x, r2.x, l(6.000000), l(0.000000)
  div r2.x, r2.y, r2.x
  add r2.x, r2.z, r2.x

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.yz, v1.xyxx, t1.zxyw, s2, l(0.000000)  // r2.y <- <InTex1_id27 return value>.x; r2.z <- <InTex1_id27 return value>.y

#line 172
  add r2.yz, r2.yyzy, -cb0[1].xxyx
  mad r2.yz, r2.yyzy, cb0[1].zzwz, v1.xxyx  // r2.y <- <OffsetUV_id85 return value>.x; r2.z <- <OffsetUV_id85 return value>.y

#line 260
  sample_l_indexable(texture2d)(float,float,float,float) r2.yzw, r2.yzyy, t0.wyzx, s0, l(0.000000)

#line 164
  lt r3.x, r2.y, r2.z
  movc r2.yz, r3.xxxx, r2.zzyz, r2.yyzy  // r2.y <- P.x; r2.z <- P.y

#line 165
  lt r3.x, r2.w, r2.y
  movc r2.yzw, r3.xxxx, r2.yyzw, r2.wwzy  // r2.w <- Q.w; r2.y <- Q.x; r2.z <- Q.y

#line 166
  min r2.z, r2.z, r2.w
  add r2.z, -r2.z, r2.y  // r2.z <- C

#line 191
  add r2.y, r2.y, l(0.000000)
  div r2.y, r2.z, r2.y  // r2.y <- S

#line 164
  max r2.z, r1.z, r3.y  // r2.z <- P.x

#line 165
  max r2.z, r1.x, r2.z  // r2.z <- Q.x

#line 156
  frc r2.x, |r2.x|  // r2.x <- H

#line 159
  mad r3.xyz, r2.xxxx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)

#line 160
  mad_sat r3.xyz, |r3.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)  // r3.x <- <HUEtoRGB_id36 return value>.x; r3.y <- <HUEtoRGB_id36 return value>.y; r3.z <- <HUEtoRGB_id36 return value>.z

#line 186
  add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r2.xyw, r3.xyxz, r2.yyyy, l(1.000000, 1.000000, 0.000000, 1.000000)
  mul r1.xyz, r2.zzzz, r2.xywx  // r1.x <- <HSVtoRGB_id37 return value>.x; r1.y <- <HSVtoRGB_id37 return value>.y; r1.z <- <HSVtoRGB_id37 return value>.z

#line 353
  break 

#line 354
  case l(9)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 251
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyw, r2.xyxx, t0.yzwx, s0, l(0.000000)

#line 164
  lt r3.x, r2.x, r2.y
  mov r4.xy, r2.yxyy
  mov r4.zw, l(0,0,-1.000000,0.666667)
  mov r5.xy, r4.yxyy
  mov r5.zw, l(0,0,0,-0.333333)
  movc r3.xyzw, r3.xxxx, r4.xyzw, r5.xyzw  // r3.x <- P.x; r3.y <- P.y; r3.z <- P.z; r3.w <- P.w

#line 165
  lt r4.x, r2.w, r3.x
  mov r2.xyz, r3.xywx
  mov r3.xyw, r2.wywx
  movc r2.xyzw, r4.xxxx, r2.xyzw, r3.xyzw  // r2.x <- Q.x; r2.y <- Q.y; r2.z <- Q.z; r2.w <- Q.w

#line 166
  min r3.x, r2.y, r2.w
  add r2.x, r2.x, -r3.x  // r2.x <- C

#line 167
  add r2.y, -r2.y, r2.w
  mad r2.x, r2.x, l(6.000000), l(0.000000)
  div r2.x, r2.y, r2.x
  add r2.x, r2.z, r2.x

#line 252
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 164
  lt r2.y, r1.y, r1.z
  movc r3.xy, r2.yyyy, r1.zyzz, r1.yzyy  // r3.x <- P.x; r3.y <- P.y

#line 165
  lt r2.y, r1.x, r3.x
  mov r3.z, r1.x
  movc r2.yzw, r2.yyyy, r3.xxyz, r3.zzyx  // r2.y <- Q.x; r2.z <- Q.y

#line 166
  min r2.z, r2.z, r2.w
  add r2.z, -r2.z, r2.y  // r2.z <- C

#line 191
  add r2.y, r2.y, l(0.000000)
  div r2.y, r2.z, r2.y  // r2.y <- S

#line 164
  max r2.z, r1.z, r1.y  // r2.z <- P.x

#line 165
  max r2.z, r1.x, r2.z  // r2.z <- Q.x

#line 156
  frc r2.x, |r2.x|  // r2.x <- H

#line 159
  mad r3.xyz, r2.xxxx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)

#line 160
  mad_sat r3.xyz, |r3.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)  // r3.x <- <HUEtoRGB_id36 return value>.x; r3.y <- <HUEtoRGB_id36 return value>.y; r3.z <- <HUEtoRGB_id36 return value>.z

#line 186
  add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r2.xyw, r3.xyxz, r2.yyyy, l(1.000000, 1.000000, 0.000000, 1.000000)
  mul r1.xyz, r2.zzzz, r2.xywx  // r1.x <- <HSVtoRGB_id37 return value>.x; r1.y <- <HSVtoRGB_id37 return value>.y; r1.z <- <HSVtoRGB_id37 return value>.z

#line 356
  break 

#line 357
  case l(10)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 242
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0, l(0.000000)

#line 180
  max r2.y, r2.y, r2.x
  max r2.y, r2.z, r2.y  // r2.y <- w

#line 181
  add r2.x, -r2.x, r2.y
  div r2.x, r2.x, r2.y
  max r2.x, r2.x, l(0.000000)

#line 243
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- c.x; r1.y <- c.y; r1.z <- c.z

#line 180
  max r2.w, r1.y, r1.x
  max r2.w, r1.z, r2.w  // r2.w <- w; r2.w <- w

#line 181
  add r3.xy, -r1.yzyy, r2.wwww
  div r3.xy, r3.xyxx, r2.wwww
  max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r2.yz, r3.xxyx, l(0.000000, 1.000000, 1.000000, 0.000000)  // r2.y <- <RGBToCMYK_id39 return value>.y; r2.z <- <RGBToCMYK_id39 return value>.z; r2.y <- <RGBToCMYK_id39 return value>.y; r2.z <- <RGBToCMYK_id39 return value>.z
  add r2.w, -r2.w, l(1.000000)
  max r2.w, r2.w, l(0.000000)
  min r2.xw, r2.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)  // r2.x <- <RGBToCMYK_id39 return value>.x; r2.w <- <RGBToCMYK_id39 return value>.w

#line 176
  add r3.x, -r2.w, l(1.000000)
  mad r2.xyz, r2.xyzx, r3.xxxx, r2.wwww
  min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r1.x <- <CMYKToRGB_id40 return value>.x; r1.y <- <CMYKToRGB_id40 return value>.y; r1.z <- <CMYKToRGB_id40 return value>.z

#line 359
  break 

#line 360
  case l(11)

#line 233
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 180
  max r2.x, r1.y, r1.x
  max r2.x, r1.z, r2.x  // r2.x <- w

#line 181
  add r2.yz, -r1.xxzx, r2.xxxx
  div r2.yz, r2.yyzy, r2.xxxx

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r3.x <- <InTex1_id27 return value>.x; r3.y <- <InTex1_id27 return value>.y

#line 172
  add r3.xy, r3.xyxx, -cb0[1].xyxx
  mad r3.xy, r3.xyxx, cb0[1].zwzz, v1.xyxx  // r3.x <- <OffsetUV_id85 return value>.x; r3.y <- <OffsetUV_id85 return value>.y

#line 234
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t0.xyzw, s0, l(0.000000)  // r3.x <- c.x; r3.y <- c.y; r3.z <- c.z

#line 180
  max r2.w, r3.y, r3.x
  max r2.w, r3.z, r2.w  // r2.w <- w; r2.w <- w

#line 181
  add r3.x, -r3.y, r2.w
  div r2.w, r3.x, r2.w
  max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r3.xyz, r2.ywzy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r3.x <- <RGBToCMYK_id39 return value>.x; r3.y <- <RGBToCMYK_id39 return value>.y; r3.z <- <RGBToCMYK_id39 return value>.z
  add r2.x, -r2.x, l(1.000000)
  max r2.x, r2.x, l(0.000000)
  min r2.x, r2.x, l(1.000000)  // r2.x <- <RGBToCMYK_id39 return value>.w

#line 176
  add r2.y, -r2.x, l(1.000000)
  mad r2.xyz, r3.xyzx, r2.yyyy, r2.xxxx
  min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r1.x <- <CMYKToRGB_id40 return value>.x; r1.y <- <CMYKToRGB_id40 return value>.y; r1.z <- <CMYKToRGB_id40 return value>.z

#line 362
  break 

#line 363
  case l(12)

#line 224
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 180
  max r2.x, r1.y, r1.x
  max r2.x, r1.z, r2.x  // r2.x <- w

#line 181
  add r2.yz, -r1.xxyx, r2.xxxx
  div r2.yz, r2.yyzy, r2.xxxx
  max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r3.xy, r2.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)  // r3.x <- <RGBToCMYK_id39 return value>.x; r3.y <- <RGBToCMYK_id39 return value>.y

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.yz, v1.xyxx, t1.zxyw, s2, l(0.000000)  // r2.y <- <InTex1_id27 return value>.x; r2.z <- <InTex1_id27 return value>.y

#line 172
  add r2.yz, r2.yyzy, -cb0[1].xxyx
  mad r2.yz, r2.yyzy, cb0[1].zzwz, v1.xxyx  // r2.y <- <OffsetUV_id85 return value>.x; r2.z <- <OffsetUV_id85 return value>.y

#line 226
  sample_l_indexable(texture2d)(float,float,float,float) r2.yzw, r2.yzyy, t0.wxyz, s0, l(0.000000)

#line 180
  max r2.y, r2.z, r2.y
  max r2.y, r2.w, r2.y  // r2.y <- w

#line 181
  add r2.z, -r2.w, r2.y
  div r2.y, r2.z, r2.y
  max r2.y, r2.y, l(0.000000)
  min r3.z, r2.y, l(1.000000)  // r3.z <- <RGBToCMYK_id39 return value>.z
  add r2.x, -r2.x, l(1.000000)
  max r2.x, r2.x, l(0.000000)
  min r2.x, r2.x, l(1.000000)  // r2.x <- <RGBToCMYK_id39 return value>.w

#line 176
  add r2.y, -r2.x, l(1.000000)
  mad r2.xyz, r3.xyzx, r2.yyyy, r2.xxxx
  min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r1.x <- <CMYKToRGB_id40 return value>.x; r1.y <- <CMYKToRGB_id40 return value>.y; r1.z <- <CMYKToRGB_id40 return value>.z

#line 365
  break 

#line 366
  case l(13)

#line 215
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

#line 180
  max r2.x, r1.y, r1.x
  max r2.x, r1.z, r2.x  // r2.x <- w

#line 181
  add r2.yzw, -r1.xxyz, r2.xxxx
  div r2.xyz, r2.yzwy, r2.xxxx
  max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r3.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r3.x <- <InTex1_id27 return value>.x; r3.y <- <InTex1_id27 return value>.y

#line 172
  add r3.xy, r3.xyxx, -cb0[1].xyxx
  mad r3.xy, r3.xyxx, cb0[1].zwzz, v1.xyxx  // r3.x <- <OffsetUV_id85 return value>.x; r3.y <- <OffsetUV_id85 return value>.y

#line 218
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t0.xyzw, s0, l(0.000000)  // r3.x <- c.x; r3.y <- c.y; r3.z <- c.z

#line 180
  max r2.w, r3.y, r3.x
  max r2.w, r3.z, r2.w  // r2.w <- w; r2.w <- w

#line 181
  add r2.w, -r2.w, l(1.000000)
  max r2.w, r2.w, l(0.000000)
  min r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r2.x <- <RGBToCMYK_id39 return value>.x; r2.y <- <RGBToCMYK_id39 return value>.y; r2.z <- <RGBToCMYK_id39 return value>.z; r2.w <- <RGBToCMYK_id39 return value>.w

#line 176
  add r3.x, -r2.w, l(1.000000)
  mad r2.xyz, r2.xyzx, r3.xxxx, r2.wwww
  min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r1.x <- <CMYKToRGB_id40 return value>.x; r1.y <- <CMYKToRGB_id40 return value>.y; r1.z <- <CMYKToRGB_id40 return value>.z

#line 368
  break 

#line 369
  case l(14)

#line 152
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, v1.xyxx, t1.xyzw, s2, l(0.000000)  // r2.x <- <InTex1_id27 return value>.x; r2.y <- <InTex1_id27 return value>.y

#line 172
  add r2.xy, r2.xyxx, -cb0[1].xyxx
  mad r2.xy, r2.xyxx, cb0[1].zwzz, v1.xyxx  // r2.x <- <OffsetUV_id85 return value>.x; r2.y <- <OffsetUV_id85 return value>.y

#line 209
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r1.w <- alpha

#line 210
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z

#line 371
  break 

#line 372
  default 
  break 
endswitch   // r1.x <- c.x; r1.y <- c.y; r1.z <- c.z; r1.w <- c.w

#line 382
add r1.xyzw, -r0.xyzw, r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 391
ret 
// Approximately 310 instruction slots used
***************************
*************************/
static const float Epsilon_id92 = 0.0000000596;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id98;
    float2 InputValue_id99;
    float2 InputValue_id100;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int type_id97;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float2 Compute_id88()
{
    return InputValue_id100;
}
float2 Compute_id87()
{
    return InputValue_id99;
}
float4 InTex1_id27(inout PS_STREAMS streams)
{
    return Texture1_id16.SampleLevel(Sampler1_id53, streams.TexCoord_id62, 0);
}
float3 HUEtoRGB_id36(in float H)
{
    H = frac(H);
    float R = abs(H * 6 - 3) - 1;
    float G = 2 - abs(H * 6 - 2);
    float B = 2 - abs(H * 6 - 4);
    return saturate(float3(R, G, B));
}
float3 RGBtoHCV_id45(in float3 RGB)
{
    float4 P = (RGB.g < RGB.b) ? float4(RGB.bg, -1.0, 2.0 / 3.0) : float4(RGB.gb, 0.0, -1.0 / 3.0);
    float4 Q = (RGB.r < P.x) ? float4(P.xyw, RGB.r) : float4(RGB.r, P.yzx);
    float C = Q.x - min(Q.w, Q.y);
    float H = abs((Q.w - Q.y) / (6 * C + Epsilon_id92) + Q.z);
    return float3(H, C, Q.x);
}
float2 OffsetUV_id85(inout PS_STREAMS streams)
{
    return streams.TexCoord_id62 + float2((InTex1_id27(streams).rg - Compute_id87()) * Compute_id88());
}
float3 CMYKToRGB_id40(float4 c)
{
    return 1 - min(1, c.rgb * (1 - c.w) + c.w);
}
float4 RGBToCMYK_id39(float3 c)
{
    float w = max(max(c.r, c.g), c.b);
    return clamp(float4((w - c.rgb) / w, 1.0 - w), 0.00000001, 1.0);
}
float3 HSVtoRGB_id37(in float3 HSV)
{
    float3 RGB = HUEtoRGB_id36(HSV.x);
    return ((RGB - 1) * HSV.y + 1) * HSV.z;
}
float3 RGBtoHSV_id46(in float3 RGB)
{
    float3 HCV = RGBtoHCV_id45(RGB);
    float S = HCV.y / (HCV.z + Epsilon_id92);
    return float3(HCV.x, S, HCV.z);
}
float3 HSLtoRGB_id38(in float3 HSL)
{
    float3 RGB = HUEtoRGB_id36(HSL.x);
    float C = (1 - abs(2 * HSL.z - 1)) * HSL.y;
    return (RGB - 0.5) * C + HSL.z;
}
float3 RGBtoHSL_id47(in float3 RGB)
{
    float3 HCV = RGBtoHCV_id45(RGB);
    float L = HCV.z - HCV.y * 0.5;
    float S = HCV.y / (1 - abs(L * 2 - 1) + Epsilon_id92);
    return float3(HCV.x, S, L);
}
float4 DisplaceAlpha_id83(inout PS_STREAMS streams)
{
    float alpha = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).a;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(col.r, col.g, col.b, alpha);
}
float4 DisplaceBlack_id82(inout PS_STREAMS streams)
{
    float C = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).r;
    float M = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).g;
    float Y = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).b;
    float K = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).a;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(CMYKToRGB_id40(float4(C, M, Y, K)), A);
}
float4 DisplaceYellow_id81(inout PS_STREAMS streams)
{
    float C = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).r;
    float M = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).g;
    float Y = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).b;
    float K = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).a;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(CMYKToRGB_id40(float4(C, M, Y, K)), A);
}
float4 DisplaceMagenta_id80(inout PS_STREAMS streams)
{
    float C = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).r;
    float M = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).g;
    float Y = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).b;
    float K = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).a;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(CMYKToRGB_id40(float4(C, M, Y, K)), A);
}
float4 DisplaceCyan_id79(inout PS_STREAMS streams)
{
    float C = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).r;
    float M = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).g;
    float Y = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).b;
    float K = RGBToCMYK_id39(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).a;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(CMYKToRGB_id40(float4(C, M, Y, K)), A);
}
float4 DisplaceHue_id78(inout PS_STREAMS streams)
{
    float H = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).r;
    float S = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).g;
    float V = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).b;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(HSVtoRGB_id37(float3(H, S, V)), A);
}
float4 DisplaceSaturation_id77(inout PS_STREAMS streams)
{
    float H = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).r;
    float S = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).g;
    float V = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).b;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(HSVtoRGB_id37(float3(H, S, V)), A);
}
float4 DisplaceLightness_id76(inout PS_STREAMS streams)
{
    float H = RGBtoHSL_id47(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).r;
    float S = RGBtoHSL_id47(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).g;
    float L = RGBtoHSL_id47(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).b;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(HSLtoRGB_id38(float3(H, S, L)), A);
}
float4 DisplaceValue_id75(inout PS_STREAMS streams)
{
    float H = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).r;
    float S = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).rgb).g;
    float V = RGBtoHSV_id46(Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rgb).b;
    float A = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0).a;
    return float4(HSVtoRGB_id37(float3(H, S, V)), A);
}
float4 DisplaceGreenBlue_id74(inout PS_STREAMS streams)
{
    float2 greenBlue = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).gb;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(col.r, greenBlue.x, greenBlue.y, col.a);
}
float4 DisplaceRedBlue_id73(inout PS_STREAMS streams)
{
    float2 redBlue = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rb;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(redBlue.x, col.g, redBlue.y, col.a);
}
float4 DisplaceRedGreen_id72(inout PS_STREAMS streams)
{
    float2 redGreen = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).rg;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(redGreen.x, redGreen.y, col.b, col.a);
}
float4 DisplaceBlue_id71(inout PS_STREAMS streams)
{
    float blue = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).b;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(col.r, col.g, blue, col.a);
}
float4 DisplaceGreen_id70(inout PS_STREAMS streams)
{
    float green = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).g;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(col.r, green, col.b, col.a);
}
float4 DisplaceRed_id69(inout PS_STREAMS streams)
{
    float red = Texture0_id14.SampleLevel(LinearSampler_id44, OffsetUV_id85(streams), 0).r;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, streams.TexCoord_id62, 0);
    return float4(red, col.g, col.b, col.a);
}
float4 Compute_id86()
{
    return InputValue_id98;
}
float4 Filter_id84(inout PS_STREAMS streams, float4 tex0col)
{
    float4 c;
    switch (type_id97)

    {
        case 0:
            c = DisplaceRed_id69(streams);
            break;
        case 1:
            c = DisplaceGreen_id70(streams);
            break;
        case 2:
            c = DisplaceBlue_id71(streams);
            break;
        case 3:
            c = DisplaceRedGreen_id72(streams);
            break;
        case 4:
            c = DisplaceRedBlue_id73(streams);
            break;
        case 5:
            c = DisplaceGreenBlue_id74(streams);
            break;
        case 6:
            c = DisplaceValue_id75(streams);
            break;
        case 7:
            c = DisplaceLightness_id76(streams);
            break;
        case 8:
            c = DisplaceSaturation_id77(streams);
            break;
        case 9:
            c = DisplaceHue_id78(streams);
            break;
        case 10:
            c = DisplaceCyan_id79(streams);
            break;
        case 11:
            c = DisplaceMagenta_id80(streams);
            break;
        case 12:
            c = DisplaceYellow_id81(streams);
            break;
        case 13:
            c = DisplaceBlack_id82(streams);
            break;
        case 14:
            c = DisplaceAlpha_id83(streams);
            break;
    }
    return c;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id84(streams, col), Compute_id86());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
