/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Droste_Internal_TextureFX [{Center = InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>}, {Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {Time = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {Twirl = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P Time: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P Center: InputFloat2<ShaderFX.InputValueFloat2.i1,PerUpdate>
@P Twirl: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 48]
@C    InputValue_id99 => ShaderFX.InputValueFloat4
@C    InputValue_id100 => ShaderFX.InputValueFloat2.i1
@C    InputValue_id101 => ShaderFX.InputValueFloat2
@C    InputValue_id102 => ShaderFX.InputValueFloat
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Iteration_id97 => Droste_Internal_TextureFX.Iteration
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (0-0)]
@R    LinearMirrorSampler_id98 => Droste_Internal_TextureFX.LinearMirrorSampler [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Droste_Internal_TextureFX => fed45d7e5846bc7eec8998c343d5bfbf
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    TextureUtils => 3b321ac8393acfe8eb5c1ca710073e6b
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 254 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_49018fe4a6e281d1225c3eac29fe9ffd.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 258
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 2859ad91514f02d52856f796d66edcd4
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id99;            // Offset:    0 Size:    16
//   float2 InputValue_id100;           // Offset:   16 Size:     8
//   float2 InputValue_id101;           // Offset:   24 Size:     8
//   float InputValue_id102;            // Offset:   32 Size:     4
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int2 Iteration_id97;               // Offset:   80 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler0_id52                     sampler      NA          NA             s0      1 
// LinearMirrorSampler_id98          sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 212 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_49018fe4a6e281d1225c3eac29fe9ffd.hlsl"
add r0.xy, v1.xyxx, -cb0[1].xyxx
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)  // r0.x <- tc.x; r0.y <- tc.y

#line 219
max r0.z, |r0.x|, |r0.y|
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
min r0.w, |r0.x|, |r0.y|
mul r0.z, r0.z, r0.w
mul r0.w, r0.z, r0.z
mad r1.x, r0.w, l(0.020835), l(-0.085133)
mad r1.x, r0.w, r1.x, l(0.180141)
mad r1.x, r0.w, r1.x, l(-0.330299)
mad r0.w, r0.w, r1.x, l(0.999866)
mul r1.x, r0.w, r0.z
mad r1.x, r1.x, l(-2.000000), l(1.570796)
lt r1.y, |r0.x|, |r0.y|
and r1.x, r1.y, r1.x
mad r0.z, r0.z, r0.w, r1.x
lt r0.w, r0.x, -r0.x
and r0.w, r0.w, l(0xc0490fdb)
add r0.z, r0.w, r0.z
min r0.w, r0.x, -r0.y
lt r0.w, r0.w, -r0.w
max r1.x, r0.x, -r0.y

#line 220
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x  // r0.x <- r

#line 222
log r0.x, r0.x
mul r0.x, r0.x, l(0.693147)  // r0.x <- fv

#line 219
ge r0.y, r1.x, -r1.x
and r0.y, r0.y, r0.w
movc r0.y, r0.y, -r0.z, r0.z  // r0.y <- a

#line 211
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[2].x  // r0.z <- lo

#line 214
itof r1.xy, cb1[5].yxyy
mul r0.w, r0.z, r1.y  // r0.w <- v_corner

#line 213
mul r1.x, r1.x, l(6.283185)  // r1.x <- u_corner

#line 215
mul r1.y, r0.w, r0.w
mad r1.y, r1.x, r1.x, r1.y
sqrt r1.y, r1.y  // r1.y <- diag

#line 216
div r0.w, r0.w, r1.y  // r0.w <- sin_a

#line 217
div r1.x, r1.x, r1.y  // r1.x <- cos_a

#line 218
mul r1.y, r1.y, l(0.159155)  // r1.y <- scale

#line 224
mul r1.z, r0.x, r1.x

#line 223
mul r0.x, r0.w, r0.x

#line 224
mad r0.w, -r0.y, r0.w, r1.z

#line 223
mad r0.x, r0.y, r1.x, r0.x
mul r0.xy, r1.yyyy, r0.xwxx  // r0.y <- fv; r0.x <- tmp

#line 227
div r1.y, r0.y, r0.z  // r1.y <- fv

#line 226
mul r1.x, r0.x, l(0.159155)  // r1.x <- fu

#line 228
add r0.xy, r1.xyxx, -cb0[1].zwzz

#line 190
resinfo_indexable(texture2d)(float,float,float,float) r0.zw, l(0), t0.zwxy  // r0.z <- w; r0.w <- h

#line 167
mad r1.xy, r0.xyxx, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)  // r1.x <- w.x; r1.y <- w.y

#line 166
div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r0.zwzz  // r2.x <- pix.x; r2.y <- pix.y

#line 152
frc r0.zw, r1.xxxy  // r0.w <- x

#line 153
add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)

#line 154
mul r1.xyzw, r0.zzww, r0.zzww  // r1.w <- x2

#line 157
mul r3.xyzw, r1.xyzw, l(3.000000, 6.000000, 3.000000, 6.000000)

#line 155
mul r4.xyzw, r0.zzzw, r1.yyyw  // r4.w <- x3

#line 156
mad r1.xy, r1.xzxx, l(3.000000, 3.000000, 0.000000, 0.000000), -r4.zwzz
mad r1.xy, -r0.zwzz, l(3.000000, 3.000000, 0.000000, 0.000000), r1.xyxx

#line 158
mad r1.z, r4.w, l(-3.000000), r3.z
mad r1.z, r0.w, l(3.000000), r1.z

#line 156
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 159
mul r1.w, r4.w, l(0.166667)  // r1.w <- w3

#line 161
mad r1.z, r1.z, l(0.166667), r1.w
div r1.z, r1.w, r1.z
add r1.z, r1.z, l(1.000000)

#line 158
mad r1.w, r4.y, l(-3.000000), r3.x

#line 157
mad r3.xy, r4.xwxx, l(3.000000, 3.000000, 0.000000, 0.000000), -r3.ywyy
mul r2.w, r4.z, l(0.166667)  // r2.w <- w3; r2.w <- w3
add r3.xy, r3.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)  // r3.y <- w1; r3.y <- w1

#line 158
mad r1.w, r0.z, l(3.000000), r1.w
add r1.w, r1.w, l(1.000000)

#line 161
mad r1.w, r1.w, l(0.166667), r2.w
div r1.w, r2.w, r1.w
add r1.w, r1.w, l(1.000000)
add r1.zw, -r0.wwwz, r1.zzzw  // r1.w <- h1

#line 173
mul r4.z, r2.x, r1.w
mov r4.yw, l(0,0,0,0)
add r3.zw, r0.xxxy, -r4.zzzw  // r3.z <- coord_source00.x; r3.w <- coord_source00.y

#line 174
mov r2.z, l(0)

#line 177
mad r4.zw, -r1.zzzz, r2.zzzy, r3.zzzw  // r4.z <- coord_source00.x; r4.w <- coord_source00.y

#line 178
sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.zwzz, t0.xyzw, s1, l(0.000000)  // r5.x <- tex_source00.x; r5.y <- tex_source00.y; r5.z <- tex_source00.z; r5.w <- tex_source00.w

#line 160
mad r1.xy, r1.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000), r3.xyxx
div r3.xy, r3.xyxx, r1.xyxx
add r0.zw, r0.zzzw, -r3.xxxy
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)  // r0.w <- h0

#line 175
mad r3.xy, r0.wwww, r2.zyzz, r3.zwzz  // r3.x <- coord_source01.x; r3.y <- coord_source01.y

#line 180
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t0.xyzw, s1, l(0.000000)  // r3.x <- tex_source01.x; r3.y <- tex_source01.y; r3.z <- tex_source01.z; r3.w <- tex_source01.w

#line 182
add r3.xyzw, -r5.xyzw, r3.xyzw
mad r3.xyzw, r1.yyyy, r3.xyzw, r5.xyzw  // r3.x <- tex_source00.x; r3.y <- tex_source00.y; r3.z <- tex_source00.z; r3.w <- tex_source00.w

#line 172
mul r4.x, r2.x, r0.z
add r0.xy, r0.xyxx, r4.xyxx  // r0.x <- coord_source10.x; r0.y <- coord_source10.y

#line 174
mad r0.zw, r0.wwww, r2.zzzy, r0.xxxy  // r0.z <- coord_source11.x; r0.w <- coord_source11.y

#line 176
mad r0.xy, -r1.zzzz, r2.zyzz, r0.xyxx

#line 179
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t0.xyzw, s1, l(0.000000)  // r2.x <- tex_source10.x; r2.y <- tex_source10.y; r2.z <- tex_source10.z; r2.w <- tex_source10.w

#line 181
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.zwzz, t0.xyzw, s1, l(0.000000)  // r0.x <- tex_source11.x; r0.y <- tex_source11.y; r0.z <- tex_source11.z; r0.w <- tex_source11.w

#line 183
add r0.xyzw, -r2.xyzw, r0.xyzw
mad r0.xyzw, r1.yyyy, r0.xyzw, r2.xyzw  // r0.x <- tex_source10.x; r0.y <- tex_source10.y; r0.z <- tex_source10.z; r0.w <- tex_source10.w

#line 184
add r0.xyzw, -r3.xyzw, r0.xyzw
mad r0.xyzw, r1.xxxx, r0.xyzw, r3.xyzw  // r0.x <- tex_source00.x; r0.y <- tex_source00.y; r0.z <- tex_source00.z; r0.w <- tex_source00.w

#line 233
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- <InTex0_id26 return value>.x; r1.y <- <InTex0_id26 return value>.y; r1.z <- <InTex0_id26 return value>.z; r1.w <- <InTex0_id26 return value>.w

#line 238
add r0.xyzw, r0.xyzw, -r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r0.xyzw, r1.xyzw

#line 247
ret 
// Approximately 103 instruction slots used
***************************
*************************/
static const float Pi_id79 = 3.1415926535897932384626433832795;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id99;
    float2 InputValue_id100;
    float2 InputValue_id101;
    float InputValue_id102;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int2 Iteration_id97;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
Texture2D BicubicFilterKernel_id88;
SamplerState LinearMirrorSampler_id98 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Mirror;
    AddressV = Mirror;
};
float3 BSplineFilter_id32(float x)
{
    x = frac(x);
    x = 1 - x;
    float x2 = x * x;
    float x3 = x2 * x;
    float w0 = (-x3 + 3 * x2 - 3 * x + 1) / 6.0;
    float w1 = (3 * x3 - 6 * x2 + 4) / 6.0;
    float w2 = (-3 * x3 + 3 * x2 + 3 * x + 1) / 6.0;
    float w3 = x3 / 6.0;
    float h0 = 1 - w1 / (w0 + w1) + x;
    float h1 = 1 + w3 / (w2 + w3) - x;
    return float3(h0, h1, w0 + w1);
}
float4 SampleTextureBicubic_id30(in Texture2D tex, in SamplerState linearSampler, in float2 uv, in float2 texSize)
{
    float2 pix = 1.0 / texSize;
    float2 w = uv * texSize - 0.5;
    float3 hg_x = BSplineFilter_id32(w.x);
    float3 hg_y = BSplineFilter_id32(w.y);
    float2 e_x = float2(pix.x, 0);
    float2 e_y = float2(0, pix.y);
    float2 coord_source10 = uv + hg_x.x * e_x;
    float2 coord_source00 = uv - hg_x.y * e_x;
    float2 coord_source11 = coord_source10 + hg_y.x * e_y;
    float2 coord_source01 = coord_source00 + hg_y.x * e_y;
    coord_source10 = coord_source10 - hg_y.y * e_y;
    coord_source00 = coord_source00 - hg_y.y * e_y;
    float4 tex_source00 = tex.SampleLevel(linearSampler, coord_source00, 0);
    float4 tex_source10 = tex.SampleLevel(linearSampler, coord_source10, 0);
    float4 tex_source01 = tex.SampleLevel(linearSampler, coord_source01, 0);
    float4 tex_source11 = tex.SampleLevel(linearSampler, coord_source11, 0);
    tex_source00 = lerp(tex_source00, tex_source01, hg_y.z);
    tex_source10 = lerp(tex_source10, tex_source11, hg_y.z);
    tex_source00 = lerp(tex_source00, tex_source10, hg_x.z);
    return tex_source00;
}
float4 SampleCubicBSpline_id31(in Texture2D tex, in SamplerState linearSampler, in float2 uv)
{
    float w, h;
    tex.GetDimensions(w, h);
    return SampleTextureBicubic_id30(tex, linearSampler, uv, float2(w, h));
}
float2 Compute_id48()
{
    return InputValue_id101;
}
float2 Compute_id47()
{
    return InputValue_id100;
}
float Compute_id46()
{
    return InputValue_id102;
}
float4 Compute_id45()
{
    return InputValue_id99;
}
float4 Filter_id44(inout PS_STREAMS streams, float4 tex0col)
{
    float lo = 1 / Compute_id46();
    float2 tc = streams.TexCoord_id62 - Compute_id47() - 0.5;
    float u_corner = 2.0 * Pi_id79 * Iteration_id97.y;
    float v_corner = lo * Iteration_id97.x;
    float diag = sqrt(u_corner * u_corner + v_corner * v_corner);
    float sin_a = v_corner / diag;
    float cos_a = u_corner / diag;
    float scale = diag / 2.0 / Pi_id79;
    float a = atan2(-tc.y, tc.x);
    float r = sqrt(tc.x * tc.x + tc.y * tc.y);
    float fu = a;
    float fv = log(r);
    float tmp = (fu * cos_a + fv * sin_a) * scale;
    fv = (-fu * sin_a + fv * cos_a) * scale;
    fu = tmp;
    fu /= 2.0 * Pi_id79;
    fv /= lo;
    float4 col = SampleCubicBSpline_id31(Texture0_id14, LinearMirrorSampler_id98, float2(fu, fv) - Compute_id48());
    return col;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id44(streams, col), Compute_id45());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
