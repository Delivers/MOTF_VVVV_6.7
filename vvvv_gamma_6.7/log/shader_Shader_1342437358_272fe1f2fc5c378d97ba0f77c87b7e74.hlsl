/**************************
***** Compiler Parameters *****
***************************
@P EffectName: Shader_1342437358
***************************
****  ConstantBuffers  ****
***************************
cbuffer Inputs [Size: 16]
@C    input_251264840_id48 => input_251264840
cbuffer PerDraw [Size: 416]
@C    World_id24 => Transformation.World
@C    WorldInverse_id25 => Transformation.WorldInverse
@C    WorldInverseTranspose_id26 => Transformation.WorldInverseTranspose
@C    WorldView_id27 => Transformation.WorldView
@C    WorldViewInverse_id28 => Transformation.WorldViewInverse
@C    WorldViewProjection_id29 => Transformation.WorldViewProjection
@C    WorldScale_id30 => Transformation.WorldScale
@C    EyeMS_id31 => Transformation.EyeMS
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Inputs => Inputs [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Shader_1342437358 => 478c5d2d5cdc6c517c9f3c120a0bd894
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    FuseCoreColor => 624cbdd22df76682ced5fac46493655a
@S    FuseCoreMathMap => a3c63d7e99620b0750ae90d499eee2ad
@S    FuseCoreMath => b5527ab1f8082f68a6dcc7c3959ee99a
***************************
*****     Stages      *****
***************************
@G    Vertex => 05d3756015822eb93de17dbe0fe22bbb
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id24;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id25;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id26;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id27;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id28;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id29; // Offset:  320 Size:    64
//   float3 WorldScale_id30;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id31;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.meshNormal_id32.x; v1.y <- __input__.meshNormal_id32.y; v1.z <- __input__.meshNormal_id32.z; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 97 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_Shader_1342437358_272fe1f2fc5c378d97ba0f77c87b7e74.hlsl"
dp4 o0.x, v0.xyzw, cb0[20].xyzw
dp4 o0.y, v0.xyzw, cb0[21].xyzw
dp4 o0.z, v0.xyzw, cb0[22].xyzw
dp4 o0.w, v0.xyzw, cb0[23].xyzw

#line 105
ret 
// Approximately 5 instruction slots used
@G    Pixel => 9078cdb6871792b34d8f6456d705f43e
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Inputs
// {
//
//   float4 input_251264840_id48;       // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Inputs                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 83 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_Shader_1342437358_272fe1f2fc5c378d97ba0f77c87b7e74.hlsl"
mov_sat r0.xyzw, cb0[0].xyzw  // r0.x <- saturate_236450729.x; r0.y <- saturate_236450729.y; r0.z <- saturate_236450729.z; r0.w <- saturate_236450729.w

#line 65
mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
mul o0.xyz, r0.xyzx, r1.xyzx

#line 88
mov o0.w, r0.w
ret 
// Approximately 6 instruction slots used
***************************
*************************/
static const float PI_id39 = 3.1415926535897;
struct PS_STREAMS 
{
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float3 meshNormal_id32;
    float4 PositionWS_id15;
    float3 normalWS_id35;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float3 meshNormal_id32 : NORMAL;
};
cbuffer Inputs 
{
    float4 input_251264840_id48;
};
cbuffer PerDraw 
{
    float4x4 World_id24;
    float4x4 WorldInverse_id25;
    float4x4 WorldInverseTranspose_id26;
    float4x4 WorldView_id27;
    float4x4 WorldViewInverse_id28;
    float4x4 WorldViewProjection_id29;
    float3 WorldScale_id30;
    float4 EyeMS_id31;
};
cbuffer PerView 
{
    float4x4 View_id17;
    float4x4 ViewInverse_id18;
    float4x4 Projection_id19;
    float4x4 ProjectionInverse_id20;
    float4x4 ViewProjection_id21;
    float2 ProjScreenRay_id22;
    float4 Eye_id23;
};
float map_id105(float input, float InMin, float InMax, float OutMin, float OutMax)
{
    float range = InMax - InMin;
    float normalized = (input - InMin) / range;
    return OutMin + normalized * (OutMax - OutMin);
}
float4 SRGBToLinear_id14(float4 sRGBa)
{
    float3 sRGB = sRGBa.rgb;
    return float4(sRGB * (sRGB * (sRGB * 0.305306011 + 0.682171111) + 0.012522878), sRGBa.a);
}
float3 map_id110(float3 input, float3 InMin, float3 InMax, float3 OutMin, float3 OutMax)
{
    float3 vec;
    vec.x = map_id105(input.x, InMin.x, InMax.x, OutMin.x, OutMax.x);
    vec.y = map_id105(input.y, InMin.y, InMax.y, OutMin.y, OutMax.y);
    vec.z = map_id105(input.z, InMin.z, InMax.z, OutMin.z, OutMax.z);
    return vec;
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    float4 ToFloat_1051522515 = input_251264840_id48;
    float3 ToFloatXyz_3140056662 = ToFloat_1051522515.xyz;
    float3 map_1388833912 = map_id110(ToFloatXyz_3140056662, float3(0, 0, 0), float3(1, 1, 1), float3(0, 0, 0), float3(1, 1, 1));
    float ToFloatW_1376210349 = ToFloat_1051522515.w;
    float4 join_1885162271 = float4(map_1388833912, ToFloatW_1376210349);
    float4 saturate_236450729 = saturate(join_1885162271);
    float4 SRGBToLinear_2001851116 = SRGBToLinear_id14(saturate_236450729);
    streams.ColorTarget_id2 = SRGBToLinear_2001851116;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.meshNormal_id32 = __input__.meshNormal_id32;
    float4 mul_820006008 = mul(streams.Position_id14, World_id24);
    streams.PositionWS_id15 = mul_820006008;
    float4 mul_417313125 = mul(streams.Position_id14, WorldViewProjection_id29);
    streams.ShadingPosition_id0 = mul_417313125;
    float4 join_3023611432 = float4(streams.meshNormal_id32, 0);
    float4 mul_3884069756 = mul(join_3023611432, WorldInverseTranspose_id26);
    float3 mulXyz_3382797443 = mul_3884069756.xyz;
    streams.normalWS_id35 = mulXyz_3382797443;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    return __output__;
}
