/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:8 Y:8 Z:8
@P EffectNodeBase.EffectNodeBaseShader: mixin ComputeFXGraph [{Root = mixin ComputeOrder [{Computes = [Shader_603409308]}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDispatch [Size: 48]
@C    ThreadGroupCountGlobal_id10 => ComputeShaderBase.ThreadGroupCountGlobal
@C    input_838590723_id16 => input_838590723
@C    input_998029194_id17 => input_998029194
@C    input_4269300702_id18 => input_4269300702
***************************
******  Resources    ******
***************************
@R    TextureInput_1224669504_id13 => TextureInput_1224669504 [Stage: Compute, Slot: (0-0)]
@R    TextureInput_2957714998_id14 => TextureInput_2957714998 [Stage: Compute, Slot: (1-1)]
@R    TextureInput_1977525341_id15 => TextureInput_1977525341 [Stage: Compute, Slot: (0-0)]
@R    PerDispatch => PerDispatch [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    ComputeFXGraph => dca3deb94a1ea6d5babe444153dee98b
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    Shader_603409308 => 92feec5cce14afd17ced1820cc6ca695
***************************
*****     Stages      *****
***************************
@G    Compute => 4378cfef6bc04ddc720459207b95b0b5
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDispatch
// {
//
//   int3 ThreadGroupCountGlobal_id10;  // Offset:    0 Size:    12 [unused]
//   int3 input_838590723_id16;         // Offset:   16 Size:    12
//   float input_998029194_id17;        // Offset:   28 Size:     4 [unused]
//   float3 input_4269300702_id18;      // Offset:   32 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TextureInput_1224669504_id13      texture   float          3d             t0      1 
// TextureInput_2957714998_id14      texture  float4          3d             t1      1 
// TextureInput_1977525341_id15          UAV   float          3d             u0      1 
// PerDispatch                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 2
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 38 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_d587409e198d0c7165a8246b97b2c06a.hlsl"
ige r0.xyz, vThreadID.xyzx, cb0[1].xyzx  // r0.x <- Assign_3689940353; r0.y <- Assign_1627392202; r0.z <- Assign_1774890877

#line 39
or r0.x, r0.y, r0.x
or r0.x, r0.z, r0.x  // r0.x <- result_1149744962

#line 44
if_z r0.x

#line 53
  iadd r0.xyz, vThreadID.xyzx, l(1, 0, 0, 0)  // r0.x <- result_63455474.x; r0.y <- result_63455474.y; r0.z <- result_63455474.z

#line 54
  mov r0.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.x, r0.xyzw, t0.xyzw  // r1.x <- getTextureValue_3423481930

#line 55
  lt r1.x, l(0.000000), r1.x  // r1.x <- Assign_2589733827

#line 57
  ld_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzw, t1.xyzw  // r0.x <- getTextureValue_591820680.x

#line 62
  movc r0.x, r1.x, l(0), r0.x  // r0.x <- output_114065982.x

#line 64
  iadd r1.xyz, vThreadID.xyzx, l(-1, 0, 0, 0)  // r1.x <- result_2459598187.x; r1.y <- result_2459598187.y; r1.z <- result_2459598187.z

#line 65
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw  // r0.y <- getTextureValue_3957110787

#line 66
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_3444246866

#line 68
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t1.yzxw  // r0.z <- getTextureValue_1280293205.x

#line 75
  movc r0.y, r0.y, l(-0.000000), -r0.z
  add r0.x, r0.y, r0.x  // r0.x <- result_1865274428

#line 76
  iadd r1.xyz, vThreadID.xyzx, l(0, 1, 0, 0)  // r1.x <- result_2573664546.x; r1.y <- result_2573664546.y; r1.z <- result_2573664546.z

#line 77
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw  // r0.y <- getTextureValue_629083942

#line 78
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_1412817355

#line 80
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t1.xzyw  // r0.z <- getTextureValue_409740324.y

#line 85
  movc r0.y, r0.y, l(0), r0.z  // r0.y <- output_2031031464.y

#line 87
  iadd r1.xyz, vThreadID.xyzx, l(0, -1, 0, 0)  // r1.x <- result_4123098483.x; r1.y <- result_4123098483.y; r1.z <- result_4123098483.z

#line 88
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t0.yzxw  // r0.z <- getTextureValue_3775200315

#line 89
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_2625430933

#line 91
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t1.xzwy  // r0.w <- getTextureValue_1976046109.y

#line 98
  movc r0.z, r0.z, l(-0.000000), -r0.w
  add r0.y, r0.z, r0.y  // r0.y <- result_1343528813

#line 99
  iadd r1.xyz, vThreadID.xyzx, l(0, 0, 1, 0)  // r1.x <- result_2911154308.x; r1.y <- result_2911154308.y; r1.z <- result_2911154308.z

#line 100
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t0.yzxw  // r0.z <- getTextureValue_4150551400

#line 101
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_1877549622

#line 103
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t1.xywz  // r0.w <- getTextureValue_3336316462.z

#line 108
  movc r0.z, r0.z, l(0), r0.w  // r0.z <- output_3165720055.z

#line 110
  iadd r1.xyz, vThreadID.xyzx, l(0, 0, -1, 0)  // r1.x <- result_2416008491.x; r1.y <- result_2416008491.y; r1.z <- result_2416008491.z

#line 111
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t0.yzwx  // r0.w <- getTextureValue_4081312195

#line 112
  lt r0.w, l(0.000000), r0.w  // r0.w <- Assign_3741962596

#line 114
  ld_indexable(texture3d)(float,float,float,float) r1.x, r1.xyzw, t1.zxyw  // r1.x <- getTextureValue_1634435673.z

#line 121
  movc r0.w, r0.w, l(-0.000000), -r1.x
  add r0.xz, r0.yywy, r0.xxzx  // r0.z <- result_321618393

#line 122
  add r0.x, r0.z, r0.x  // r0.x <- result_1812809311

#line 123
  mul r0.x, r0.x, l(0.500000)  // r0.x <- result_1653504809

#line 125
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xxxx
endif 

#line 151
ret 
// Approximately 48 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
    int3 input_838590723_id16;
    float input_998029194_id17;
    float3 input_4269300702_id18;
};
Texture3D<float> TextureInput_1359791384_id12;
Texture3D<float> TextureInput_1224669504_id13;
Texture3D<float4> TextureInput_2957714998_id14;
RWTexture3D<float> TextureInput_1977525341_id15;
void Compute_id4(inout CS_STREAMS streams)
{
    int DispatchThreadIdX_2062887072 = streams.DispatchThreadId_id1.x;
    int inputX_181602231 = input_838590723_id16.x;
    bool Assign_3689940353 = DispatchThreadIdX_2062887072 >= inputX_181602231;
    int DispatchThreadIdY_1977333336 = streams.DispatchThreadId_id1.y;
    int inputY_3191009213 = input_838590723_id16.y;
    bool Assign_1627392202 = DispatchThreadIdY_1977333336 >= inputY_3191009213;
    int DispatchThreadIdZ_1073105291 = streams.DispatchThreadId_id1.z;
    int inputZ_1725069496 = input_838590723_id16.z;
    bool Assign_1774890877 = DispatchThreadIdZ_1073105291 >= inputZ_1725069496;
    bool result_1149744962 = (Assign_3689940353 || Assign_1627392202 || Assign_1774890877);
    if (result_1149744962)
    {
        return;
    }
    float divergence_977671682 = TextureInput_1359791384_id12[streams.DispatchThreadId_id1];
    float obstacle_2320042252 = TextureInput_1224669504_id13[streams.DispatchThreadId_id1];
    float4 velocity_271962606 = TextureInput_2957714998_id14[streams.DispatchThreadId_id1];
    float deltatime_1779043365 = 0;
    deltatime_1779043365 = input_998029194_id17;
    int3 index_2031515754 = int3(0, 0, 0);
    index_2031515754 = streams.DispatchThreadId_id1;
    float3 resourcescale_887839023 = float3(0, 0, 0);
    resourcescale_887839023 = input_4269300702_id18;
    int3 result_63455474 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_3423481930 = TextureInput_1224669504_id13[result_63455474];
    bool Assign_2589733827 = getTextureValue_3423481930 > 0;
    int3 result_3076313180 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float4 getTextureValue_591820680 = TextureInput_2957714998_id14[result_3076313180];
    float4 output_114065982 = getTextureValue_591820680;
    if (Assign_2589733827)
    {
        output_114065982 = float4(0, 0, 0, 0);
    }
    float AddOutputX_1561752531 = output_114065982.x;
    int3 result_2459598187 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_3957110787 = TextureInput_1224669504_id13[result_2459598187];
    bool Assign_3444246866 = getTextureValue_3957110787 > 0;
    int3 result_2597040369 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float4 getTextureValue_1280293205 = TextureInput_2957714998_id14[result_2597040369];
    float4 output_467013293 = getTextureValue_1280293205;
    if (Assign_3444246866)
    {
        output_467013293 = float4(0, 0, 0, 0);
    }
    float AddOutputX_3246203608 = output_467013293.x;
    float result_1865274428 = (AddOutputX_1561752531 - AddOutputX_3246203608);
    int3 result_2573664546 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_629083942 = TextureInput_1224669504_id13[result_2573664546];
    bool Assign_1412817355 = getTextureValue_629083942 > 0;
    int3 result_2736707916 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float4 getTextureValue_409740324 = TextureInput_2957714998_id14[result_2736707916];
    float4 output_2031031464 = getTextureValue_409740324;
    if (Assign_1412817355)
    {
        output_2031031464 = float4(0, 0, 0, 0);
    }
    float AddOutputY_1511944710 = output_2031031464.y;
    int3 result_4123098483 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_3775200315 = TextureInput_1224669504_id13[result_4123098483];
    bool Assign_2625430933 = getTextureValue_3775200315 > 0;
    int3 result_2724124393 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float4 getTextureValue_1976046109 = TextureInput_2957714998_id14[result_2724124393];
    float4 output_890485862 = getTextureValue_1976046109;
    if (Assign_2625430933)
    {
        output_890485862 = float4(0, 0, 0, 0);
    }
    float AddOutputY_1037905912 = output_890485862.y;
    float result_1343528813 = (AddOutputY_1511944710 - AddOutputY_1037905912);
    int3 result_2911154308 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_4150551400 = TextureInput_1224669504_id13[result_2911154308];
    bool Assign_1877549622 = getTextureValue_4150551400 > 0;
    int3 result_4124403990 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float4 getTextureValue_3336316462 = TextureInput_2957714998_id14[result_4124403990];
    float4 output_3165720055 = getTextureValue_3336316462;
    if (Assign_1877549622)
    {
        output_3165720055 = float4(0, 0, 0, 0);
    }
    float AddOutputZ_1965972809 = output_3165720055.z;
    int3 result_2416008491 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_4081312195 = TextureInput_1224669504_id13[result_2416008491];
    bool Assign_3741962596 = getTextureValue_4081312195 > 0;
    int3 result_3310174445 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float4 getTextureValue_1634435673 = TextureInput_2957714998_id14[result_3310174445];
    float4 output_4250198659 = getTextureValue_1634435673;
    if (Assign_3741962596)
    {
        output_4250198659 = float4(0, 0, 0, 0);
    }
    float AddOutputZ_1855701198 = output_4250198659.z;
    float result_321618393 = (AddOutputZ_1965972809 - AddOutputZ_1855701198);
    float result_1812809311 = (result_1865274428 + result_1343528813 + result_321618393);
    float result_1653504809 = (result_1812809311 * 0.5);
    divergence_977671682 = result_1653504809;
    TextureInput_1977525341_id15[streams.DispatchThreadId_id1] = divergence_977671682;
}
void Compute_id3(inout CS_STREAMS streams)
{

    {
        Compute_id4(streams);
    }
}
void Compute_id2(inout CS_STREAMS streams)
{
    Compute_id3(streams);
}
[numthreads(8, 8, 8)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 8;
    streams.ThreadCountY_id8 = 8;
    streams.ThreadCountZ_id9 = 8;
    streams.ThreadCountPerGroup_id5 = 8 * 8 * 8;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id2(streams);
}
