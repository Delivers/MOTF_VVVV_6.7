/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:8 Y:8 Z:8
@P EffectNodeBase.EffectNodeBaseShader: mixin ComputeFXGraph [{Root = mixin ComputeOrder [{Computes = [Shader_170934651]}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDispatch [Size: 48]
@C    ThreadGroupCountGlobal_id10 => ComputeShaderBase.ThreadGroupCountGlobal
@C    input_2286105837_id16 => input_2286105837
@C    input_1272746148_id17 => input_1272746148
@C    input_3059956248_id18 => input_3059956248
***************************
******  Resources    ******
***************************
@R    TextureInput_2510865218_id13 => TextureInput_2510865218 [Stage: Compute, Slot: (0-0)]
@R    TextureInput_2669864248_id14 => TextureInput_2669864248 [Stage: Compute, Slot: (1-1)]
@R    TextureInput_2841453535_id15 => TextureInput_2841453535 [Stage: Compute, Slot: (0-0)]
@R    PerDispatch => PerDispatch [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    ComputeFXGraph => dca3deb94a1ea6d5babe444153dee98b
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    Shader_170934651 => 8f6be362a4e8ad4d1e361b7ee7980593
***************************
*****     Stages      *****
***************************
@G    Compute => 4378cfef6bc04ddc720459207b95b0b5
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDispatch
// {
//
//   int3 ThreadGroupCountGlobal_id10;  // Offset:    0 Size:    12 [unused]
//   int3 input_2286105837_id16;        // Offset:   16 Size:    12
//   float input_1272746148_id17;       // Offset:   28 Size:     4 [unused]
//   float3 input_3059956248_id18;      // Offset:   32 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TextureInput_2510865218_id13      texture   float          3d             t0      1 
// TextureInput_2669864248_id14      texture  float4          3d             t1      1 
// TextureInput_2841453535_id15          UAV   float          3d             u0      1 
// PerDispatch                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 2
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 38 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_3a51bf9ff6a0be434821df0a25692ec1.hlsl"
ige r0.xyz, vThreadID.xyzx, cb0[1].xyzx  // r0.x <- Assign_536001411; r0.y <- Assign_3859735600; r0.z <- Assign_42903651

#line 39
or r0.x, r0.y, r0.x
or r0.x, r0.z, r0.x  // r0.x <- result_1581015312

#line 44
if_z r0.x

#line 53
  iadd r0.xyz, vThreadID.xyzx, l(1, 0, 0, 0)  // r0.x <- result_374283672.x; r0.y <- result_374283672.y; r0.z <- result_374283672.z

#line 54
  mov r0.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.x, r0.xyzw, t0.xyzw  // r1.x <- getTextureValue_2406507308

#line 55
  lt r1.x, l(0.000000), r1.x  // r1.x <- Assign_3902894437

#line 57
  ld_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzw, t1.xyzw  // r0.x <- getTextureValue_416668698.x

#line 62
  movc r0.x, r1.x, l(0), r0.x  // r0.x <- output_2248506612.x

#line 64
  iadd r1.xyz, vThreadID.xyzx, l(-1, 0, 0, 0)  // r1.x <- result_3293496253.x; r1.y <- result_3293496253.y; r1.z <- result_3293496253.z

#line 65
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw  // r0.y <- getTextureValue_2081192121

#line 66
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_1408930204

#line 68
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t1.yzxw  // r0.z <- getTextureValue_1207931451.x

#line 75
  movc r0.y, r0.y, l(-0.000000), -r0.z
  add r0.x, r0.y, r0.x  // r0.x <- result_54220698

#line 76
  iadd r1.xyz, vThreadID.xyzx, l(0, 1, 0, 0)  // r1.x <- result_3115034036.x; r1.y <- result_3115034036.y; r1.z <- result_3115034036.z

#line 77
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw  // r0.y <- getTextureValue_1174161692

#line 78
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_3940292717

#line 80
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t1.xzyw  // r0.z <- getTextureValue_954815050.y

#line 85
  movc r0.y, r0.y, l(0), r0.z  // r0.y <- output_1907404126.y

#line 87
  iadd r1.xyz, vThreadID.xyzx, l(0, -1, 0, 0)  // r1.x <- result_3228774509.x; r1.y <- result_3228774509.y; r1.z <- result_3228774509.z

#line 88
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t0.yzxw  // r0.z <- getTextureValue_491736121

#line 89
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_737033523

#line 91
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t1.xzwy  // r0.w <- getTextureValue_2152258603.y

#line 98
  movc r0.z, r0.z, l(-0.000000), -r0.w
  add r0.y, r0.z, r0.y  // r0.y <- result_3089123403

#line 99
  iadd r1.xyz, vThreadID.xyzx, l(0, 0, 1, 0)  // r1.x <- result_1199966622.x; r1.y <- result_1199966622.y; r1.z <- result_1199966622.z

#line 100
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzw, t0.yzxw  // r0.z <- getTextureValue_3744042822

#line 101
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_61901264

#line 103
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t1.xywz  // r0.w <- getTextureValue_1214563164.z

#line 108
  movc r0.z, r0.z, l(0), r0.w  // r0.z <- output_3851208021.z

#line 110
  iadd r1.xyz, vThreadID.xyzx, l(0, 0, -1, 0)  // r1.x <- result_1092986825.x; r1.y <- result_1092986825.y; r1.z <- result_1092986825.z

#line 111
  mov r1.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzw, t0.yzwx  // r0.w <- getTextureValue_464253597

#line 112
  lt r0.w, l(0.000000), r0.w  // r0.w <- Assign_3245523310

#line 114
  ld_indexable(texture3d)(float,float,float,float) r1.x, r1.xyzw, t1.zxyw  // r1.x <- getTextureValue_4049079267.z

#line 121
  movc r0.w, r0.w, l(-0.000000), -r1.x
  add r0.xz, r0.yywy, r0.xxzx  // r0.z <- result_969720727

#line 122
  add r0.x, r0.z, r0.x  // r0.x <- result_1792743629

#line 123
  mul r0.x, r0.x, l(0.500000)  // r0.x <- result_3294614071

#line 125
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xxxx
endif 

#line 151
ret 
// Approximately 48 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
    int3 input_2286105837_id16;
    float input_1272746148_id17;
    float3 input_3059956248_id18;
};
Texture3D<float> TextureInput_1221118746_id12;
Texture3D<float> TextureInput_2510865218_id13;
Texture3D<float4> TextureInput_2669864248_id14;
RWTexture3D<float> TextureInput_2841453535_id15;
void Compute_id4(inout CS_STREAMS streams)
{
    int DispatchThreadIdX_2247141374 = streams.DispatchThreadId_id1.x;
    int inputX_1046803885 = input_2286105837_id16.x;
    bool Assign_536001411 = DispatchThreadIdX_2247141374 >= inputX_1046803885;
    int DispatchThreadIdY_717330578 = streams.DispatchThreadId_id1.y;
    int inputY_3027621359 = input_2286105837_id16.y;
    bool Assign_3859735600 = DispatchThreadIdY_717330578 >= inputY_3027621359;
    int DispatchThreadIdZ_2793580973 = streams.DispatchThreadId_id1.z;
    int inputZ_1984482882 = input_2286105837_id16.z;
    bool Assign_42903651 = DispatchThreadIdZ_2793580973 >= inputZ_1984482882;
    bool result_1581015312 = (Assign_536001411 || Assign_3859735600 || Assign_42903651);
    if (result_1581015312)
    {
        return;
    }
    float divergence_169094072 = TextureInput_1221118746_id12[streams.DispatchThreadId_id1];
    float obstacle_480588738 = TextureInput_2510865218_id13[streams.DispatchThreadId_id1];
    float4 velocity_2716743372 = TextureInput_2669864248_id14[streams.DispatchThreadId_id1];
    float deltatime_2286738883 = 0;
    deltatime_2286738883 = input_1272746148_id17;
    int3 index_3055044744 = int3(0, 0, 0);
    index_3055044744 = streams.DispatchThreadId_id1;
    float3 resourcescale_1794605005 = float3(0, 0, 0);
    resourcescale_1794605005 = input_3059956248_id18;
    int3 result_374283672 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_2406507308 = TextureInput_2510865218_id13[result_374283672];
    bool Assign_3902894437 = getTextureValue_2406507308 > 0;
    int3 result_992301906 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float4 getTextureValue_416668698 = TextureInput_2669864248_id14[result_992301906];
    float4 output_2248506612 = getTextureValue_416668698;
    if (Assign_3902894437)
    {
        output_2248506612 = float4(0, 0, 0, 0);
    }
    float AddOutputX_2087199005 = output_2248506612.x;
    int3 result_3293496253 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_2081192121 = TextureInput_2510865218_id13[result_3293496253];
    bool Assign_1408930204 = getTextureValue_2081192121 > 0;
    int3 result_78447635 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float4 getTextureValue_1207931451 = TextureInput_2669864248_id14[result_78447635];
    float4 output_3375226619 = getTextureValue_1207931451;
    if (Assign_1408930204)
    {
        output_3375226619 = float4(0, 0, 0, 0);
    }
    float AddOutputX_3073385118 = output_3375226619.x;
    float result_54220698 = (AddOutputX_2087199005 - AddOutputX_3073385118);
    int3 result_3115034036 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_1174161692 = TextureInput_2510865218_id13[result_3115034036];
    bool Assign_3940292717 = getTextureValue_1174161692 > 0;
    int3 result_320153262 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float4 getTextureValue_954815050 = TextureInput_2669864248_id14[result_320153262];
    float4 output_1907404126 = getTextureValue_954815050;
    if (Assign_3940292717)
    {
        output_1907404126 = float4(0, 0, 0, 0);
    }
    float AddOutputY_4020750596 = output_1907404126.y;
    int3 result_3228774509 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_491736121 = TextureInput_2510865218_id13[result_3228774509];
    bool Assign_737033523 = getTextureValue_491736121 > 0;
    int3 result_3046104019 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float4 getTextureValue_2152258603 = TextureInput_2669864248_id14[result_3046104019];
    float4 output_1598517872 = getTextureValue_2152258603;
    if (Assign_737033523)
    {
        output_1598517872 = float4(0, 0, 0, 0);
    }
    float AddOutputY_28517634 = output_1598517872.y;
    float result_3089123403 = (AddOutputY_4020750596 - AddOutputY_28517634);
    int3 result_1199966622 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_3744042822 = TextureInput_2510865218_id13[result_1199966622];
    bool Assign_61901264 = getTextureValue_3744042822 > 0;
    int3 result_2773031136 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float4 getTextureValue_1214563164 = TextureInput_2669864248_id14[result_2773031136];
    float4 output_3851208021 = getTextureValue_1214563164;
    if (Assign_61901264)
    {
        output_3851208021 = float4(0, 0, 0, 0);
    }
    float AddOutputZ_957899079 = output_3851208021.z;
    int3 result_1092986825 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_464253597 = TextureInput_2510865218_id13[result_1092986825];
    bool Assign_3245523310 = getTextureValue_464253597 > 0;
    int3 result_631430875 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float4 getTextureValue_4049079267 = TextureInput_2669864248_id14[result_631430875];
    float4 output_1226240785 = getTextureValue_4049079267;
    if (Assign_3245523310)
    {
        output_1226240785 = float4(0, 0, 0, 0);
    }
    float AddOutputZ_3233751648 = output_1226240785.z;
    float result_969720727 = (AddOutputZ_957899079 - AddOutputZ_3233751648);
    float result_1792743629 = (result_54220698 + result_3089123403 + result_969720727);
    float result_3294614071 = (result_1792743629 * 0.5);
    divergence_169094072 = result_3294614071;
    TextureInput_2841453535_id15[streams.DispatchThreadId_id1] = divergence_169094072;
}
void Compute_id3(inout CS_STREAMS streams)
{

    {
        Compute_id4(streams);
    }
}
void Compute_id2(inout CS_STREAMS streams)
{
    Compute_id3(streams);
}
[numthreads(8, 8, 8)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 8;
    streams.ThreadCountY_id8 = 8;
    streams.ThreadCountZ_id9 = 8;
    streams.ThreadCountPerGroup_id5 = 8 * 8 * 8;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id2(streams);
}
