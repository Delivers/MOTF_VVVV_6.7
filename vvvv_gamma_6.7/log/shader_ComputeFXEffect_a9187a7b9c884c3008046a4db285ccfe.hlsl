/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:8 Y:8 Z:8
@P EffectNodeBase.EffectNodeBaseShader: mixin ComputeFXGraph [{Root = mixin ComputeOrder [{Computes = [Shader_769743373]}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDispatch [Size: 48]
@C    ThreadGroupCountGlobal_id10 => ComputeShaderBase.ThreadGroupCountGlobal
@C    input_4027469542_id16 => input_4027469542
@C    input_2440185535_id17 => input_2440185535
@C    input_1699802675_id18 => input_1699802675
***************************
******  Resources    ******
***************************
@R    TextureInput_3674091956_id12 => TextureInput_3674091956 [Stage: Compute, Slot: (0-0)]
@R    TextureInput_2990988801_id13 => TextureInput_2990988801 [Stage: Compute, Slot: (1-1)]
@R    TextureInput_3602538457_id14 => TextureInput_3602538457 [Stage: Compute, Slot: (2-2)]
@R    TextureInput_1572531349_id15 => TextureInput_1572531349 [Stage: Compute, Slot: (0-0)]
@R    PerDispatch => PerDispatch [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    ComputeFXGraph => dca3deb94a1ea6d5babe444153dee98b
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    Shader_769743373 => d523523dac6d8ebaf0015f99b4674a7d
***************************
*****     Stages      *****
***************************
@G    Compute => 90aeecb26eb7a8b9017cec4ac8e83a09
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDispatch
// {
//
//   int3 ThreadGroupCountGlobal_id10;  // Offset:    0 Size:    12 [unused]
//   int3 input_4027469542_id16;        // Offset:   16 Size:    12
//   float input_2440185535_id17;       // Offset:   28 Size:     4 [unused]
//   float3 input_1699802675_id18;      // Offset:   32 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TextureInput_3674091956_id12      texture   float          3d             t0      1 
// TextureInput_2990988801_id13      texture   float          3d             t1      1 
// TextureInput_3602538457_id14      texture   float          3d             t2      1 
// TextureInput_1572531349_id15          UAV   float          3d             u0      1 
// PerDispatch                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 3
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 38 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_a9187a7b9c884c3008046a4db285ccfe.hlsl"
ige r0.xyz, vThreadID.xyzx, cb0[1].xyzx  // r0.x <- Assign_2669607774; r0.y <- Assign_2401786989; r0.z <- Assign_3128971616

#line 39
or r0.x, r0.y, r0.x
or r0.x, r0.z, r0.x  // r0.x <- result_2293831901

#line 44
if_z r0.x
  mov r0.xyz, vThreadID.xyzx
  mov r0.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.x, r0.xyzw, t0.xyzw  // r1.x <- pressure_2773640457

#line 46
  ld_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzw, t2.xyzw  // r0.x <- divergence_103807989

#line 53
  iadd r2.xyz, vThreadID.xyzx, l(-1, 0, 0, 0)  // r2.x <- result_920545104.x; r2.y <- result_920545104.y; r2.z <- result_920545104.z

#line 54
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r2.xyzw, t1.yxzw  // r0.y <- getTextureValue_3319396216

#line 55
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_1671856355

#line 57
  ld_indexable(texture3d)(float,float,float,float) r0.z, r2.xyzw, t0.yzxw  // r0.z <- getTextureValue_800920065

#line 64
  movc r0.y, r0.y, r1.x, r0.z  // r0.y <- output_1062086355

#line 65
  iadd r2.xyz, vThreadID.xyzx, l(1, 0, 0, 0)  // r2.x <- result_3617061839.x; r2.y <- result_3617061839.y; r2.z <- result_3617061839.z

#line 66
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r2.xyzw, t1.yzxw  // r0.z <- getTextureValue_825273239

#line 67
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_1139969927

#line 69
  ld_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzw, t0.yzwx  // r0.w <- getTextureValue_990577172

#line 76
  movc r0.z, r0.z, r1.x, r0.w  // r0.z <- output_1731828583

#line 77
  iadd r2.xyz, vThreadID.xyzx, l(0, -1, 0, 0)  // r2.x <- result_2857412150.x; r2.y <- result_2857412150.y; r2.z <- result_2857412150.z

#line 78
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzw, t1.yzwx  // r0.w <- getTextureValue_3174930382

#line 79
  lt r0.w, l(0.000000), r0.w  // r0.w <- Assign_265458534

#line 81
  ld_indexable(texture3d)(float,float,float,float) r1.y, r2.xyzw, t0.yxzw  // r1.y <- getTextureValue_2415884209

#line 88
  movc r0.w, r0.w, r1.x, r1.y  // r0.w <- output_448520532

#line 89
  iadd r2.xyz, vThreadID.xyzx, l(0, 1, 0, 0)  // r2.x <- result_3956344681.x; r2.y <- result_3956344681.y; r2.z <- result_3956344681.z

#line 90
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.y, r2.xyzw, t1.yxzw  // r1.y <- getTextureValue_2952261125

#line 91
  lt r1.y, l(0.000000), r1.y  // r1.y <- Assign_3154846090

#line 93
  ld_indexable(texture3d)(float,float,float,float) r1.z, r2.xyzw, t0.yzxw  // r1.z <- getTextureValue_1619422948

#line 100
  movc r1.y, r1.y, r1.x, r1.z  // r1.y <- output_3142153328

#line 101
  iadd r2.xyz, vThreadID.xyzx, l(0, 0, -1, 0)  // r2.x <- result_294692510.x; r2.y <- result_294692510.y; r2.z <- result_294692510.z

#line 102
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.z, r2.xyzw, t1.yzxw  // r1.z <- getTextureValue_3048616614

#line 103
  lt r1.z, l(0.000000), r1.z  // r1.z <- Assign_2612388858

#line 105
  ld_indexable(texture3d)(float,float,float,float) r1.w, r2.xyzw, t0.yzwx  // r1.w <- getTextureValue_605936005

#line 112
  movc r1.z, r1.z, r1.x, r1.w  // r1.z <- output_395792656

#line 113
  iadd r2.xyz, vThreadID.xyzx, l(0, 0, 1, 0)  // r2.x <- result_1238243877.x; r2.y <- result_1238243877.y; r2.z <- result_1238243877.z

#line 114
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.w, r2.xyzw, t1.yzwx  // r1.w <- getTextureValue_960177825

#line 115
  lt r1.w, l(0.000000), r1.w  // r1.w <- Assign_3335650832

#line 117
  ld_indexable(texture3d)(float,float,float,float) r2.x, r2.xyzw, t0.xyzw  // r2.x <- getTextureValue_205113310

#line 124
  movc r1.x, r1.w, r1.x, r2.x  // r1.x <- output_951948618

#line 125
  add r0.y, r0.z, r0.y
  add r0.y, r0.w, r0.y
  add r0.y, r1.y, r0.y
  add r0.y, r1.z, r0.y
  add r0.y, r1.x, r0.y  // r0.y <- result_1945965347

#line 126
  add r0.x, -r0.x, r0.y  // r0.x <- result_3115963636

#line 127
  mul r0.x, r0.x, l(0.166667)  // r0.x <- result_1218052524

#line 129
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xxxx
endif 

#line 155
ret 
// Approximately 54 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
    int3 input_4027469542_id16;
    float input_2440185535_id17;
    float3 input_1699802675_id18;
};
Texture3D<float> TextureInput_3674091956_id12;
Texture3D<float> TextureInput_2990988801_id13;
Texture3D<float> TextureInput_3602538457_id14;
RWTexture3D<float> TextureInput_1572531349_id15;
void Compute_id4(inout CS_STREAMS streams)
{
    int DispatchThreadIdX_1705848389 = streams.DispatchThreadId_id1.x;
    int inputX_3964728810 = input_4027469542_id16.x;
    bool Assign_2669607774 = DispatchThreadIdX_1705848389 >= inputX_3964728810;
    int DispatchThreadIdY_1152064971 = streams.DispatchThreadId_id1.y;
    int inputY_3132258850 = input_4027469542_id16.y;
    bool Assign_2401786989 = DispatchThreadIdY_1152064971 >= inputY_3132258850;
    int DispatchThreadIdZ_1595855846 = streams.DispatchThreadId_id1.z;
    int inputZ_47154949 = input_4027469542_id16.z;
    bool Assign_3128971616 = DispatchThreadIdZ_1595855846 >= inputZ_47154949;
    bool result_2293831901 = (Assign_2669607774 || Assign_2401786989 || Assign_3128971616);
    if (result_2293831901)
    {
        return;
    }
    float pressure_2773640457 = TextureInput_3674091956_id12[streams.DispatchThreadId_id1];
    float obstacle_3039937939 = TextureInput_2990988801_id13[streams.DispatchThreadId_id1];
    float divergence_103807989 = TextureInput_3602538457_id14[streams.DispatchThreadId_id1];
    float deltatime_77055732 = 0;
    deltatime_77055732 = input_2440185535_id17;
    int3 index_2960099321 = int3(0, 0, 0);
    index_2960099321 = streams.DispatchThreadId_id1;
    float3 resourcescale_333218558 = float3(0, 0, 0);
    resourcescale_333218558 = input_1699802675_id18;
    int3 result_920545104 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_3319396216 = TextureInput_2990988801_id13[result_920545104];
    bool Assign_1671856355 = getTextureValue_3319396216 > 0;
    int3 result_2425336437 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_800920065 = TextureInput_3674091956_id12[result_2425336437];
    float output_1062086355 = getTextureValue_800920065;
    float output_1435268536 = 1;
    if (Assign_1671856355)
    {
        output_1062086355 = pressure_2773640457;
        output_1435268536 = 0;
    }
    int3 result_3617061839 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_825273239 = TextureInput_2990988801_id13[result_3617061839];
    bool Assign_1139969927 = getTextureValue_825273239 > 0;
    int3 result_4226576176 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_990577172 = TextureInput_3674091956_id12[result_4226576176];
    float output_1731828583 = getTextureValue_990577172;
    float output_1807725260 = 1;
    if (Assign_1139969927)
    {
        output_1731828583 = pressure_2773640457;
        output_1807725260 = 0;
    }
    int3 result_2857412150 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_3174930382 = TextureInput_2990988801_id13[result_2857412150];
    bool Assign_265458534 = getTextureValue_3174930382 > 0;
    int3 result_3172496885 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_2415884209 = TextureInput_3674091956_id12[result_3172496885];
    float output_448520532 = getTextureValue_2415884209;
    float output_1851836537 = 1;
    if (Assign_265458534)
    {
        output_448520532 = pressure_2773640457;
        output_1851836537 = 0;
    }
    int3 result_3956344681 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_2952261125 = TextureInput_2990988801_id13[result_3956344681];
    bool Assign_3154846090 = getTextureValue_2952261125 > 0;
    int3 result_3358830572 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_1619422948 = TextureInput_3674091956_id12[result_3358830572];
    float output_3142153328 = getTextureValue_1619422948;
    float output_2431733077 = 1;
    if (Assign_3154846090)
    {
        output_3142153328 = pressure_2773640457;
        output_2431733077 = 0;
    }
    int3 result_294692510 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_3048616614 = TextureInput_2990988801_id13[result_294692510];
    bool Assign_2612388858 = getTextureValue_3048616614 > 0;
    int3 result_746275041 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_605936005 = TextureInput_3674091956_id12[result_746275041];
    float output_395792656 = getTextureValue_605936005;
    float output_3846993835 = 1;
    if (Assign_2612388858)
    {
        output_395792656 = pressure_2773640457;
        output_3846993835 = 0;
    }
    int3 result_1238243877 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_960177825 = TextureInput_2990988801_id13[result_1238243877];
    bool Assign_3335650832 = getTextureValue_960177825 > 0;
    int3 result_119923974 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_205113310 = TextureInput_3674091956_id12[result_119923974];
    float output_951948618 = getTextureValue_205113310;
    float output_1206078181 = 1;
    if (Assign_3335650832)
    {
        output_951948618 = pressure_2773640457;
        output_1206078181 = 0;
    }
    float result_1945965347 = (output_1062086355 + output_1731828583 + output_448520532 + output_3142153328 + output_395792656 + output_951948618);
    float result_3115963636 = (result_1945965347 - divergence_103807989);
    float result_1218052524 = (result_3115963636 / 6);
    pressure_2773640457 = result_1218052524;
    TextureInput_1572531349_id15[streams.DispatchThreadId_id1] = pressure_2773640457;
}
void Compute_id3(inout CS_STREAMS streams)
{

    {
        Compute_id4(streams);
    }
}
void Compute_id2(inout CS_STREAMS streams)
{
    Compute_id3(streams);
}
[numthreads(8, 8, 8)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 8;
    streams.ThreadCountY_id8 = 8;
    streams.ThreadCountZ_id9 = 8;
    streams.ThreadCountPerGroup_id5 = 8 * 8 * 8;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id2(streams);
}
