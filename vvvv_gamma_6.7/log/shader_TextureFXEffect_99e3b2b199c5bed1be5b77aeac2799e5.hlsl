/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Edge_Internal_TextureFX [{BackgroundColor = InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>}, {Brightness = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}, {Contrast = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}, {EdgeColor = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {Radius = InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>}]
@P EdgeColor: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
@P BackgroundColor: InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>
@P Brightness: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P Contrast: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P Radius: InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 80]
@C    InputValue_id101 => ShaderFX.InputValueFloat4
@C    InputValue_id102 => ShaderFX.InputValueFloat4_Color.i1
@C    InputValue_id103 => ShaderFX.InputValueFloat
@C    InputValue_id104 => ShaderFX.InputValueFloat.i1
@C    InputValue_id105 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id106 => ShaderFX.InputValueFloat.i2
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Type_id99 => Edge_Internal_TextureFX.Type
@C    Desaturate_id100 => Edge_Internal_TextureFX.Desaturate
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (2-2)]
***************************
*****     Sources     *****
***************************
@S    Edge_Internal_TextureFX => 603cd583630b285326d3c2f75afa1edb
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 273 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_99e3b2b199c5bed1be5b77aeac2799e5.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 277
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 718f2cdd3159965c370684d7dbc2f53e
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id101;           // Offset:    0 Size:    16
//   float4 InputValue_id102;           // Offset:   16 Size:    16
//   float InputValue_id103;            // Offset:   32 Size:     4
//   float InputValue_id104;            // Offset:   36 Size:     4
//   float4 InputValue_id105;           // Offset:   48 Size:    16
//   float InputValue_id106;            // Offset:   64 Size:     4
//
// }
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8 [unused]
//   float2 ViewSize_id77;              // Offset:   16 Size:     8
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   int Type_id99;                     // Offset:   80 Size:     4
//   bool Desaturate_id100;             // Offset:   84 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
// Globals                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 12
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 252 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_99e3b2b199c5bed1be5b77aeac2799e5.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 221
max r1.x, cb0[4].x, l(0.000000)
add r1.x, r1.x, l(0.010000)  // r1.x <- rad

#line 209
max r1.y, cb1[1].y, cb1[1].x
log r1.y, r1.y  // r1.y <- <Lod_id29 return value>

#line 222
mul r1.y, r1.y, cb0[4].x  // r1.y <- v

#line 223
max r2.x, cb2[0].y, cb2[0].x  // r2.x <- ts

#line 224
mov r2.yzw, l(0,1.000000,-1.000000,0)
mul r3.xyzw, r1.xxxx, r2.xxxy

#line 226
switch cb2[5].x

#line 229
  case l(0)

#line 147
  mad r5.xyzw, r3.wywz, r2.xzxw, v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t0.xyzw, s1, r1.y  // r6.x <- <q_id69 return value>.x; r6.y <- <q_id69 return value>.y; r6.z <- <q_id69 return value>.z; r6.x <- <q_id69 return value>.x; r6.y <- <q_id69 return value>.y; r6.z <- <q_id69 return value>.z
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t0.xyzw, s1, r1.y  // r5.x <- <q_id69 return value>.x; r5.y <- <q_id69 return value>.y; r5.z <- <q_id69 return value>.z

#line 203
  add r5.xyz, r5.xyzx, r6.xyzx

#line 147
  mad r7.xyzw, r3.wwyy, r2.xxzz, v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r7.xyxx, t0.xyzw, s1, r1.y  // r8.x <- <q_id69 return value>.x; r8.y <- <q_id69 return value>.y; r8.z <- <q_id69 return value>.z; r8.x <- <q_id69 return value>.x; r8.y <- <q_id69 return value>.y; r8.z <- <q_id69 return value>.z

#line 203
  add r5.xyz, r5.xyzx, r8.xyzx

#line 147
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.zwzz, t0.xyzw, s1, r1.y  // r7.x <- <q_id69 return value>.x; r7.y <- <q_id69 return value>.y; r7.z <- <q_id69 return value>.z

#line 203
  add r5.xyz, r5.xyzx, -r7.xyzx

#line 147
  mad r9.xyzw, r3.yzyw, r2.zwzx, v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyz, r9.xyxx, t0.xyzw, s1, r1.y  // r10.x <- <q_id69 return value>.x; r10.y <- <q_id69 return value>.y; r10.z <- <q_id69 return value>.z; r10.x <- <q_id69 return value>.x; r10.y <- <q_id69 return value>.y; r10.z <- <q_id69 return value>.z

#line 203
  add r5.xyz, r5.xyzx, -r10.xyzx

#line 147
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r9.zwzz, t0.xyzw, s1, r1.y  // r9.x <- <q_id69 return value>.x; r9.y <- <q_id69 return value>.y; r9.z <- <q_id69 return value>.z

#line 203
  add r5.xyz, r5.xyzx, -r9.xyzx  // r5.x <- cx.x; r5.y <- cx.y; r5.z <- cx.z

#line 147
  mad r10.xyzw, r3.xyzw, r2.wzwx, v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r10.xyxx, t0.xyzw, s1, r1.y  // r11.x <- <q_id69 return value>.x; r11.y <- <q_id69 return value>.y; r11.z <- <q_id69 return value>.z; r11.x <- <q_id69 return value>.x; r11.y <- <q_id69 return value>.y; r11.z <- <q_id69 return value>.z

#line 204
  add r7.xyz, r7.xyzx, r11.xyzx
  add r6.xyz, r6.xyzx, r7.xyzx
  add r6.xyz, -r9.xyzx, r6.xyzx

#line 147
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r10.zwzz, t0.xyzw, s1, r1.y  // r7.x <- <q_id69 return value>.x; r7.y <- <q_id69 return value>.y; r7.z <- <q_id69 return value>.z

#line 204
  add r6.xyz, r6.xyzx, -r7.xyzx
  add r6.xyz, -r8.xyzx, r6.xyzx  // r6.x <- cy.x; r6.y <- cy.y; r6.z <- cy.z

#line 205
  mul r6.xyz, r6.xyzx, r6.xyzx
  mad r5.xyz, r5.xyzx, r5.xyzx, r6.xyzx
  sqrt r4.xyz, r5.xyzx  // r4.x <- <SobelEdge_id72 return value>.x; r4.y <- <SobelEdge_id72 return value>.y; r4.z <- <SobelEdge_id72 return value>.z

#line 231
  break 

#line 232
  case l(1)

#line 147
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t0.xyzw, s1, r1.y  // r5.x <- <q_id69 return value>.x; r5.y <- <q_id69 return value>.y; r5.z <- <q_id69 return value>.z
  add r1.zw, v1.xxxy, l(0.000000, 0.000000, 0.001000, 0.001000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r1.zwzz, t0.xyzw, s1, r1.y  // r6.x <- <q_id69 return value>.x; r6.y <- <q_id69 return value>.y; r6.z <- <q_id69 return value>.z

#line 199
  mad r5.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), -r6.xyzx

#line 147
  mad r6.xyzw, r3.wzww, r2.xwxx, v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t0.xyzw, s1, r1.y  // r7.x <- <q_id69 return value>.x; r7.y <- <q_id69 return value>.y; r7.z <- <q_id69 return value>.z; r7.x <- <q_id69 return value>.x; r7.y <- <q_id69 return value>.y; r7.z <- <q_id69 return value>.z

#line 199
  add r5.xyz, r5.xyzx, -r7.xyzx

#line 147
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.zwzz, t0.xyzw, s1, r1.y  // r6.x <- <q_id69 return value>.x; r6.y <- <q_id69 return value>.y; r6.z <- <q_id69 return value>.z

#line 199
  add r5.xyz, r5.xyzx, -r6.xyzx

#line 147
  mad r2.xyzw, r3.yyyz, r2.zzzw, v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyw, r2.xyxx, t0.xywz, s1, r1.y  // r3.x <- <q_id69 return value>.x; r3.y <- <q_id69 return value>.y; r3.w <- <q_id69 return value>.z; r3.x <- <q_id69 return value>.x; r3.y <- <q_id69 return value>.y; r3.w <- <q_id69 return value>.z

#line 199
  add r3.xyw, -r3.xyxw, r5.xyxz

#line 147
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t0.xyzw, s1, r1.y  // r2.x <- <q_id69 return value>.x; r2.y <- <q_id69 return value>.y; r2.z <- <q_id69 return value>.z

#line 199
  add r2.xyz, -r2.xyzx, r3.xywx
  mul r4.xyz, r2.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)  // r4.x <- <MotorSawEdge_id71 return value>.x; r4.y <- <MotorSawEdge_id71 return value>.y; r4.z <- <MotorSawEdge_id71 return value>.z

#line 234
  break   // r2.x <- ts

#line 235
  case l(2)

#line 192
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0, r1.y  // r2.x <- col.x; r2.y <- col.y; r2.z <- col.z; r2.w <- col.w

#line 193
  deriv_rtx_coarse r5.xyzw, r2.xyzw
  deriv_rty_coarse r6.xyzw, r2.xyzw
  add r5.xyzw, |r5.xyzw|, |r6.xyzw|
  dp4 r1.z, r5.xyzw, r5.xyzw
  sqrt r1.z, r1.z
  mul r2.xyz, r1.zzzz, r2.xyzx
  mul r4.xyz, r2.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)  // r4.x <- <AieKickEdge_id70 return value>.x; r4.y <- <AieKickEdge_id70 return value>.y; r4.z <- <AieKickEdge_id70 return value>.z

#line 237
  break   // r2.x <- ts

#line 238
  case l(3)

#line 173
  div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb1[1].xyxx  // r2.x <- a; r2.y <- b

#line 174
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyw, v1.xyxx, t0.xywz, s0, r1.y  // r3.x <- col.x; r3.y <- col.y; r3.w <- col.z

#line 176
  mov r2.z, l(0)

#line 177
  add r2.xyzw, r2.xzzy, v1.xyxy

#line 176
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r2.xyxx, t0.xyzw, s0, r1.y  // r5.x <- c2.x; r5.y <- c2.y; r5.z <- c2.z

#line 177
  sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, r2.zwzz, t0.wxyz, s0, r1.y  // r1.y <- c3.x; r1.z <- c3.y; r1.w <- c3.z

#line 181
  add r2.xyz, r3.xywx, -r5.xyzx

#line 180
  add r2.x, |r2.y|, |r2.x|  // r2.x <- f

#line 181
  add r2.x, |r2.z|, r2.x

#line 184
  add r1.yzw, -r1.yyzw, r3.xxyw

#line 182
  add r1.y, |r1.y|, r2.x  // r1.y <- f

#line 183
  add r1.y, |r1.z|, r1.y

#line 184
  add r1.y, |r1.w|, r1.y

#line 185
  add_sat r1.y, r1.y, l(-0.100000)

#line 187
  add r1.z, -r1.y, l(1.000000)
  mul r1.y, r1.y, r1.z  // r1.y <- c1.x

#line 188
  mul r1.yzw, r3.xxyw, r1.yyyy
  mul r4.xyz, r1.yzwy, l(10.000000, 10.000000, 10.000000, 0.000000)  // r4.x <- <Charcoal_id73 return value>.x; r4.y <- <Charcoal_id73 return value>.y; r4.z <- <Charcoal_id73 return value>.z

#line 240
  break   // r1.y <- v; r2.x <- ts

#line 241
  default 
  mov r4.xyz, l(0,0,0,0)  // r4.x <- col.x; r4.y <- col.y; r4.z <- col.z
  break 
endswitch   // r4.x <- col.x; r4.y <- col.y; r4.z <- col.z

#line 243
add r1.yz, cb0[2].xxyx, l(0.000000, 1.000000, 1.000000, 0.000000)

#line 242
exp r1.w, r3.z
mul r1.y, r1.w, r1.y
min r1.x, r1.x, l(1.000000)
add r1.x, r1.x, l(0.001000)
sqrt r1.x, r1.x
div r1.x, r1.y, r1.x

#line 243
mad r1.xyw, r4.xyxz, r1.xxxx, l(-0.500000, -0.500000, 0.000000, -0.500000)
mad r1.xyz, r1.xywx, r1.zzzz, l(0.500000, 0.500000, 0.500000, 0.000000)  // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z

#line 159
dp3 r1.w, l(0.212656, 0.715158, 0.072186, 0.000000), r1.xyzx  // r1.w <- <GetLuminance_id34 return value>

#line 247
movc r1.xyz, cb2[5].yyyy, r1.wwww, r1.xyzx

#line 248
add r2.xyzw, -cb0[1].xyzw, cb0[3].xyzw
mov r1.w, r0.w
mad r1.xyzw, r1.xyzw, r2.xyzw, cb0[1].xyzw  // r1.x <- <Filter_id74 return value>.x; r1.y <- <Filter_id74 return value>.y; r1.z <- <Filter_id74 return value>.z; r1.w <- <Filter_id74 return value>.w

#line 257
add r1.xyzw, -r0.xyzw, r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 266
ret 
// Approximately 105 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id101;
    float4 InputValue_id102;
    float InputValue_id103;
    float InputValue_id104;
    float4 InputValue_id105;
    float InputValue_id106;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    int Type_id99;
    bool Desaturate_id100;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 q_id69(float2 uv, float2 off, float v)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, uv + off, v);
}
float4 Compute_id77()
{
    return InputValue_id105;
}
float4 Compute_id76()
{
    return InputValue_id102;
}
float GetLuminance_id34(float3 rgb)
{
    return dot(float3(0.212656f, 0.715158f, 0.072186f), rgb);
}
float Compute_id80()
{
    return InputValue_id104;
}
float Compute_id79()
{
    return InputValue_id103;
}
float4 Charcoal_id73(float v, float2 uv)
{
    float strength = 1.0;
    float a = strength / ViewSize_id77.x;
    float b = strength / ViewSize_id77.y;
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, uv, v);
    float4 c1 = col;
    float4 c2 = Texture0_id14.SampleLevel(LinearSampler_id44, uv + float2(a, 0), v);
    float4 c3 = Texture0_id14.SampleLevel(LinearSampler_id44, uv + float2(0, b), v);
    float f = 0;
    f += abs(c1.x - c2.x);
    f += abs(c1.y - c2.y);
    f += abs(c1.z - c2.z);
    f += abs(c1.x - c3.x);
    f += abs(c1.y - c3.y);
    f += abs(c1.z - c3.z);
    f -= 0.1;
    f = saturate(f);
    c1.rgb = (1 - f) * f;
    return c1 * col * 10;
}
float4 AieKickEdge_id70(float v, float2 uv)
{
    float4 col = Texture0_id14.SampleLevel(LinearSampler_id44, uv, v);
    return col * length(fwidth(col)) * 5;
}
float4 MotorSawEdge_id71(float v, float2 uv, float3 e)
{
    float4 cx = q_id69(uv, e.xy, v) + q_id69(uv, e.xz, v) + q_id69(uv, e.xx, v) - q_id69(uv, e.yy, v) - q_id69(uv, e.yz, v) - q_id69(uv, e.yx, v);
    float4 cy = q_id69(uv, e.yy, v) + q_id69(uv, e.zy, v) + q_id69(uv, e.xy, v) - q_id69(uv, e.yx, v) - q_id69(uv, e.zx, v) - q_id69(uv, e.xx, v);
    return (q_id69(uv, float2(0, 0), v) * 5 - q_id69(uv, float2(0.001, 0.001), v) - q_id69(uv, e.xz, v) - q_id69(uv, e.xx, v) - q_id69(uv, e.yy, v) - q_id69(uv, e.yz, v)) * 3;
}
float4 SobelEdge_id72(float v, float2 uv, float3 e)
{
    float4 cx = q_id69(uv, e.xy, v) + q_id69(uv, e.xz, v) + q_id69(uv, e.xx, v) - q_id69(uv, e.yy, v) - q_id69(uv, e.yz, v) - q_id69(uv, e.yx, v);
    float4 cy = q_id69(uv, e.yy, v) + q_id69(uv, e.zy, v) + q_id69(uv, e.xy, v) - q_id69(uv, e.yx, v) - q_id69(uv, e.zx, v) - q_id69(uv, e.xx, v);
    return sqrt(cx * cx + cy * cy);
}
float Lod_id29(float2 viewSize)
{
    return log2(max(viewSize.x, viewSize.y));
}
float Compute_id78()
{
    return InputValue_id106;
}
float4 Compute_id75()
{
    return InputValue_id101;
}
float4 Filter_id74(inout PS_STREAMS streams, float4 tex0col)
{
    float rad = max(Compute_id78(), 0) + 0.01;
    float v = Lod_id29(ViewSize_id77) * Compute_id78();
    float ts = max(Texture0TexelSize_id15.x, Texture0TexelSize_id15.y);
    float3 e = float3(1, -1, 0) * rad * ts;
    float4 col = float4(0.0, 0.0, 0.0, 0.0);
    switch (Type_id99)

    {
        case 0:
            col = SobelEdge_id72(v, streams.TexCoord_id62, e);
            break;
        case 1:
            col = MotorSawEdge_id71(v, streams.TexCoord_id62, e);
            break;
        case 2:
            col = AieKickEdge_id70(v, streams.TexCoord_id62);
            break;
        case 3:
            col = Charcoal_id73(v, streams.TexCoord_id62);
            break;
    }
    col *= (Compute_id79() + 1.0) * pow(2, rad * ts) / sqrt(saturate(rad) + .001);
    col = (col - 0.5) * (Compute_id80() + 1.0) + 0.5;
    float luma = GetLuminance_id34(col);
    col.a = tex0col.a;
    if (Desaturate_id100)
        col.rgb = float3(luma, luma, luma);
    return lerp(Compute_id76(), Compute_id77(), col);
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id74(streams, col), Compute_id75());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
