/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin OpticalFlow_HS_Internal_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 16]
@C    InputValue_id90 => ShaderFX.InputValueFloat4
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Boost_id88 => OpticalFlow_HS_Internal_TextureFX.Boost
@C    lambda_id89 => OpticalFlow_HS_Internal_TextureFX.lambda
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id44 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (1-1)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id16 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (2-2)]
***************************
*****     Sources     *****
***************************
@S    OpticalFlow_HS_Internal_TextureFX => 543cd8272a76310e89465bc333b114f3
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 226 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_3157fbcba67720cd86ff77088ca793e7.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 230
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 5cd463313bfa23c1bbe430fe691a821b
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id90;            // Offset:    0 Size:    16
//
// }
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8 [unused]
//   float2 ViewSize_id77;              // Offset:   16 Size:     8
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float Boost_id88;                  // Offset:   80 Size:     4
//      = 0x3f800000 
//   float lambda_id89;                 // Offset:   84 Size:     4
//      = 0x3dcccccd 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id44                sampler      NA          NA             s0      1 
// Sampler0_id52                     sampler      NA          NA             s1      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// Texture1_id16                     texture  float4          2d             t1      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
// Globals                           cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 152 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_3157fbcba67720cd86ff77088ca793e7.hlsl"
mov r0.z, l(0)

#line 143
div r0.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb1[1].xyxx  // r0.x <- texelWidth; r0.y <- texelHeight

#line 151
add r1.xy, -r0.zyzz, v1.xyxx  // r1.x <- topTextureCoordinate.x; r1.y <- topTextureCoordinate.y

#line 163
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t1.xyzw, s0  // r1.x <- topColor.x

#line 169
mul r1.xy, r1.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)

#line 152
add r2.xyzw, -r0.xzxy, v1.xyxy  // r2.x <- leftTextureCoordinate.x; r2.y <- leftTextureCoordinate.y; r2.z <- topLeftTextureCoordinate.x; r2.w <- topLeftTextureCoordinate.y; r2.x <- leftTextureCoordinate.x; r2.y <- leftTextureCoordinate.y; r2.z <- topLeftTextureCoordinate.x; r2.w <- topLeftTextureCoordinate.y

#line 165
sample_indexable(texture2d)(float,float,float,float) r1.zw, r2.zwzz, t1.zwxy, s0  // r1.z <- topLeftColor.x; r1.z <- topLeftColor.x

#line 161
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s0  // r2.x <- leftColor.x; r2.x <- leftColor.x

#line 169
mad r1.xy, r1.zwzz, l(0.083333, 0.083333, 0.000000, 0.000000), r1.xyxx

#line 153
mov r0.w, -r0.y
add r3.xyzw, r0.xzxw, v1.xyxy  // r3.x <- rightTextureCoordinate.x; r3.y <- rightTextureCoordinate.y; r3.z <- topRightTextureCoordinate.x; r3.w <- topRightTextureCoordinate.y; r3.x <- rightTextureCoordinate.x; r3.y <- rightTextureCoordinate.y; r3.z <- topRightTextureCoordinate.x; r3.w <- topRightTextureCoordinate.y

#line 156
add r4.xyzw, r0.zyxy, v1.xyxy  // r4.x <- bottomTextureCoordinate.x; r4.y <- bottomTextureCoordinate.y; r4.z <- bottomRightTextureCoordinate.x; r4.w <- bottomRightTextureCoordinate.y; r4.x <- bottomTextureCoordinate.x; r4.y <- bottomTextureCoordinate.y; r4.z <- bottomRightTextureCoordinate.x; r4.w <- bottomRightTextureCoordinate.y

#line 155
add r0.xy, -r0.xwxx, v1.xyxx  // r0.x <- bottomLeftTextureCoordinate.x; r0.y <- bottomLeftTextureCoordinate.y; r0.x <- bottomLeftTextureCoordinate.x; r0.y <- bottomLeftTextureCoordinate.y

#line 158
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t1.xyzw, s0  // r0.x <- bottomLeftColor.x; r0.x <- bottomLeftColor.x

#line 164
sample_indexable(texture2d)(float,float,float,float) r0.zw, r3.zwzz, t1.zwxy, s0  // r0.z <- topRightColor.x; r0.z <- topRightColor.x

#line 162
sample_indexable(texture2d)(float,float,float,float) r1.zw, r3.xyxx, t1.zwxy, s0  // r1.z <- rightColor.x; r1.z <- rightColor.x

#line 169
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.083333, 0.083333), r1.xxxy  // r0.z <- resultX; r0.w <- resultY; r0.z <- resultX; r0.w <- resultY

#line 160
sample_indexable(texture2d)(float,float,float,float) r1.xy, v1.xyxx, t1.xyzw, s0  // r1.x <- centerColor.x; r1.x <- centerColor.x

#line 170
mad r1.xy, r2.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000), -r1.xyxx
mad r1.xy, r1.zwzz, l(0.166667, 0.166667, 0.000000, 0.000000), r1.xyxx
add r0.zw, r0.zzzw, r1.xxxy

#line 157
sample_indexable(texture2d)(float,float,float,float) r1.xy, r4.xyxx, t1.xyzw, s0  // r1.x <- bottomColor.x; r1.x <- bottomColor.x

#line 159
sample_indexable(texture2d)(float,float,float,float) r1.zw, r4.zwzz, t1.zwxy, s0  // r1.z <- bottomRightColor.x; r1.z <- bottomRightColor.x

#line 171
mul r1.xy, r1.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, l(0.083333, 0.083333, 0.000000, 0.000000), r1.xyxx
mad r0.xy, r1.zwzz, l(0.083333, 0.083333, 0.000000, 0.000000), r0.xyxx
add r0.xy, r0.xyxx, r0.zwzz  // r0.x <- resultX; r0.y <- resultY

#line 182
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0  // r1.x <- deri.x; r1.y <- deri.y; r1.z <- deri.z

#line 188
mul r0.zw, r0.xxxy, r1.xxxy
add r0.z, r0.w, r0.z
add r0.z, r1.z, r0.z  // r0.z <- P

#line 189
mad r0.w, r1.x, r1.x, cb2[5].y
mad r0.w, r1.y, r1.y, r0.w  // r0.w <- D

#line 190
div r0.z, r0.z, r0.w

#line 191
mad r0.xy, -r1.xyxx, r0.zzzz, r0.xyxx  // r0.x <- uv.x; r0.y <- uv.y

#line 201
mov r0.zw, l(0,0,0,1.000000)

#line 205
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)  // r1.x <- <InTex0_id26 return value>.x; r1.y <- <InTex0_id26 return value>.y; r1.z <- <InTex0_id26 return value>.z; r1.w <- <InTex0_id26 return value>.w

#line 210
mad r0.xyzw, r0.xyzw, cb2[5].xxxx, -r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r0.xyzw, r1.xyzw

#line 219
ret 
// Approximately 40 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id90;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float Boost_id88 = 1.0f;
    float lambda_id89 = .1;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float2 getAverage_id29(float2 uv)
{
    float texelWidth = 1 / ViewSize_id77.x;
    float texelHeight = 1 / ViewSize_id77.y;
    float2 widthStep = float2(texelWidth, 0.0);
    float2 heightStep = float2(0.0, texelHeight);
    float2 widthHeightStep = float2(texelWidth, texelHeight);
    float2 widthNegativeHeightStep = float2(texelWidth, -texelHeight);
    float2 textureCoordinate = uv;
    float2 leftTextureCoordinate = uv - widthStep;
    float2 rightTextureCoordinate = uv + widthStep;
    float2 topTextureCoordinate = uv - heightStep;
    float2 topLeftTextureCoordinate = uv - widthHeightStep;
    float2 topRightTextureCoordinate = uv + widthNegativeHeightStep;
    float2 bottomTextureCoordinate = uv + heightStep;
    float2 bottomLeftTextureCoordinate = uv - widthNegativeHeightStep;
    float2 bottomRightTextureCoordinate = uv + widthHeightStep;
    float4 bottomColor = Texture1_id16.Sample(LinearSampler_id44, bottomTextureCoordinate);
    float4 bottomLeftColor = Texture1_id16.Sample(LinearSampler_id44, bottomLeftTextureCoordinate);
    float4 bottomRightColor = Texture1_id16.Sample(LinearSampler_id44, bottomRightTextureCoordinate);
    float4 centerColor = Texture1_id16.Sample(LinearSampler_id44, textureCoordinate);
    float4 leftColor = Texture1_id16.Sample(LinearSampler_id44, leftTextureCoordinate);
    float4 rightColor = Texture1_id16.Sample(LinearSampler_id44, rightTextureCoordinate);
    float4 topColor = Texture1_id16.Sample(LinearSampler_id44, topTextureCoordinate);
    float4 topRightColor = Texture1_id16.Sample(LinearSampler_id44, topRightTextureCoordinate);
    float4 topLeftColor = Texture1_id16.Sample(LinearSampler_id44, topLeftTextureCoordinate);
    float resultX = topLeftColor.r * 1 / 12 + topColor.r * 1 / 6 + topRightColor.r * 1 / 12;
    resultX += leftColor.r * 1 / 6 + centerColor.r * -1 + rightColor.r * 1 / 6;
    resultX += bottomLeftColor.r * 1 / 12 + bottomColor.r * 1 / 6 + bottomRightColor.r * 1 / 12;
    float resultY = topLeftColor.g * 1 / 12 + topColor.g * 1 / 6 + topRightColor.g * 1 / 12;
    resultY += leftColor.g * 1 / 6 + centerColor.g * -1 + rightColor.g * 1 / 6;
    resultY += bottomLeftColor.g * 1 / 12 + bottomColor.g * 1 / 6 + bottomRightColor.g * 1 / 12;
    return float4(resultX, resultY, 0, 1.0).xy;
}
float4 getHS_id30(float2 coord)
{
    float4 result;
    float2 uv = float2(0.0, 0.0);
    float Ix2 = 0;
    float Iy2 = 0;
    float Uav = getAverage_id29(coord).x;
    float Vav = getAverage_id29(coord).y;
    float3 deri = Texture0_id14.Sample(LinearSampler_id44, coord).xyz;
    float Ix = deri.x;
    float Iy = deri.y;
    float It = deri.z;
    Ix2 = pow(Ix, 2);
    Iy2 = pow(Iy, 2);
    float P = Ix * Uav + Iy * Vav + It;
    float D = lambda_id89 + Ix2 + Iy2;
    uv.x = (Uav - Ix * (P / D));
    uv.y = (Vav - Iy * (P / D));
    result = float4(uv.x, uv.y, 0, 1);
    return result;
}
float4 Compute_id32()
{
    return InputValue_id90;
}
float4 Filter_id31(inout PS_STREAMS streams, float4 tex0col)
{
    return getHS_id30(streams.TexCoord_id62) * Boost_id88;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id31(streams, col), Compute_id32());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
