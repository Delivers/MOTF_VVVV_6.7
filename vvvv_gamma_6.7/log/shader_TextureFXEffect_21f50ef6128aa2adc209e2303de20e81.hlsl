/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Voronoi_Border_Internal_TextureFX [{ColorA = InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>}, {ColorB = InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>}, {LineFade = InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>}, {LineWidth = InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>}, {Size = InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>}, {Time = InputFloat<ShaderFX.InputValueFloat,PerUpdate>}]
@P Time: InputFloat<ShaderFX.InputValueFloat,PerUpdate>
@P LineWidth: InputFloat<ShaderFX.InputValueFloat.i1,PerUpdate>
@P LineFade: InputFloat<ShaderFX.InputValueFloat.i2,PerUpdate>
@P Size: InputFloat2<ShaderFX.InputValueFloat2,PerUpdate>
@P ColorA: InputFloat4<ShaderFX.InputValueFloat4_Color,PerUpdate>
@P ColorB: InputFloat4<ShaderFX.InputValueFloat4_Color.i1,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 64]
@C    InputValue_id99 => ShaderFX.InputValueFloat4_Color
@C    InputValue_id100 => ShaderFX.InputValueFloat4_Color.i1
@C    InputValue_id101 => ShaderFX.InputValueFloat.i2
@C    InputValue_id102 => ShaderFX.InputValueFloat.i1
@C    InputValue_id103 => ShaderFX.InputValueFloat2
@C    InputValue_id104 => ShaderFX.InputValueFloat
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Voronoi_Border_Internal_TextureFX => 221426cf84fdd2702c2735ac277d3e43
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    AddonShaderUtils => 0d3496ddd24bfcbde4abd1deae724f64
@S    ComputeFloat => 3607bb1fa125ec30a7afa60be79c4817
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    ComputeFloat4 => f871947e9f604da432ea9fc3c9cb4363
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    InputFloat => f487ac725dafb0434d14d0273ee628a8
@S    DeclFloat => 75bf7e6f5246ed3d7aa33ab3c7183aa4
@S    InputFloat2 => d6238a7d677592382c8158617d803399
@S    DeclFloat2 => d5fe6f879293db53179d13cf4b1d1f3d
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 236 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_21f50ef6128aa2adc209e2303de20e81.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 240
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => ff9566c37eeb9a383513d60a45ab088c
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id99;            // Offset:    0 Size:    16
//   float4 InputValue_id100;           // Offset:   16 Size:    16
//   float InputValue_id101;            // Offset:   32 Size:     4
//   float InputValue_id102;            // Offset:   36 Size:     4
//   float2 InputValue_id103;           // Offset:   40 Size:     8
//   float InputValue_id104;            // Offset:   48 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerUpdate                         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 215 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_TextureFXEffect_21f50ef6128aa2adc209e2303de20e81.hlsl"
mul r0.xy, v1.xyxx, cb0[2].zwzz

#line 170
round_ni r0.zw, r0.xxxy  // r0.z <- n.x; r0.w <- n.y

#line 171
frc r0.xy, r0.xyxx  // r0.x <- f.x; r0.y <- f.y

#line 175
mov r1.xyzw, l(0,0,0,0)  // r1.x <- mg.x; r1.y <- mg.y; r1.z <- mr.x; r1.w <- mr.y
mov r2.xy, l(8.000000,-1,0,0)  // r2.x <- md; r2.y <- j
loop 
  ilt r2.z, l(1), r2.y
  breakc_nz r2.z

#line 179
  itof r3.y, r2.y  // r3.y <- g.y

#line 177
  mov r2.zw, r1.xxxy  // r2.z <- mg.x; r2.w <- mg.y
  mov r4.xy, r1.zwzz  // r4.x <- mr.x; r4.y <- mr.y
  mov r4.z, r2.x  // r4.z <- md
  mov r3.z, l(-1)  // r3.z <- i
  loop 
    ilt r3.w, l(1), r3.z
    breakc_nz r3.w

#line 179
    itof r3.x, r3.z  // r3.x <- g.x

#line 180
    add r5.xy, r0.zwzz, r3.xyxx

#line 145
    dp2 r3.w, r5.xyxx, l(127.099998, 311.700012, 0.000000, 0.000000)
    dp2 r4.w, r5.xyxx, l(269.500000, 183.300003, 0.000000, 0.000000)
    sincos r5.x, null, r3.w
    sincos r5.y, null, r4.w
    mul r5.xy, r5.xyxx, l(43758.546875, 43758.546875, 0.000000, 0.000000)
    frc r5.xy, r5.xyxx  // r5.x <- <hash2_id68 return value>.x; r5.y <- <hash2_id68 return value>.y

#line 181
    mad r5.xy, r5.xyxx, l(6.283100, 6.283100, 0.000000, 0.000000), cb0[3].xxxx
    sincos r5.xy, null, r5.xyxx
    mad r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r3.xyxx

#line 182
    add r5.xy, -r0.xyxx, r5.xyxx
    add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r5.x <- r.x; r5.y <- r.y

#line 183
    dp2 r5.z, r5.xyxx, r5.xyxx  // r5.z <- d

#line 184
    lt r3.w, r5.z, r4.z

#line 189
    movc r2.zw, r3.wwww, r3.xxxy, r2.zzzw
    movc r4.xyz, r3.wwww, r5.xyzx, r4.xyzx

#line 190
    iadd r3.z, r3.z, l(1)
  endloop 
  mov r1.xy, r2.zwzz  // r1.x <- mg.x; r1.y <- mg.y
  mov r1.zw, r4.xxxy  // r1.z <- mr.x; r1.w <- mr.y
  mov r2.x, r4.z  // r2.x <- md
  iadd r2.y, r2.y, l(1)
endloop 

#line 193
mov r2.xy, l(8.000000,-2,0,0)  // r2.y <- k
loop 
  ilt r2.z, l(2), r2.y
  breakc_nz r2.z

#line 198
  itof r3.y, r2.y

#line 196
  mov r2.z, r2.x  // r2.z <- md
  mov r2.w, l(-2)  // r2.w <- i
  loop 
    ilt r3.z, l(2), r2.w
    breakc_nz r3.z

#line 198
    itof r3.x, r2.w
    add r3.xz, r1.xxyx, r3.xxyx  // r3.x <- g.x; r3.z <- g.y

#line 199
    add r4.xy, r0.zwzz, r3.xzxx

#line 145
    dp2 r3.w, r4.xyxx, l(127.099998, 311.700012, 0.000000, 0.000000)
    dp2 r4.x, r4.xyxx, l(269.500000, 183.300003, 0.000000, 0.000000)
    sincos r5.x, null, r3.w
    sincos r5.y, null, r4.x
    mul r4.xy, r5.xyxx, l(43758.546875, 43758.546875, 0.000000, 0.000000)
    frc r4.xy, r4.xyxx  // r4.x <- <hash2_id68 return value>.x; r4.y <- <hash2_id68 return value>.y

#line 200
    mad r4.xy, r4.xyxx, l(6.283100, 6.283100, 0.000000, 0.000000), cb0[3].xxxx
    sincos r4.xy, null, r4.xyxx
    mad r3.xz, r4.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000), r3.xxzx

#line 201
    add r3.xz, -r0.xxyx, r3.xxzx
    add r3.xz, r3.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)  // r3.x <- r.x; r3.z <- r.y

#line 202
    add r4.xy, r1.zwzz, -r3.xzxx
    dp2 r3.w, r4.xyxx, r4.xyxx
    lt r3.w, l(0.000010), r3.w

#line 203
    add r4.xy, r1.zwzz, r3.xzxx
    mul r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    add r3.xz, -r1.zzwz, r3.xxzx
    dp2 r4.z, r3.xzxx, r3.xzxx
    rsq r4.z, r4.z
    mul r3.xz, r3.xxzx, r4.zzzz
    dp2 r3.x, r4.xyxx, r3.xzxx
    min r3.x, r2.z, r3.x  // r3.x <- md
    movc r2.z, r3.w, r3.x, r2.z  // r2.z <- md

#line 204
    iadd r2.w, r2.w, l(1)
  endloop 
  mov r2.x, r2.z  // r2.x <- md

#line 205
  iadd r2.y, r2.y, l(1)
endloop 

#line 219
add r0.x, r2.x, -cb0[2].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[2].x
mul_sat r0.x, r0.y, r0.x
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mad r0.x, -r0.y, r0.x, l(1.000000)  // r0.x <- col.x

#line 220
add r1.xyzw, -cb0[0].xyzw, cb0[1].xyzw
mad o0.xyzw, r0.xxxx, r1.xyzw, cb0[0].xyzw

#line 229
ret 
// Approximately 90 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id99;
    float4 InputValue_id100;
    float InputValue_id101;
    float InputValue_id102;
    float2 InputValue_id103;
    float InputValue_id104;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float2 hash2_id68(float2 p)
{
    return frac(sin(float2(dot(p, float2(127.1, 311.7)), dot(p, float2(269.5, 183.3)))) * 43758.5453);
}
float Compute_id71()
{
    return InputValue_id104;
}
float4 Compute_id76()
{
    return InputValue_id100;
}
float4 Compute_id75()
{
    return InputValue_id99;
}
float Compute_id73()
{
    return InputValue_id101;
}
float Compute_id72()
{
    return InputValue_id102;
}
float3 voronoi_id69(in float2 x)
{
    float2 time = Compute_id71();
    float2 n = floor(x);
    float2 f = frac(x);
    float2 mg, mr;
    float md = 8.0;

    for (int j = -1; j <= 1; j++)

        for (int i = -1; i <= 1; i++)
        {
            float2 g = float2(float(i), float(j));
            float2 o = hash2_id68(n + g);
            o = 0.5 + 0.5 * sin(time + 6.2831 * o);
            float2 r = g + o - f;
            float d = dot(r, r);
            if (d < md)
            {
                md = d;
                mr = r;
                mg = g;
            }
        }
    md = 8.0;

    for (int k = -2; k <= 2; k++)
    {

        for (int i = -2; i <= 2; i++)
        {
            float2 g = mg + float2(float(i), float(k));
            float2 o = hash2_id68(n + g);
            o = 0.5 + 0.5 * sin(time + 6.2831 * o);
            float2 r = g + o - f;
            if (dot(mr - r, mr - r) > 0.00001)
                md = min(md, dot(0.5 * (mr + r), normalize(r - mr)));
        }
    }
    return float3(md, mr);
}
float2 Compute_id74()
{
    return InputValue_id103;
}
float4 Shading_id70(inout PS_STREAMS streams)
{
    float2 p = streams.TexCoord_id62;
    float3 c = voronoi_id69(p * Compute_id74());
    float4 col = float4(0.0, 0.0, 0.0, 0.0);
    float lineWidth = Compute_id72();
    float lineFade = Compute_id73();
    col = lerp(float4(1.0, 1.0, 1.0, 1.0), col, smoothstep(lineWidth, lineWidth + lineFade, c.x));
    return lerp(Compute_id75(), Compute_id76(), col);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id70(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
