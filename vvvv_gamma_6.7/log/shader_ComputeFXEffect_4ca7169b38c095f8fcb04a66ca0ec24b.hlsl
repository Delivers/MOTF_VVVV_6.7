/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:8 Y:8 Z:8
@P EffectNodeBase.EffectNodeBaseShader: mixin ComputeFXGraph [{Root = mixin ComputeOrder [{Computes = [Shader_1223714558]}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDispatch [Size: 48]
@C    ThreadGroupCountGlobal_id10 => ComputeShaderBase.ThreadGroupCountGlobal
@C    input_838590723_id16 => input_838590723
@C    input_1636798836_id17 => input_1636798836
@C    input_3430598544_id18 => input_3430598544
***************************
******  Resources    ******
***************************
@R    TextureInput_1030055249_id12 => TextureInput_1030055249 [Stage: Compute, Slot: (0-0)]
@R    TextureInput_1224669504_id13 => TextureInput_1224669504 [Stage: Compute, Slot: (1-1)]
@R    TextureInput_1359791384_id14 => TextureInput_1359791384 [Stage: Compute, Slot: (2-2)]
@R    TextureInput_4267214576_id15 => TextureInput_4267214576 [Stage: Compute, Slot: (0-0)]
@R    PerDispatch => PerDispatch [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    ComputeFXGraph => dca3deb94a1ea6d5babe444153dee98b
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    Shader_1223714558 => a1e818e261c432d4e591f7bccf0add30
***************************
*****     Stages      *****
***************************
@G    Compute => 90aeecb26eb7a8b9017cec4ac8e83a09
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDispatch
// {
//
//   int3 ThreadGroupCountGlobal_id10;  // Offset:    0 Size:    12 [unused]
//   int3 input_838590723_id16;         // Offset:   16 Size:    12
//   float input_1636798836_id17;       // Offset:   28 Size:     4 [unused]
//   float3 input_3430598544_id18;      // Offset:   32 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TextureInput_1030055249_id12      texture   float          3d             t0      1 
// TextureInput_1224669504_id13      texture   float          3d             t1      1 
// TextureInput_1359791384_id14      texture   float          3d             t2      1 
// TextureInput_4267214576_id15          UAV   float          3d             u0      1 
// PerDispatch                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 3
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 38 "C:\Users\sw\Documents\_projects\2024\MOTF\MOTF_VVVV_6.7\vvvv_gamma_6.7\log\shader_ComputeFXEffect_4ca7169b38c095f8fcb04a66ca0ec24b.hlsl"
ige r0.xyz, vThreadID.xyzx, cb0[1].xyzx  // r0.x <- Assign_3689940353; r0.y <- Assign_1627392202; r0.z <- Assign_1774890877

#line 39
or r0.x, r0.y, r0.x
or r0.x, r0.z, r0.x  // r0.x <- result_1149744962

#line 44
if_z r0.x
  mov r0.xyz, vThreadID.xyzx
  mov r0.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.x, r0.xyzw, t0.xyzw  // r1.x <- pressure_977671682

#line 46
  ld_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzw, t2.xyzw  // r0.x <- divergence_271962606

#line 53
  iadd r2.xyz, vThreadID.xyzx, l(-1, 0, 0, 0)  // r2.x <- result_3892583707.x; r2.y <- result_3892583707.y; r2.z <- result_3892583707.z

#line 54
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.y, r2.xyzw, t1.yxzw  // r0.y <- getTextureValue_2180477971

#line 55
  lt r0.y, l(0.000000), r0.y  // r0.y <- Assign_471402310

#line 57
  ld_indexable(texture3d)(float,float,float,float) r0.z, r2.xyzw, t0.yzxw  // r0.z <- getTextureValue_2201517110

#line 64
  movc r0.y, r0.y, r1.x, r0.z  // r0.y <- output_2636867788

#line 65
  iadd r2.xyz, vThreadID.xyzx, l(1, 0, 0, 0)  // r2.x <- result_1722634802.x; r2.y <- result_1722634802.y; r2.z <- result_1722634802.z

#line 66
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.z, r2.xyzw, t1.yzxw  // r0.z <- getTextureValue_477794634

#line 67
  lt r0.z, l(0.000000), r0.z  // r0.z <- Assign_2449625914

#line 69
  ld_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzw, t0.yzwx  // r0.w <- getTextureValue_1091247665

#line 76
  movc r0.z, r0.z, r1.x, r0.w  // r0.z <- output_107748336

#line 77
  iadd r2.xyz, vThreadID.xyzx, l(0, -1, 0, 0)  // r2.x <- result_818341587.x; r2.y <- result_818341587.y; r2.z <- result_818341587.z

#line 78
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzw, t1.yzwx  // r0.w <- getTextureValue_272130331

#line 79
  lt r0.w, l(0.000000), r0.w  // r0.w <- Assign_3804780081

#line 81
  ld_indexable(texture3d)(float,float,float,float) r1.y, r2.xyzw, t0.yxzw  // r1.y <- getTextureValue_3568610196

#line 88
  movc r0.w, r0.w, r1.x, r1.y  // r0.w <- output_1011477653

#line 89
  iadd r2.xyz, vThreadID.xyzx, l(0, 1, 0, 0)  // r2.x <- result_455694030.x; r2.y <- result_455694030.y; r2.z <- result_455694030.z

#line 90
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.y, r2.xyzw, t1.yxzw  // r1.y <- getTextureValue_3871126202

#line 91
  lt r1.y, l(0.000000), r1.y  // r1.y <- Assign_2623245101

#line 93
  ld_indexable(texture3d)(float,float,float,float) r1.z, r2.xyzw, t0.yzxw  // r1.z <- getTextureValue_1728893695

#line 100
  movc r1.y, r1.y, r1.x, r1.z  // r1.y <- output_3651333545

#line 101
  iadd r2.xyz, vThreadID.xyzx, l(0, 0, -1, 0)  // r2.x <- result_1888343787.x; r2.y <- result_1888343787.y; r2.z <- result_1888343787.z

#line 102
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.z, r2.xyzw, t1.yzxw  // r1.z <- getTextureValue_500662851

#line 103
  lt r1.z, l(0.000000), r1.z  // r1.z <- Assign_336570903

#line 105
  ld_indexable(texture3d)(float,float,float,float) r1.w, r2.xyzw, t0.yzwx  // r1.w <- getTextureValue_3871361720

#line 112
  movc r1.z, r1.z, r1.x, r1.w  // r1.z <- output_2387157143

#line 113
  iadd r2.xyz, vThreadID.xyzx, l(0, 0, 1, 0)  // r2.x <- result_1000419584.x; r2.y <- result_1000419584.y; r2.z <- result_1000419584.z

#line 114
  mov r2.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r1.w, r2.xyzw, t1.yzwx  // r1.w <- getTextureValue_2987249580

#line 115
  lt r1.w, l(0.000000), r1.w  // r1.w <- Assign_2140304645

#line 117
  ld_indexable(texture3d)(float,float,float,float) r2.x, r2.xyzw, t0.xyzw  // r2.x <- getTextureValue_722934787

#line 124
  movc r1.x, r1.w, r1.x, r2.x  // r1.x <- output_3711046089

#line 125
  add r0.y, r0.z, r0.y
  add r0.y, r0.w, r0.y
  add r0.y, r1.y, r0.y
  add r0.y, r1.z, r0.y
  add r0.y, r1.x, r0.y  // r0.y <- result_3032493358

#line 126
  add r0.x, -r0.x, r0.y  // r0.x <- result_1660992025

#line 127
  mul r0.x, r0.x, l(0.166667)  // r0.x <- result_487412679

#line 129
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xxxx
endif 

#line 155
ret 
// Approximately 54 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
    int3 input_838590723_id16;
    float input_1636798836_id17;
    float3 input_3430598544_id18;
};
Texture3D<float> TextureInput_1030055249_id12;
Texture3D<float> TextureInput_1224669504_id13;
Texture3D<float> TextureInput_1359791384_id14;
RWTexture3D<float> TextureInput_4267214576_id15;
void Compute_id4(inout CS_STREAMS streams)
{
    int DispatchThreadIdX_2062887072 = streams.DispatchThreadId_id1.x;
    int inputX_181602231 = input_838590723_id16.x;
    bool Assign_3689940353 = DispatchThreadIdX_2062887072 >= inputX_181602231;
    int DispatchThreadIdY_1977333336 = streams.DispatchThreadId_id1.y;
    int inputY_3191009213 = input_838590723_id16.y;
    bool Assign_1627392202 = DispatchThreadIdY_1977333336 >= inputY_3191009213;
    int DispatchThreadIdZ_1073105291 = streams.DispatchThreadId_id1.z;
    int inputZ_1725069496 = input_838590723_id16.z;
    bool Assign_1774890877 = DispatchThreadIdZ_1073105291 >= inputZ_1725069496;
    bool result_1149744962 = (Assign_3689940353 || Assign_1627392202 || Assign_1774890877);
    if (result_1149744962)
    {
        return;
    }
    float pressure_977671682 = TextureInput_1030055249_id12[streams.DispatchThreadId_id1];
    float obstacle_2320042252 = TextureInput_1224669504_id13[streams.DispatchThreadId_id1];
    float divergence_271962606 = TextureInput_1359791384_id14[streams.DispatchThreadId_id1];
    float deltatime_2717922621 = 0;
    deltatime_2717922621 = input_1636798836_id17;
    int3 index_4183347128 = int3(0, 0, 0);
    index_4183347128 = streams.DispatchThreadId_id1;
    float3 resourcescale_4050158535 = float3(0, 0, 0);
    resourcescale_4050158535 = input_3430598544_id18;
    int3 result_3892583707 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_2180477971 = TextureInput_1224669504_id13[result_3892583707];
    bool Assign_471402310 = getTextureValue_2180477971 > 0;
    int3 result_3005203162 = (streams.DispatchThreadId_id1 + int3(-1, 0, 0));
    float getTextureValue_2201517110 = TextureInput_1030055249_id12[result_3005203162];
    float output_2636867788 = getTextureValue_2201517110;
    float output_98834087 = 1;
    if (Assign_471402310)
    {
        output_2636867788 = pressure_977671682;
        output_98834087 = 0;
    }
    int3 result_1722634802 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_477794634 = TextureInput_1224669504_id13[result_1722634802];
    bool Assign_2449625914 = getTextureValue_477794634 > 0;
    int3 result_4241478397 = (streams.DispatchThreadId_id1 + int3(1, 0, 0));
    float getTextureValue_1091247665 = TextureInput_1030055249_id12[result_4241478397];
    float output_107748336 = getTextureValue_1091247665;
    float output_784358475 = 1;
    if (Assign_2449625914)
    {
        output_107748336 = pressure_977671682;
        output_784358475 = 0;
    }
    int3 result_818341587 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_272130331 = TextureInput_1224669504_id13[result_818341587];
    bool Assign_3804780081 = getTextureValue_272130331 > 0;
    int3 result_1743076136 = (streams.DispatchThreadId_id1 + int3(0, -1, 0));
    float getTextureValue_3568610196 = TextureInput_1030055249_id12[result_1743076136];
    float output_1011477653 = getTextureValue_3568610196;
    float output_157241008 = 1;
    if (Assign_3804780081)
    {
        output_1011477653 = pressure_977671682;
        output_157241008 = 0;
    }
    int3 result_455694030 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_3871126202 = TextureInput_1224669504_id13[result_455694030];
    bool Assign_2623245101 = getTextureValue_3871126202 > 0;
    int3 result_2794857143 = (streams.DispatchThreadId_id1 + int3(0, 1, 0));
    float getTextureValue_1728893695 = TextureInput_1030055249_id12[result_2794857143];
    float output_3651333545 = getTextureValue_1728893695;
    float output_130014084 = 1;
    if (Assign_2623245101)
    {
        output_3651333545 = pressure_977671682;
        output_130014084 = 0;
    }
    int3 result_1888343787 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_500662851 = TextureInput_1224669504_id13[result_1888343787];
    bool Assign_336570903 = getTextureValue_500662851 > 0;
    int3 result_763218116 = (streams.DispatchThreadId_id1 + int3(0, 0, -1));
    float getTextureValue_3871361720 = TextureInput_1030055249_id12[result_763218116];
    float output_2387157143 = getTextureValue_3871361720;
    float output_3225176764 = 1;
    if (Assign_336570903)
    {
        output_2387157143 = pressure_977671682;
        output_3225176764 = 0;
    }
    int3 result_1000419584 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_2987249580 = TextureInput_1224669504_id13[result_1000419584];
    bool Assign_2140304645 = getTextureValue_2987249580 > 0;
    int3 result_803066107 = (streams.DispatchThreadId_id1 + int3(0, 0, 1));
    float getTextureValue_722934787 = TextureInput_1030055249_id12[result_803066107];
    float output_3711046089 = getTextureValue_722934787;
    float output_3373440750 = 1;
    if (Assign_2140304645)
    {
        output_3711046089 = pressure_977671682;
        output_3373440750 = 0;
    }
    float result_3032493358 = (output_2636867788 + output_107748336 + output_1011477653 + output_3651333545 + output_2387157143 + output_3711046089);
    float result_1660992025 = (result_3032493358 - divergence_271962606);
    float result_487412679 = (result_1660992025 / 6);
    pressure_977671682 = result_487412679;
    TextureInput_4267214576_id15[streams.DispatchThreadId_id1] = pressure_977671682;
}
void Compute_id3(inout CS_STREAMS streams)
{

    {
        Compute_id4(streams);
    }
}
void Compute_id2(inout CS_STREAMS streams)
{
    Compute_id3(streams);
}
[numthreads(8, 8, 8)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 8;
    streams.ThreadCountY_id8 = 8;
    streams.ThreadCountZ_id9 = 8;
    streams.ThreadCountPerGroup_id5 = 8 * 8 * 8;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id2(streams);
}
